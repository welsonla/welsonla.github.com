{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"source/robots.txt","path":"robots.txt","modified":0,"renderable":0},{"_id":"source/uploads/WX20170605-134929.png","path":"uploads/WX20170605-134929.png","modified":0,"renderable":0},{"_id":"source/uploads/cell-insets.png","path":"uploads/cell-insets.png","modified":0,"renderable":0},{"_id":"source/uploads/powerline.png","path":"uploads/powerline.png","modified":0,"renderable":0},{"_id":"source/uploads/xcode-rename-relation.png","path":"uploads/xcode-rename-relation.png","modified":0,"renderable":0},{"_id":"source/uploads/avatar.jpg","path":"uploads/avatar.jpg","modified":0,"renderable":0},{"_id":"source/uploads/xcode-rename.png","path":"uploads/xcode-rename.png","modified":0,"renderable":0},{"_id":"themes/crisp/source/fonts/BreeSerif-Regular.otf","path":"fonts/BreeSerif-Regular.otf","modified":0,"renderable":1},{"_id":"themes/crisp/source/fonts/BreeSerif-Regular.ttf","path":"fonts/BreeSerif-Regular.ttf","modified":0,"renderable":1},{"_id":"themes/crisp/source/fonts/BreeSerif-Regular.woff2","path":"fonts/BreeSerif-Regular.woff2","modified":0,"renderable":1},{"_id":"themes/crisp/source/fonts/opensans-regular-webfont.eot","path":"fonts/opensans-regular-webfont.eot","modified":0,"renderable":1},{"_id":"themes/crisp/source/fonts/opensans-regular-webfont.svg","path":"fonts/opensans-regular-webfont.svg","modified":0,"renderable":1},{"_id":"themes/crisp/source/fonts/opensans-regular-webfont.ttf","path":"fonts/opensans-regular-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/crisp/source/fonts/opensans-regular-webfont.woff","path":"fonts/opensans-regular-webfont.woff","modified":0,"renderable":1},{"_id":"themes/crisp/source/js/ga.js","path":"js/ga.js","modified":0,"renderable":1},{"_id":"themes/crisp/source/styles/crisp.css","path":"styles/crisp.css","modified":0,"renderable":1},{"_id":"source/uploads/WX20170525-112539.png","path":"uploads/WX20170525-112539.png","modified":0,"renderable":0},{"_id":"source/uploads/Halo65-intro.png","path":"uploads/Halo65-intro.png","modified":0,"renderable":0},{"_id":"source/uploads/Halo65.jpg","path":"uploads/Halo65.jpg","modified":0,"renderable":0},{"_id":"source/uploads/keyboard-halo65.JPG","path":"uploads/keyboard-halo65.JPG","modified":0,"renderable":0},{"_id":"source/uploads/caps.jpg","path":"uploads/caps.jpg","modified":0,"renderable":0}],"Cache":[{"_id":"themes/crisp/.git","hash":"0c3e1ef2b889090ed82f9cfb2d875216b78dc4c8","modified":1577855738000},{"_id":"themes/crisp/.gitignore","hash":"854da42f35444ed19a8164cb7c213f66ae0e178c","modified":1577855738000},{"_id":"themes/crisp/README.md","hash":"83a04d8786c866ab0b3c4aa786733747c7bc8824","modified":1577887142000},{"_id":"themes/crisp/_config.yml","hash":"59b6ceb7248f829b648b8b955dee55b9a4d8a92a","modified":1577855738000},{"_id":"themes/crisp/LICENSE","hash":"7bc66e9632b475079619f585722930b551c3c081","modified":1577855738000},{"_id":"source/CNAME","hash":"c3185a4690a126a2377cc1ac0a40e3eaa9268008","modified":1577845422000},{"_id":"source/google2de6df67ca2f1b55.html","hash":"94fb560649f21ed4900edb5b6020b2119acf07c8","modified":1577983713000},{"_id":"source/robots.txt","hash":"daf18fcc56c7245dfbfc913478554528bcb18126","modified":1577845422000},{"_id":"themes/crisp/layout/archive.ejs","hash":"36e89b37f520533bef85fb32b714214257fad1d0","modified":1577857298000},{"_id":"themes/crisp/layout/category.ejs","hash":"a42381a1635bfeb829a97eafb0e2dd3891eb971b","modified":1577855738000},{"_id":"themes/crisp/layout/index.ejs","hash":"36e89b37f520533bef85fb32b714214257fad1d0","modified":1577855738000},{"_id":"themes/crisp/layout/page.ejs","hash":"e1c5903079fc342915025cfad9cf9e70a5cd83cc","modified":1577855738000},{"_id":"themes/crisp/layout/post.ejs","hash":"ae761feddc98f4d3260e7591ed9fc91d9a49d0ab","modified":1577855738000},{"_id":"themes/crisp/layout/tag.ejs","hash":"5d8f22da9d3662c647599faaf21f02477432d556","modified":1577855738000},{"_id":"themes/crisp/layout/layout.ejs","hash":"3b34e6f24bc37d56ac69e9e3d49980332ae66ee9","modified":1577984336000},{"_id":"source/_posts/2013-04-10-build-your-mac-os.markdown","hash":"0b72f27a3d2ccb54dacf8919c54a31fd1dbb2169","modified":1577845422000},{"_id":"source/_posts/2013-04-10-use-cocoapods.markdown","hash":"b944682b8b11960a28a36ece2747baacd63f57b0","modified":1577845422000},{"_id":"source/_posts/2013-04-10-generate-github-ssh-keys.markdown","hash":"0698bbf766d4dfdd8683a0d855832f018eed35e6","modified":1577845422000},{"_id":"source/_posts/2013-04-10-use-rvm-install-ruby.markdown","hash":"35ec08eae05395eceffc7b176a7f843c19e0c8fc","modified":1577845422000},{"_id":"source/_posts/2013-05-10-blog-with-github.markdown","hash":"259e3eb57b208cf9bfb3c95112f6c0aa30f76438","modified":1577845422000},{"_id":"source/_posts/2013-05-10-different-of-class-and-category.markdown","hash":"5d8e46b89af18bc87d26a52249f4aba00ed3f6f2","modified":1577845422000},{"_id":"source/_posts/2013-06-03-blog-with-github-2.markdown","hash":"e34e3e3e76a7fa760301bca8516807b340d373a3","modified":1577845422000},{"_id":"source/_posts/2013-06-03-blog-with-github-3.markdown","hash":"305cf3bc0a69a42ef911412b423d867b434eab2a","modified":1577845422000},{"_id":"source/_posts/2013-06-03-blog-with-github-4.markdown","hash":"b3cb0c22c4c6234bfd8385382d3366f54feedea6","modified":1577845422000},{"_id":"source/_posts/2013-06-25-git-note.markdown","hash":"750495469463d5cc0dcabef6e37b81dba8d61b52","modified":1577845422000},{"_id":"source/_posts/2013-07-06-vim-note.markdown","hash":"e313c62d39249799d2180ffff3c72217a863e169","modified":1577845422000},{"_id":"source/_posts/2013-08-06-generate-new-host-rsa-key.markdown","hash":"108b62f6bb7500967ac411778300d46c873442f1","modified":1577845422000},{"_id":"source/_posts/2013-08-13-encrypt-sqlite-with-sqlcipher.markdown","hash":"a21b917cf458ea0aa2ffa15caa429801161f3370","modified":1577845422000},{"_id":"source/_posts/2014-01-02-my-2013.markdown","hash":"bc1f7a780349dd4b0310e2a4af28eb7758b3a0cf","modified":1577845422000},{"_id":"source/_posts/2014-04-12-why-my-mac-so-slow.markdown","hash":"8492e963232bd2ab3547335ef054ebdccc365b40","modified":1577845422000},{"_id":"source/_posts/2014-05-11-learn-core-animation-the-hard-way.markdown","hash":"793eb1a634ede37540cb10b0dde5ddcf43f16674","modified":1577845422000},{"_id":"source/_posts/2014-07-14-instrument-start-fail.markdown","hash":"98c2ae909d2b64b615524c51752e1a01232b27e8","modified":1577845422000},{"_id":"source/_posts/2014-07-14-xcode5-install-command-line-tools.markdown","hash":"dc05e48132d397388aff009a1f0984333e4a56ec","modified":1577845422000},{"_id":"source/_posts/2014-09-05-cocoa-tidy-write.markdown","hash":"848658c17cb1da0d34e80adb576d46d8275e039d","modified":1577845422000},{"_id":"source/_posts/2014-11-22-mac-mini-show.markdown","hash":"7ae74234ee652fd9f88b8afc84d167ecc464ab06","modified":1577845422000},{"_id":"source/_posts/2015-02-01-my-2014.md","hash":"10efc2e24f5f386df6d3f0a5c00fd6d0c56090bd","modified":1577845422000},{"_id":"source/_posts/2015-04-12-rails-code-snippets.markdown","hash":"318e13b96e622b4782b49efa05276a3618368c19","modified":1577845422000},{"_id":"source/_posts/2015-05-04-something-about-xctest.markdown","hash":"8c6c1ac21ef7c38b49fad6f642ba64e62770e890","modified":1577845422000},{"_id":"source/_posts/2015-07-13-application-transport-security-in-ios9.markdown","hash":"b97b1d863e773965a8a202a59d894435374225a7","modified":1577845422000},{"_id":"source/_posts/2015-10-09-why-mantle.markdown","hash":"10d308be05cc42452abed5998658cf18336f9dd9","modified":1577845422000},{"_id":"source/_posts/2016-01-27-Objective-c-to-Swift.md","hash":"8f31e1b26b218b1eefc292ca4b18b5894d1c9760","modified":1577845422000},{"_id":"source/_posts/2016-02-29-the-day-of-2-29.md","hash":"ffaa9d14d82d4f48293858dccdeb05fe04b385f4","modified":1577845422000},{"_id":"source/_posts/2016-03-23-Mac-Tips.md","hash":"eb4a24fbff28ae23cd980ba25a7e7c967fafe88a","modified":1577856637000},{"_id":"source/_posts/2016-03-23-iOS-Tips.md","hash":"87ad903c37150260b98a609eb4b5b5f13b73d045","modified":1577856628000},{"_id":"source/_posts/2016-12-08-multiple-ssh-key-config.md","hash":"ee991afa46d97bd520b34f930c834937b32f5ced","modified":1577845422000},{"_id":"source/_posts/2017-07-13-heroku-command.md","hash":"e05955b8a1c1e6a48048efee404310108cc49738","modified":1577845422000},{"_id":"source/_posts/2017-07-13-using-fastlane.md","hash":"96bc6304820892240496b67206092b85c2bbeed2","modified":1577845422000},{"_id":"source/_posts/2017-08-10-Xcode-buildid-autoincrement.md","hash":"bd302fddacc51537c2855a9b39702c28be777972","modified":1577845422000},{"_id":"source/_posts/2018-05-30-let-react-native-shell-open-in-iterm.md","hash":"8e89eda7bfb9a76ab7b95d1d27ccf1d8e3adfa3b","modified":1577845422000},{"_id":"source/_posts/2019-06-13-iterm-with-powerline-theme.md","hash":"01eb9242e98ef193a3e6a513c1759305abf3deb7","modified":1577845422000},{"_id":"source/_posts/2020-01-01-Mac-Diskspace-release.md","hash":"5e001fd9bd177c83299c38275609122650cf1d8d","modified":1577869027000},{"_id":"source/_posts/2020-01-01-composer-and-laravel-setup.md","hash":"8efa18ceae1a522173304421660d741104fc167d","modified":1577856609000},{"_id":"source/_posts/github","hash":"d5821a4d6654c9fdcf64d950a5738c29cd98feea","modified":1577845422000},{"_id":"source/_posts/github.pub","hash":"e466341fee2f5f15431ce9deafce00ea3ebc4dde","modified":1577845422000},{"_id":"source/_posts/start-using-hexo.md","hash":"4a2629540c0e785ab0d7e594b274d7044990c139","modified":1577845422000},{"_id":"source/_posts/hello-world.md","hash":"34cc400ee5dc3312dd17324df577005c279a5251","modified":1577845422000},{"_id":"source/_posts/2020-11-28-speed-up-maven.md","hash":"ca5d264e17e33ead07d89e6c80f84ca683f9173d","modified":1669645277292},{"_id":"source/about/index.md","hash":"83b14d8d59265e19fbea52dd750406dfccc75853","modified":1577845422000},{"_id":"source/categories/index.md","hash":"3cdaab825725aeb1bb74ee77381bd8d3180a14e6","modified":1577845422000},{"_id":"source/list/index.md","hash":"500405a24cfdba465f30ded0e8d0c2b9d149abca","modified":1577845422000},{"_id":"source/uploads/2013-04-10-the-time-past-so-quick.markdown","hash":"f751fb26cfa1e36b5bd2d1e5d9410258b684df9d","modified":1577845422000},{"_id":"source/uploads/WX20170605-134929.png","hash":"bd796c5f8579f68c5d1fdb9591c37a22144a08f0","modified":1577845422000},{"_id":"source/uploads/cell-insets.png","hash":"7c68bfa13c4da8d34013a600bb83d3fc653b3328","modified":1577845422000},{"_id":"source/uploads/powerline.png","hash":"3a3c48dae2b3f93659f3873c7c5c98ed4dbecf97","modified":1577845422000},{"_id":"source/uploads/xcode-rename-relation.png","hash":"bb25bf59eabd251ecbeec00e9447b081751711c8","modified":1577845422000},{"_id":"source/uploads/avatar.jpg","hash":"e3840ba67be1125f59a4113a7273f9d4be787e9a","modified":1577845422000},{"_id":"source/uploads/xcode-rename.png","hash":"39ea594a7c58e9e588f66ee5759764c8674de790","modified":1577845422000},{"_id":"themes/crisp/layout/_partial/archive.ejs","hash":"36e89b37f520533bef85fb32b714214257fad1d0","modified":1577857298000},{"_id":"themes/crisp/layout/_partial/category.ejs","hash":"aaf4c61ddcc5e8a2dabede0f3b482cd9aea9434d","modified":1577855738000},{"_id":"themes/crisp/layout/_partial/index.ejs","hash":"b0853b54d48d84089bc87839d6016877dabe3e61","modified":1577859898000},{"_id":"themes/crisp/layout/_partial/page.ejs","hash":"3c4a7f68dcf7c205512069c9da99c9ff9d6ac3ef","modified":1577859900000},{"_id":"themes/crisp/layout/_partial/follow.ejs","hash":"927ca53709cae4911b5966270280bd5663c3098d","modified":1577984203000},{"_id":"themes/crisp/layout/_partial/post.ejs","hash":"6f7a6730c11300af14b9caf451c3ceb8dc810ea3","modified":1577859899000},{"_id":"themes/crisp/source/fonts/BreeSerif-Regular.otf","hash":"f982b73492d5d6c82aa684f6bce894c63f6b2c79","modified":1577855738000},{"_id":"themes/crisp/source/fonts/BreeSerif-Regular.ttf","hash":"9e42f8b3aa1e670934ecaab1a4060a00f17fa2ed","modified":1577855738000},{"_id":"themes/crisp/source/fonts/BreeSerif-Regular.woff2","hash":"9407e77734344a53e33ef703dc40024d941f6280","modified":1577855738000},{"_id":"themes/crisp/source/fonts/opensans-regular-webfont.eot","hash":"606c985eaaef071488c12e5ea0a985d5b545eae7","modified":1577855738000},{"_id":"themes/crisp/source/fonts/opensans-regular-webfont.svg","hash":"dce2b68dd6b6c28b773994e35e4fc3e0e539ffdf","modified":1577855738000},{"_id":"themes/crisp/source/fonts/opensans-regular-webfont.ttf","hash":"6d72a9e751414873228dd1c43ec7b16da1c2a285","modified":1577855738000},{"_id":"themes/crisp/source/fonts/opensans-regular-webfont.woff","hash":"d6f86451bee7c843a0c23e61995e25927abb176a","modified":1577855738000},{"_id":"themes/crisp/source/js/ga.js","hash":"a96d26c095fac491b4d48a32d60e4ee46a208a19","modified":1577855738000},{"_id":"themes/crisp/source/styles/crisp.css","hash":"cf59dd317bb94a90e5947ce9156ac724bcead1f4","modified":1577859897000},{"_id":"source/uploads/WX20170525-112539.png","hash":"44e318657fe38c46bb8d84f4a499d38fef68f3ed","modified":1577845422000},{"_id":"themes/crisp/screenshot.png","hash":"d0ea355c7da51f97ae0781f0ccaa7cea3ca6268e","modified":1577855738000},{"_id":"source/_posts/2022-11-28-Hello-Nuphy-Halo-65.md","hash":"1fa8d4aa473c9175ebeecc9157ad2fba0fdfc6fe","modified":1669650698969},{"_id":"source/uploads/Halo65-intro.png","hash":"1f201119a726059a7e2998c75e9e8e419e724f9a","modified":1669645196802},{"_id":"source/uploads/Halo65.jpg","hash":"d2d2380db2da011f8f57fbd06addd2c5466e132f","modified":1669649808936},{"_id":"source/uploads/keyboard-halo65.JPG","hash":"d4fd3ed936aacb5dc3f0755805ea81480afcbd04","modified":1669650593773},{"_id":"source/uploads/caps.jpg","hash":"dfc7daeb4628cc4d8d02c9d5c5a91d43c8c468e4","modified":1669650599505},{"_id":"public/search.xml","hash":"c22fb41a9787347cb05e4c98c95d4de7cfeb3000","modified":1669651725492},{"_id":"public/atom.xml","hash":"c597a65c68f3515d78d335b124b30307b535cd41","modified":1669651725492},{"_id":"public/sitemap.xml","hash":"da11a871a0c2ad295104ace01371702201a3cc09","modified":1669651725492},{"_id":"public/baidusitemap.xml","hash":"c7af426ebde63e4baf298576401586cd64b02f26","modified":1669651725492},{"_id":"public/google2de6df67ca2f1b55.html","hash":"c3df4b5ce4fcee48dfd8262cb8b838819a106f51","modified":1669652400512},{"_id":"public/about/index.html","hash":"58d6c0d77f884b256100fa21ae295d86cf96f106","modified":1669652400512},{"_id":"public/list/index.html","hash":"7664a6ce3e8af612c812539cb640e52e8a20b58e","modified":1669652400512},{"_id":"public/categories/index.html","hash":"579ed896911daa0c55df3a2501798b4ab9c6929a","modified":1669652400512},{"_id":"public/uploads/2013-04-10-the-time-past-so-quick.html","hash":"fb27cbe6d26cd643792d6615edfc8dc1ae6da263","modified":1669652400512},{"_id":"public/2022/11/28/Hello-Nuphy-Halo-65/index.html","hash":"e0e03dcfbc7c0c17969209b85382f891dbd3f8c5","modified":1669652400512},{"_id":"public/2020/11/28/speed-up-maven/index.html","hash":"21d73f498350771f7391f68702cf18f2783c7cfc","modified":1669652400512},{"_id":"public/2020/01/01/Mac-Diskspace-release/index.html","hash":"c87f07d032fffedd27b37c4d6a3b5a1c1b44e18f","modified":1669652400512},{"_id":"public/2020/01/01/composer-and-laravel-setup/index.html","hash":"709b4a0dd0ba72d2e430f2588316dfd3d30fffaf","modified":1669652400512},{"_id":"public/2019/06/13/iterm-with-powerline-theme/index.html","hash":"a0f704b646c3cf91bec3685d215a95f872cde059","modified":1669652400512},{"_id":"public/2017/08/10/Xcode-buildid-autoincrement/index.html","hash":"ba3a61a9ef220a068269e94b181cb4c0180a7c6d","modified":1669652400512},{"_id":"public/2018/05/30/let-react-native-shell-open-in-iterm/index.html","hash":"0eccb2eadd3679392edd572e517cb867470da5f9","modified":1669652400512},{"_id":"public/2017/07/13/heroku-command/index.html","hash":"315b481c07b1a5f9659654acaffc8d872baaf27d","modified":1669652400512},{"_id":"public/2016/12/08/multiple-ssh-key-config/index.html","hash":"de685ace3d005fb16052c65f09eada1c194eb860","modified":1669652400512},{"_id":"public/2016/03/23/iOS-Tips/index.html","hash":"50c888a5e01fdcf952b24b8505f5a6159d14b79a","modified":1669652400512},{"_id":"public/2016/03/23/Mac-Tips/index.html","hash":"4f45e115d903e2e8dc772cf6cc9b0b0180b7c31f","modified":1669652400512},{"_id":"public/2016/02/29/the-day-of-2-29/index.html","hash":"255fb34c60d70aeec43b3415e432809dda511f3f","modified":1669652400512},{"_id":"public/2016/01/27/Objective-c-to-Swift/index.html","hash":"f579ff6c3ae24b4ff4626b9439ecb05e7f24186f","modified":1669652400512},{"_id":"public/2015/10/10/start-using-hexo/index.html","hash":"46dd2737915fb0e37bebad06832f2cd2cefe1283","modified":1669652400512},{"_id":"public/2015/10/10/hello-world/index.html","hash":"9d584fe98712667ee41eb148df610508c1ebed3d","modified":1669652400512},{"_id":"public/2015/04/12/rails-code-snippets/index.html","hash":"1cd8937ecc9925ae0af8a3cd9bd9091a6d74a6b6","modified":1669652400512},{"_id":"public/2015/02/01/my-2014/index.html","hash":"8a13462ede204ad46d236ce3db9cbb8ee3f07627","modified":1669652400512},{"_id":"public/2014/11/22/mac-mini-show/index.html","hash":"f8eac323a22921d12ed5f84041381c87b2174649","modified":1669652400512},{"_id":"public/2014/09/05/cocoa-tidy-write/index.html","hash":"337a85f55a4144f058842730e408a1ce5cc09f0e","modified":1669652400512},{"_id":"public/2014/07/14/xcode5-install-command-line-tools/index.html","hash":"48eb3bcd458d41c817bbab52a4e7e91cad967e34","modified":1669652400512},{"_id":"public/2014/07/14/instrument-start-fail/index.html","hash":"16f6d5a6078a38d2baaaeb2a6628aca1fa50b0d5","modified":1669652400512},{"_id":"public/2014/05/11/learn-core-animation-the-hard-way/index.html","hash":"56f88292dc7d10a0d74bc85755eaabb1f8105d17","modified":1669652400512},{"_id":"public/2014/04/12/why-my-mac-so-slow/index.html","hash":"8aa9df10de812212c6aea88f1fc23a7d50ffdc9b","modified":1669652400512},{"_id":"public/2014/01/02/my-2013/index.html","hash":"88122c03d5c0ac792e30a13f1dedd3593aa48814","modified":1669652400512},{"_id":"public/2013/08/13/encrypt-sqlite-with-sqlcipher/index.html","hash":"6d44af2f547385b2297cf171ae158774c660c577","modified":1669652400512},{"_id":"public/2013/08/06/generate-new-host-rsa-key/index.html","hash":"5485638c4ef267482b5ba96820f68d7b56675425","modified":1669652400512},{"_id":"public/2015/07/13/application-transport-security-in-ios9/index.html","hash":"5f1bcbcda9530e898fec610d4b49f4f16e2f4194","modified":1669652400512},{"_id":"public/2013/07/06/vim-note/index.html","hash":"6bfb7b04e533a35fe8fd572adaf753e6734720a6","modified":1669652400512},{"_id":"public/2013/06/25/git-note/index.html","hash":"0c8254d6233dafd269c344a783cf9c2372249f04","modified":1669652400512},{"_id":"public/2013/06/03/blog-with-github-4/index.html","hash":"19d144f1c78eaa2f8d053d956ff69c44a2438aa4","modified":1669652400512},{"_id":"public/2013/06/03/blog-with-github-3/index.html","hash":"504f07371c6f9c01104f50b86c04910682fd4435","modified":1669652400512},{"_id":"public/2013/06/03/blog-with-github-2/index.html","hash":"d6f32cffc092f808c1227e3383655b4bc0b9166f","modified":1669652400512},{"_id":"public/2013/05/10/blog-with-github/index.html","hash":"5449bc18af5543071810db76517fdfefabcf9a01","modified":1669652400512},{"_id":"public/2013/05/10/different-of-class-and-category/index.html","hash":"0eaa6d2e3191899d443cf1166c53753cd54bb0fe","modified":1669652400512},{"_id":"public/2013/04/10/generate-github-ssh-keys/index.html","hash":"ccec6f18c7712cd030a3e1a70d164f505866102c","modified":1669652400512},{"_id":"public/2013/04/10/use-rvm-install-ruby/index.html","hash":"c9fd3f821525ab6d527098877ffbf0b70e8cc0a4","modified":1669652400512},{"_id":"public/2013/04/10/use-cocoapods/index.html","hash":"b3a432c555360ebaec2293c3df790359c54ad011","modified":1669652400512},{"_id":"public/2013/04/10/build-your-mac-os/index.html","hash":"88fa1a3a71639570850061900886fe99a042e897","modified":1669652400512},{"_id":"public/categories/life/index.html","hash":"f63a1fe2599163b5f6c8d1a7a177751db9fa79f0","modified":1669652400512},{"_id":"public/categories/iOS/index.html","hash":"4a8fcb8c2d9514f15228ad6f6f46d1365d46b5b9","modified":1669652400512},{"_id":"public/categories/技术随笔/index.html","hash":"23db91c36331b363e777b13310a08e4388194e9f","modified":1669652400512},{"_id":"public/categories/git/index.html","hash":"621f48e04f339b9d52fbfe5e90a2ea1b87f85e6e","modified":1669652400512},{"_id":"public/categories/工具控/index.html","hash":"06dfc71e2e1e2dce1f983ca4f5f0b13f1cfd79ee","modified":1669652400512},{"_id":"public/categories/随笔/index.html","hash":"de8e2bab422d759ab04557893049cef21ec0c364","modified":1669652400512},{"_id":"public/categories/ruby/index.html","hash":"08d0e1568503a86866df5c99eb479b1d7a694f32","modified":1669652400512},{"_id":"public/categories/自动化/index.html","hash":"655a75a2bcdf42521e0fd57f1ca8ab64020a7496","modified":1669652400512},{"_id":"public/categories/Mac/index.html","hash":"509c69c53cc2504b699b46abe5918cad58374da0","modified":1669652400512},{"_id":"public/categories/PHP/index.html","hash":"8d21fa6e3a45828901bf405708bc7ed87b30c5cb","modified":1669652400512},{"_id":"public/categories/something/index.html","hash":"1b7d4f8b97bb98ab1594736f91160410299bad84","modified":1669652400512},{"_id":"public/index.html","hash":"00047aadba4462001cd850f8e1b6fd8121de9ccd","modified":1669652400512},{"_id":"public/page/2/index.html","hash":"8fab4619b9529b61a044ad7952d644db51b40d15","modified":1669652400512},{"_id":"public/page/3/index.html","hash":"b860b931c502910b0cef319abca8a77b5b799abe","modified":1669652400512},{"_id":"public/archives/index.html","hash":"17e9ef024281d59d6b78c9b224efe42360083d74","modified":1669652400512},{"_id":"public/archives/page/2/index.html","hash":"3f8e6fbf4c2d3b78a3b8f6c1d03fd85fc1ce335b","modified":1669652400512},{"_id":"public/archives/page/3/index.html","hash":"1313ea47b7df4e87b684aad845d8db5fafb7ca7a","modified":1669652400512},{"_id":"public/archives/2013/index.html","hash":"fcb8264703f77efe8f684d628c0603c6096177df","modified":1669652400512},{"_id":"public/archives/2013/04/index.html","hash":"e83b237e2396a880401ddea41267efa3c77444b1","modified":1669652400512},{"_id":"public/archives/2013/05/index.html","hash":"ff16bc76469f4430d15fdf50fe62964ee5452491","modified":1669652400512},{"_id":"public/archives/2013/06/index.html","hash":"fb93c6acb9c4e59e83cb024bb762fbe8e3973a36","modified":1669652400512},{"_id":"public/archives/2013/07/index.html","hash":"1f528c9fd3b307f42bb41f80798b7c6def53b163","modified":1669652400512},{"_id":"public/archives/2013/08/index.html","hash":"b8d2e4da2de4591c11211cfad8d4d68a02b635f4","modified":1669652400512},{"_id":"public/archives/2014/index.html","hash":"134ade9e86a9a5f07627cc8dae03f30c77601795","modified":1669652400512},{"_id":"public/archives/2014/01/index.html","hash":"e7cef46cee9126df673cd005f82b7ef447ef55e9","modified":1669652400512},{"_id":"public/archives/2014/04/index.html","hash":"b4c44ceda01fc809724b1c86d86bf0e13b7d7bf6","modified":1669652400512},{"_id":"public/archives/2014/05/index.html","hash":"543f77427ef1a7a98ff57bbcc2a997cb7f48e4b2","modified":1669652400512},{"_id":"public/archives/2014/07/index.html","hash":"86d0da6192110ef0c376fc8ee499caac90288b16","modified":1669652400512},{"_id":"public/archives/2014/09/index.html","hash":"7e0a196e4a93277129fb49b28cba46c06f726ab8","modified":1669652400512},{"_id":"public/archives/2014/11/index.html","hash":"4290f3fe1a0c98a72e4afbcdcab86ec67f6d44e1","modified":1669652400512},{"_id":"public/archives/2015/index.html","hash":"bf8110b1166e286127e7f5b6343cbcb34ab6fe57","modified":1669652400512},{"_id":"public/archives/2015/02/index.html","hash":"bd28db0e6f10d64734a08b042f3956e7b34bdf31","modified":1669652400512},{"_id":"public/archives/2015/04/index.html","hash":"30873af5f1377a0525731491a854fde55d413489","modified":1669652400512},{"_id":"public/archives/2015/05/index.html","hash":"aa1dd2618c9e1a793686b294e4aea12a2cce918e","modified":1669652400512},{"_id":"public/archives/2015/07/index.html","hash":"73a50f845fde01bb38ec0a70f0f65ea6c79843d2","modified":1669652400512},{"_id":"public/archives/2015/10/index.html","hash":"9cb0b72c6a88896cb5b7379e20716cde92374463","modified":1669652400512},{"_id":"public/archives/2016/index.html","hash":"cd5ecb4c0c9045ad7394950794c04cef801e2c63","modified":1669652400512},{"_id":"public/archives/2016/01/index.html","hash":"983667a69f5cf9bfdd23b83bf7523f700e046db6","modified":1669652400512},{"_id":"public/archives/2016/02/index.html","hash":"dca910f4d5a7f53ad277116af8dd7d54226b4e31","modified":1669652400512},{"_id":"public/archives/2016/03/index.html","hash":"2e23ca22675038a23780313551fc460339c07dcb","modified":1669652400512},{"_id":"public/archives/2016/12/index.html","hash":"c48ca271e83c3fb7f512ca53773212e3a25e75b0","modified":1669652400512},{"_id":"public/archives/2017/index.html","hash":"53e2b06ff696f7ea2a97020407d75588acbb17b3","modified":1669652400512},{"_id":"public/archives/2017/07/index.html","hash":"956eeb2415df560bd6263b04271a6dbeaf750160","modified":1669652400512},{"_id":"public/archives/2017/08/index.html","hash":"ae0c88ccf168acff0520d74c31acdb5812826d5d","modified":1669652400512},{"_id":"public/archives/2018/index.html","hash":"a4dda8dabe905f63c63fec9f125ed169d674ec69","modified":1669652400512},{"_id":"public/archives/2018/05/index.html","hash":"0a8c1bab49511bdc562db2ea961e5f7d8d3f8baf","modified":1669652400512},{"_id":"public/archives/2019/index.html","hash":"83e4966dae8442f661483d28a041634d42d4e052","modified":1669652400512},{"_id":"public/archives/2019/06/index.html","hash":"5282a04611c269213897f980fbc8810489ebf6d7","modified":1669652400512},{"_id":"public/archives/2020/index.html","hash":"cf46135d9a3a855799a57cba761a987501c19670","modified":1669652400512},{"_id":"public/archives/2020/01/index.html","hash":"c538ab05ca07870cbeaa490af6499834d57bf226","modified":1669652400512},{"_id":"public/archives/2020/11/index.html","hash":"a693e44c062d73929adda2d2d4d24d209cdf407b","modified":1669652400512},{"_id":"public/archives/2022/index.html","hash":"1d6708f474ae8db3feeb40a9b53dc3efe62025fb","modified":1669652400512},{"_id":"public/archives/2022/11/index.html","hash":"e49f22a513cf24bc7536497f1b7856f3a27b31b8","modified":1669652400512},{"_id":"public/2017/07/13/using-fastlane/index.html","hash":"83e0d2e0d35a10b15ab2fdba55b3b21dd0c4b3ce","modified":1669652400512},{"_id":"public/2015/10/08/why-mantle/index.html","hash":"c2b382457f8eed8cb840cbc1ca7cb133ea4aeaf0","modified":1669652400512},{"_id":"public/2015/05/04/something-about-xctest/index.html","hash":"f786a0bf8a342e91ea9b84990e7bd83b747c94ff","modified":1669652400512}],"Category":[{"name":"life","_id":"clb0uhkbi0005o63kbqo8dnnu"},{"name":"iOS","_id":"clb0uhkbs000bo63k9liws106"},{"name":"技术随笔","_id":"clb0uhkbx000fo63k278xhdwz"},{"name":"git","_id":"clb0uhkcf0011o63k5hidfr0f"},{"name":"工具控","_id":"clb0uhkcn0017o63k0rnwfsqt"},{"name":"随笔","_id":"clb0uhkcx001io63k6dr9hg4k"},{"name":"ruby","_id":"clb0uhkd1001no63kpwcjvnfz"},{"name":"自动化","_id":"clb0uhkdd0023o63kssuqgq44"},{"name":"Mac","_id":"clb0uhkdv002bo63kv6fvrf1z"},{"name":"PHP","_id":"clb0uhkdy002go63k31wodbx9"},{"name":"something","_id":"clb0uhkdz002io63k23n5k9ja"}],"Data":[],"Page":[{"_content":"google-site-verification: google2de6df67ca2f1b55.html","source":"google2de6df67ca2f1b55.html","raw":"google-site-verification: google2de6df67ca2f1b55.html","date":"2022-08-17T15:11:35.157Z","updated":"2020-01-02T16:48:33.000Z","path":"google2de6df67ca2f1b55.html","title":"","comments":1,"layout":"page","_id":"clb0uhkab0000o63kpbkchofz","content":"google-site-verification: google2de6df67ca2f1b55.html","site":{"data":{}},"excerpt":"","more":"google-site-verification: google2de6df67ca2f1b55.html"},{"title":"about","date":"2015-10-10T07:59:42.000Z","_content":"\n### Welsonla\n\n男 已婚\n\nObject-c, Swift , PHP ,Ruby on Rails\n\n\n只是一个喜欢技术并且想安安心心做技术的人，喜欢开源，乐于分享，最近在学习Ruby on rails\n\n\n### 在社交网站上关注我\n1. [github](https://github.com/welsonla)\n2. [twitter](https://twitter.com/welsonla)\n\n# 我的iOS作品  \n#### [晴天](https://itunes.apple.com/app/apple-store/id585544395?pt=1829602&ct=blog&mt=8)  \n> 一款简洁的天气应用\n\n#### [PassBoxes](http://itunes.apple.com/app/id663329564)  \n> 管理你所有的密码\n\n# 写过的Mac小工具\n#### [SQLCipherExport](https://github.com/welsonla/SQLCipherExport)  \n> 将SQLite进行AES256加密解密转换的工具\n\n#### [ModelBot](https://github.com/TimeBots/ModelBot)  \n> 将JSON生成NSObject，MTLModel(Mantle),Swift, ObjectMapper实体类的工具\n","source":"about/index.md","raw":"title: about\ndate: 2015-10-10 15:59:42\n---\n\n### Welsonla\n\n男 已婚\n\nObject-c, Swift , PHP ,Ruby on Rails\n\n\n只是一个喜欢技术并且想安安心心做技术的人，喜欢开源，乐于分享，最近在学习Ruby on rails\n\n\n### 在社交网站上关注我\n1. [github](https://github.com/welsonla)\n2. [twitter](https://twitter.com/welsonla)\n\n# 我的iOS作品  \n#### [晴天](https://itunes.apple.com/app/apple-store/id585544395?pt=1829602&ct=blog&mt=8)  \n> 一款简洁的天气应用\n\n#### [PassBoxes](http://itunes.apple.com/app/id663329564)  \n> 管理你所有的密码\n\n# 写过的Mac小工具\n#### [SQLCipherExport](https://github.com/welsonla/SQLCipherExport)  \n> 将SQLite进行AES256加密解密转换的工具\n\n#### [ModelBot](https://github.com/TimeBots/ModelBot)  \n> 将JSON生成NSObject，MTLModel(Mantle),Swift, ObjectMapper实体类的工具\n","updated":"2020-01-01T02:23:42.000Z","path":"about/index.html","comments":1,"layout":"page","_id":"clb0uhkbe0002o63kjik3tw4s","content":"<h3 id=\"Welsonla\"><a href=\"#Welsonla\" class=\"headerlink\" title=\"Welsonla\"></a>Welsonla</h3><p>男 已婚</p>\n<p>Object-c, Swift , PHP ,Ruby on Rails</p>\n<p>只是一个喜欢技术并且想安安心心做技术的人，喜欢开源，乐于分享，最近在学习Ruby on rails</p>\n<h3 id=\"在社交网站上关注我\"><a href=\"#在社交网站上关注我\" class=\"headerlink\" title=\"在社交网站上关注我\"></a>在社交网站上关注我</h3><ol>\n<li><a href=\"https://github.com/welsonla\" target=\"_blank\" rel=\"noopener\">github</a></li>\n<li><a href=\"https://twitter.com/welsonla\" target=\"_blank\" rel=\"noopener\">twitter</a></li>\n</ol>\n<h1 id=\"我的iOS作品\"><a href=\"#我的iOS作品\" class=\"headerlink\" title=\"我的iOS作品\"></a>我的iOS作品</h1><h4 id=\"晴天\"><a href=\"#晴天\" class=\"headerlink\" title=\"晴天\"></a><a href=\"https://itunes.apple.com/app/apple-store/id585544395?pt=1829602&amp;ct=blog&amp;mt=8\" target=\"_blank\" rel=\"noopener\">晴天</a></h4><blockquote>\n<p>一款简洁的天气应用</p>\n</blockquote>\n<h4 id=\"PassBoxes\"><a href=\"#PassBoxes\" class=\"headerlink\" title=\"PassBoxes\"></a><a href=\"http://itunes.apple.com/app/id663329564\" target=\"_blank\" rel=\"noopener\">PassBoxes</a></h4><blockquote>\n<p>管理你所有的密码</p>\n</blockquote>\n<h1 id=\"写过的Mac小工具\"><a href=\"#写过的Mac小工具\" class=\"headerlink\" title=\"写过的Mac小工具\"></a>写过的Mac小工具</h1><h4 id=\"SQLCipherExport\"><a href=\"#SQLCipherExport\" class=\"headerlink\" title=\"SQLCipherExport\"></a><a href=\"https://github.com/welsonla/SQLCipherExport\" target=\"_blank\" rel=\"noopener\">SQLCipherExport</a></h4><blockquote>\n<p>将SQLite进行AES256加密解密转换的工具</p>\n</blockquote>\n<h4 id=\"ModelBot\"><a href=\"#ModelBot\" class=\"headerlink\" title=\"ModelBot\"></a><a href=\"https://github.com/TimeBots/ModelBot\" target=\"_blank\" rel=\"noopener\">ModelBot</a></h4><blockquote>\n<p>将JSON生成NSObject，MTLModel(Mantle),Swift, ObjectMapper实体类的工具</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"Welsonla\"><a href=\"#Welsonla\" class=\"headerlink\" title=\"Welsonla\"></a>Welsonla</h3><p>男 已婚</p>\n<p>Object-c, Swift , PHP ,Ruby on Rails</p>\n<p>只是一个喜欢技术并且想安安心心做技术的人，喜欢开源，乐于分享，最近在学习Ruby on rails</p>\n<h3 id=\"在社交网站上关注我\"><a href=\"#在社交网站上关注我\" class=\"headerlink\" title=\"在社交网站上关注我\"></a>在社交网站上关注我</h3><ol>\n<li><a href=\"https://github.com/welsonla\" target=\"_blank\" rel=\"noopener\">github</a></li>\n<li><a href=\"https://twitter.com/welsonla\" target=\"_blank\" rel=\"noopener\">twitter</a></li>\n</ol>\n<h1 id=\"我的iOS作品\"><a href=\"#我的iOS作品\" class=\"headerlink\" title=\"我的iOS作品\"></a>我的iOS作品</h1><h4 id=\"晴天\"><a href=\"#晴天\" class=\"headerlink\" title=\"晴天\"></a><a href=\"https://itunes.apple.com/app/apple-store/id585544395?pt=1829602&amp;ct=blog&amp;mt=8\" target=\"_blank\" rel=\"noopener\">晴天</a></h4><blockquote>\n<p>一款简洁的天气应用</p>\n</blockquote>\n<h4 id=\"PassBoxes\"><a href=\"#PassBoxes\" class=\"headerlink\" title=\"PassBoxes\"></a><a href=\"http://itunes.apple.com/app/id663329564\" target=\"_blank\" rel=\"noopener\">PassBoxes</a></h4><blockquote>\n<p>管理你所有的密码</p>\n</blockquote>\n<h1 id=\"写过的Mac小工具\"><a href=\"#写过的Mac小工具\" class=\"headerlink\" title=\"写过的Mac小工具\"></a>写过的Mac小工具</h1><h4 id=\"SQLCipherExport\"><a href=\"#SQLCipherExport\" class=\"headerlink\" title=\"SQLCipherExport\"></a><a href=\"https://github.com/welsonla/SQLCipherExport\" target=\"_blank\" rel=\"noopener\">SQLCipherExport</a></h4><blockquote>\n<p>将SQLite进行AES256加密解密转换的工具</p>\n</blockquote>\n<h4 id=\"ModelBot\"><a href=\"#ModelBot\" class=\"headerlink\" title=\"ModelBot\"></a><a href=\"https://github.com/TimeBots/ModelBot\" target=\"_blank\" rel=\"noopener\">ModelBot</a></h4><blockquote>\n<p>将JSON生成NSObject，MTLModel(Mantle),Swift, ObjectMapper实体类的工具</p>\n</blockquote>\n"},{"title":"list","date":"2016-04-07T06:36:14.000Z","_content":"### My Develop list\n### 工具控的闲暇阅读\n> [The Setup](https://usesthis.com/)\n[利器](http://liqi.io)\n[Stackshare](http://stackshare.io/)  \n\n\n### iTunesConnect第三方工具  \n> [AppAnnie(iOS)](http://appannie.com)\n[AppSales-Mobile(iOS)](https://github.com/nicolasgomollon/AppSales-Mobile)\n[AppWage(Mac)](https://github.com/hankinsoft/AppWage)\n\n### For Mac Developer\n##### Analytics\n> [Fabric](http://fabric.com)\n  [DevMate](http://devmate.com)\n\n##### In-App purchases\n> [FastSpring](http://www.fastspring.com/)\n\n### Code Editor\n> [TextMate](https://github.com/textmate/textmate)\n  [SublimeText](http://www.sublimetext.com/3)\n  [Atom](https://atom.io)\n  [VS Code](https://code.visualstudio.com/)\n  [BBEdit](https://apps.apple.com/cn/app/bbedit/id404009241?mt=12)\n\n### The github’s\n> [Shop](https://github.myshopify.com/)\n  [Octodex](https://octodex.github.com/)\n  [Projects that power GitHub for Mac](https://github.com/showcases/projects-that-power-github-for-mac)\n  [Projects that power GitHub](https://github.com/showcases/projects-that-power-github)\n","source":"list/index.md","raw":"title: list\ndate: 2016-04-07 14:36:14\n---\n### My Develop list\n### 工具控的闲暇阅读\n> [The Setup](https://usesthis.com/)\n[利器](http://liqi.io)\n[Stackshare](http://stackshare.io/)  \n\n\n### iTunesConnect第三方工具  \n> [AppAnnie(iOS)](http://appannie.com)\n[AppSales-Mobile(iOS)](https://github.com/nicolasgomollon/AppSales-Mobile)\n[AppWage(Mac)](https://github.com/hankinsoft/AppWage)\n\n### For Mac Developer\n##### Analytics\n> [Fabric](http://fabric.com)\n  [DevMate](http://devmate.com)\n\n##### In-App purchases\n> [FastSpring](http://www.fastspring.com/)\n\n### Code Editor\n> [TextMate](https://github.com/textmate/textmate)\n  [SublimeText](http://www.sublimetext.com/3)\n  [Atom](https://atom.io)\n  [VS Code](https://code.visualstudio.com/)\n  [BBEdit](https://apps.apple.com/cn/app/bbedit/id404009241?mt=12)\n\n### The github’s\n> [Shop](https://github.myshopify.com/)\n  [Octodex](https://octodex.github.com/)\n  [Projects that power GitHub for Mac](https://github.com/showcases/projects-that-power-github-for-mac)\n  [Projects that power GitHub](https://github.com/showcases/projects-that-power-github)\n","updated":"2020-01-01T02:23:42.000Z","path":"list/index.html","comments":1,"layout":"page","_id":"clb0uhkbh0004o63k4crgaqo0","content":"<h3 id=\"My-Develop-list\"><a href=\"#My-Develop-list\" class=\"headerlink\" title=\"My Develop list\"></a>My Develop list</h3><h3 id=\"工具控的闲暇阅读\"><a href=\"#工具控的闲暇阅读\" class=\"headerlink\" title=\"工具控的闲暇阅读\"></a>工具控的闲暇阅读</h3><blockquote>\n<p><a href=\"https://usesthis.com/\" target=\"_blank\" rel=\"noopener\">The Setup</a><br><a href=\"http://liqi.io\" target=\"_blank\" rel=\"noopener\">利器</a><br><a href=\"http://stackshare.io/\" target=\"_blank\" rel=\"noopener\">Stackshare</a>  </p>\n</blockquote>\n<h3 id=\"iTunesConnect第三方工具\"><a href=\"#iTunesConnect第三方工具\" class=\"headerlink\" title=\"iTunesConnect第三方工具\"></a>iTunesConnect第三方工具</h3><blockquote>\n<p><a href=\"http://appannie.com\" target=\"_blank\" rel=\"noopener\">AppAnnie(iOS)</a><br><a href=\"https://github.com/nicolasgomollon/AppSales-Mobile\" target=\"_blank\" rel=\"noopener\">AppSales-Mobile(iOS)</a><br><a href=\"https://github.com/hankinsoft/AppWage\" target=\"_blank\" rel=\"noopener\">AppWage(Mac)</a></p>\n</blockquote>\n<h3 id=\"For-Mac-Developer\"><a href=\"#For-Mac-Developer\" class=\"headerlink\" title=\"For Mac Developer\"></a>For Mac Developer</h3><h5 id=\"Analytics\"><a href=\"#Analytics\" class=\"headerlink\" title=\"Analytics\"></a>Analytics</h5><blockquote>\n<p><a href=\"http://fabric.com\" target=\"_blank\" rel=\"noopener\">Fabric</a><br>  <a href=\"http://devmate.com\" target=\"_blank\" rel=\"noopener\">DevMate</a></p>\n</blockquote>\n<h5 id=\"In-App-purchases\"><a href=\"#In-App-purchases\" class=\"headerlink\" title=\"In-App purchases\"></a>In-App purchases</h5><blockquote>\n<p><a href=\"http://www.fastspring.com/\" target=\"_blank\" rel=\"noopener\">FastSpring</a></p>\n</blockquote>\n<h3 id=\"Code-Editor\"><a href=\"#Code-Editor\" class=\"headerlink\" title=\"Code Editor\"></a>Code Editor</h3><blockquote>\n<p><a href=\"https://github.com/textmate/textmate\" target=\"_blank\" rel=\"noopener\">TextMate</a><br>  <a href=\"http://www.sublimetext.com/3\" target=\"_blank\" rel=\"noopener\">SublimeText</a><br>  <a href=\"https://atom.io\" target=\"_blank\" rel=\"noopener\">Atom</a><br>  <a href=\"https://code.visualstudio.com/\" target=\"_blank\" rel=\"noopener\">VS Code</a><br>  <a href=\"https://apps.apple.com/cn/app/bbedit/id404009241?mt=12\" target=\"_blank\" rel=\"noopener\">BBEdit</a></p>\n</blockquote>\n<h3 id=\"The-github’s\"><a href=\"#The-github’s\" class=\"headerlink\" title=\"The github’s\"></a>The github’s</h3><blockquote>\n<p><a href=\"https://github.myshopify.com/\" target=\"_blank\" rel=\"noopener\">Shop</a><br>  <a href=\"https://octodex.github.com/\" target=\"_blank\" rel=\"noopener\">Octodex</a><br>  <a href=\"https://github.com/showcases/projects-that-power-github-for-mac\" target=\"_blank\" rel=\"noopener\">Projects that power GitHub for Mac</a><br>  <a href=\"https://github.com/showcases/projects-that-power-github\" target=\"_blank\" rel=\"noopener\">Projects that power GitHub</a></p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"My-Develop-list\"><a href=\"#My-Develop-list\" class=\"headerlink\" title=\"My Develop list\"></a>My Develop list</h3><h3 id=\"工具控的闲暇阅读\"><a href=\"#工具控的闲暇阅读\" class=\"headerlink\" title=\"工具控的闲暇阅读\"></a>工具控的闲暇阅读</h3><blockquote>\n<p><a href=\"https://usesthis.com/\" target=\"_blank\" rel=\"noopener\">The Setup</a><br><a href=\"http://liqi.io\" target=\"_blank\" rel=\"noopener\">利器</a><br><a href=\"http://stackshare.io/\" target=\"_blank\" rel=\"noopener\">Stackshare</a>  </p>\n</blockquote>\n<h3 id=\"iTunesConnect第三方工具\"><a href=\"#iTunesConnect第三方工具\" class=\"headerlink\" title=\"iTunesConnect第三方工具\"></a>iTunesConnect第三方工具</h3><blockquote>\n<p><a href=\"http://appannie.com\" target=\"_blank\" rel=\"noopener\">AppAnnie(iOS)</a><br><a href=\"https://github.com/nicolasgomollon/AppSales-Mobile\" target=\"_blank\" rel=\"noopener\">AppSales-Mobile(iOS)</a><br><a href=\"https://github.com/hankinsoft/AppWage\" target=\"_blank\" rel=\"noopener\">AppWage(Mac)</a></p>\n</blockquote>\n<h3 id=\"For-Mac-Developer\"><a href=\"#For-Mac-Developer\" class=\"headerlink\" title=\"For Mac Developer\"></a>For Mac Developer</h3><h5 id=\"Analytics\"><a href=\"#Analytics\" class=\"headerlink\" title=\"Analytics\"></a>Analytics</h5><blockquote>\n<p><a href=\"http://fabric.com\" target=\"_blank\" rel=\"noopener\">Fabric</a><br>  <a href=\"http://devmate.com\" target=\"_blank\" rel=\"noopener\">DevMate</a></p>\n</blockquote>\n<h5 id=\"In-App-purchases\"><a href=\"#In-App-purchases\" class=\"headerlink\" title=\"In-App purchases\"></a>In-App purchases</h5><blockquote>\n<p><a href=\"http://www.fastspring.com/\" target=\"_blank\" rel=\"noopener\">FastSpring</a></p>\n</blockquote>\n<h3 id=\"Code-Editor\"><a href=\"#Code-Editor\" class=\"headerlink\" title=\"Code Editor\"></a>Code Editor</h3><blockquote>\n<p><a href=\"https://github.com/textmate/textmate\" target=\"_blank\" rel=\"noopener\">TextMate</a><br>  <a href=\"http://www.sublimetext.com/3\" target=\"_blank\" rel=\"noopener\">SublimeText</a><br>  <a href=\"https://atom.io\" target=\"_blank\" rel=\"noopener\">Atom</a><br>  <a href=\"https://code.visualstudio.com/\" target=\"_blank\" rel=\"noopener\">VS Code</a><br>  <a href=\"https://apps.apple.com/cn/app/bbedit/id404009241?mt=12\" target=\"_blank\" rel=\"noopener\">BBEdit</a></p>\n</blockquote>\n<h3 id=\"The-github’s\"><a href=\"#The-github’s\" class=\"headerlink\" title=\"The github’s\"></a>The github’s</h3><blockquote>\n<p><a href=\"https://github.myshopify.com/\" target=\"_blank\" rel=\"noopener\">Shop</a><br>  <a href=\"https://octodex.github.com/\" target=\"_blank\" rel=\"noopener\">Octodex</a><br>  <a href=\"https://github.com/showcases/projects-that-power-github-for-mac\" target=\"_blank\" rel=\"noopener\">Projects that power GitHub for Mac</a><br>  <a href=\"https://github.com/showcases/projects-that-power-github\" target=\"_blank\" rel=\"noopener\">Projects that power GitHub</a></p>\n</blockquote>\n"},{"title":"categories","date":"2015-10-10T13:25:08.000Z","type":"categories","_content":"<script>\n\tvar Hexo = require('hexo');\n\tvar hexo = new Hexo(process.cwd(),{});\n\thexo.init().then(function(){\n\t\tconsole.log(hexo.locals.get('posts'));\n\t});\n</script>","source":"categories/index.md","raw":"title: categories\ndate: 2015-10-10 21:25:08\ntype: \"categories\"\n---\n<script>\n\tvar Hexo = require('hexo');\n\tvar hexo = new Hexo(process.cwd(),{});\n\thexo.init().then(function(){\n\t\tconsole.log(hexo.locals.get('posts'));\n\t});\n</script>","updated":"2020-01-01T02:23:42.000Z","path":"categories/index.html","comments":1,"layout":"page","_id":"clb0uhkbm0007o63ktb67pd8y","content":"<script>\n    var Hexo = require('hexo');\n    var hexo = new Hexo(process.cwd(),{});\n    hexo.init().then(function(){\n        console.log(hexo.locals.get('posts'));\n    });\n</script>","site":{"data":{}},"excerpt":"","more":"<script>\n    var Hexo = require('hexo');\n    var hexo = new Hexo(process.cwd(),{});\n    hexo.init().then(function(){\n        console.log(hexo.locals.get('posts'));\n    });\n</script>"},{"layout":"post","title":"岁月匆匆，我已不是昨日懵懂少年","date":"2013-04-10T14:42:00.000Z","comments":1,"publish":false,"categories":"生活","_content":"\n大约从去年春节，家里人在耳边提到最多的两个字就是“结婚”。这个我特别敏感，一是还没有准备好，更重要的是毕业到现在，感觉自己发展太缓慢，或者说钱途太烂\n\n今年清明节回家，妈妈说奶奶腿疼，一直身体硬朗的她现在走路也不得不扶着拐杖了。时间过的太快，我还记得上学第一天，奶奶用一块雪糕把我骗去幼儿园去上学。现在我都26岁了，将近二十年的时间已经过去了。\n\n毕业也是三年有余，自认为自己技术能力还行，可是一路走来都是各种坑爹的公司。当身边朋友薪水都五位数的时候，我开始觉得我是不是有点太安于现状，或者太没勇气了。\n\n我只想安安心心的专注做技术.\n\n\n\n\n\n\n","source":"uploads/2013-04-10-the-time-past-so-quick.markdown","raw":"---\nlayout: post\ntitle: \"岁月匆匆，我已不是昨日懵懂少年\"\ndate: 2013-04-10 22:42\ncomments: true\npublish: false\ncategories: 生活\n---\n\n大约从去年春节，家里人在耳边提到最多的两个字就是“结婚”。这个我特别敏感，一是还没有准备好，更重要的是毕业到现在，感觉自己发展太缓慢，或者说钱途太烂\n\n今年清明节回家，妈妈说奶奶腿疼，一直身体硬朗的她现在走路也不得不扶着拐杖了。时间过的太快，我还记得上学第一天，奶奶用一块雪糕把我骗去幼儿园去上学。现在我都26岁了，将近二十年的时间已经过去了。\n\n毕业也是三年有余，自认为自己技术能力还行，可是一路走来都是各种坑爹的公司。当身边朋友薪水都五位数的时候，我开始觉得我是不是有点太安于现状，或者太没勇气了。\n\n我只想安安心心的专注做技术.\n\n\n\n\n\n\n","updated":"2020-01-01T02:23:42.000Z","path":"uploads/2013-04-10-the-time-past-so-quick.html","_id":"clb0uhkbo0009o63knyz4i8bi","content":"<p>大约从去年春节，家里人在耳边提到最多的两个字就是“结婚”。这个我特别敏感，一是还没有准备好，更重要的是毕业到现在，感觉自己发展太缓慢，或者说钱途太烂</p>\n<p>今年清明节回家，妈妈说奶奶腿疼，一直身体硬朗的她现在走路也不得不扶着拐杖了。时间过的太快，我还记得上学第一天，奶奶用一块雪糕把我骗去幼儿园去上学。现在我都26岁了，将近二十年的时间已经过去了。</p>\n<p>毕业也是三年有余，自认为自己技术能力还行，可是一路走来都是各种坑爹的公司。当身边朋友薪水都五位数的时候，我开始觉得我是不是有点太安于现状，或者太没勇气了。</p>\n<p>我只想安安心心的专注做技术.</p>\n","site":{"data":{}},"excerpt":"","more":"<p>大约从去年春节，家里人在耳边提到最多的两个字就是“结婚”。这个我特别敏感，一是还没有准备好，更重要的是毕业到现在，感觉自己发展太缓慢，或者说钱途太烂</p>\n<p>今年清明节回家，妈妈说奶奶腿疼，一直身体硬朗的她现在走路也不得不扶着拐杖了。时间过的太快，我还记得上学第一天，奶奶用一块雪糕把我骗去幼儿园去上学。现在我都26岁了，将近二十年的时间已经过去了。</p>\n<p>毕业也是三年有余，自认为自己技术能力还行，可是一路走来都是各种坑爹的公司。当身边朋友薪水都五位数的时候，我开始觉得我是不是有点太安于现状，或者太没勇气了。</p>\n<p>我只想安安心心的专注做技术.</p>\n"}],"Post":[{"layout":"post","title":"一个码农的Mac配置","date":"2013-04-10T06:14:00.000Z","comments":1,"_content":"\n\n#### 我常用的一些Mac工具\n\n- [iTerm2](http://www.iterm2.com/) 一个增强的命令终端\n- [SourceTree](http://www.sourcetreeapp.com/) git代码控制工具\n- [WunderList](https://www.wunderlist.com/) 一个出色的Todo工具，提供云同步，我把它当做我的任务列表\n- [TextMate2](https://github.com/textmate/textmate/tags) 号称\"The Missing Editor for Mac OS X\"\n- [SublimeText2](http://www.sublimetext.com/2) 另一个特别出色的Editor\n- [Alfred](http://www.alfredapp.com/) Option+Space,唤出，提高你打开软件的效率，购买Powerpack还可以使用很多强大的拓展\n- [iFunBox](http://www.i-funbox.com/) 管理你的苹果设备的文件，可以不通过iTunes直接把文件放到程序的Documents下面\n- [坚果云](https://jianguoyun.com/) 国内一个特别出色的网盘，可以右键添加要同步的文件\n- [Evernote](http://evernote.com/) 这个大家都懂的\n- [XtraFinder](http://www.trankynam.com/xtrafinder/) 为你的Finder增加Tab，剪切等功能\n- [shortcat](http://shortcatapp.com/)键盘快捷键，写啥点啥,怒赞\n- [Chameleon](http://chameleon.alessandroboschini.com/) 打开第三方SSD的trim\n- [Agenda](https://apps.apple.com/cn/app/agenda/id1287445660?mt=12)\n- [itsycal](https://www.mowglii.com/itsycal/) 不错的菜单栏日历\n- [Sublime Merge](https://www.sublimemerge.com/) Sublime Text出品的Git客户端\n- [Netbeans 8](https://netbeans.org/community/releases/81/index.html) 使用PlantUML插件用它来画UML\n- [iThoughtsX(Paid)](https://apps.apple.com/cn/app/ithoughtsx-mindmap/id720669838?mt=12) Mindmap工具\n- [ForkLift2](https://apps.apple.com/cn/app/forklift-file-manager-and-ftp-sftp-webdav-amazon-s3-client/id412448059?mt=12) 目前AppStore版本免费，强大功能齐全的FTP工具\n\n#### shortcat快捷键\n```ruby\ncmd+shift+space唤醒\n输入关键词后，如果匹配了多个，使用control+字母去点击相应的匹配\n```\n\n\n#### 安装HomeBrew\n\nHomebrew是一个管理Mac拓展的工具，他可以很方便的安装你所需要的软件，以及软件的一些依赖包\n\n比如安装mysql，你只需要\n\n```ruby\nbrew install mysql\n```\nHomebrew 安装特别简单，只需要键入\n\n```ruby\nruby -e \"$(curl -fsSL https://raw.github.com/mxcl/homebrew/go)\"\n```\n\n相关的文档可以到官方去查看[http://mxcl.github.io/homebrew/](http://mxcl.github.io/homebrew/)\n\n\n#### 安装oh-my-Zsh\n\nZsh是Mac上面的一个命令行增强工具，他提供了关键字高亮，命令补全，以及一些命令的拓展，\n\n\n安装步骤\n```ruby\ncurl -L https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh | sh\n\n#备份你的.zshrc文件\ncp ~/.zshrc ~/.zshrc.orig\n\n#创建zsh配置\ncp ~/.oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc\n\n#设置zsh为你的默认shell\nchsh -s /bin/zsh\n\n#重启终端就会生效\n```\n\n这里还有一些主题[https://github.com/robbyrussell/oh-my-zsh/wiki/themes](https://github.com/robbyrussell/oh-my-zsh/wiki/themes)\n\n如果你要修改zsh的默认主题\n```ruby\nvi ~/.zshrc\n\n修改ZSH_THEME为你喜欢的主题名即可\n```\n\n\n如果不想继续使用，可以使用以下命令卸载\n```ruby\nuninstall_oh_my_zsh\n```\n","source":"_posts/2013-04-10-build-your-mac-os.markdown","raw":"---\nlayout: post\ntitle: \"一个码农的Mac配置\"\ndate: 2013-04-10 14:14\ncomments: true\ncategories: life\n---\n\n\n#### 我常用的一些Mac工具\n\n- [iTerm2](http://www.iterm2.com/) 一个增强的命令终端\n- [SourceTree](http://www.sourcetreeapp.com/) git代码控制工具\n- [WunderList](https://www.wunderlist.com/) 一个出色的Todo工具，提供云同步，我把它当做我的任务列表\n- [TextMate2](https://github.com/textmate/textmate/tags) 号称\"The Missing Editor for Mac OS X\"\n- [SublimeText2](http://www.sublimetext.com/2) 另一个特别出色的Editor\n- [Alfred](http://www.alfredapp.com/) Option+Space,唤出，提高你打开软件的效率，购买Powerpack还可以使用很多强大的拓展\n- [iFunBox](http://www.i-funbox.com/) 管理你的苹果设备的文件，可以不通过iTunes直接把文件放到程序的Documents下面\n- [坚果云](https://jianguoyun.com/) 国内一个特别出色的网盘，可以右键添加要同步的文件\n- [Evernote](http://evernote.com/) 这个大家都懂的\n- [XtraFinder](http://www.trankynam.com/xtrafinder/) 为你的Finder增加Tab，剪切等功能\n- [shortcat](http://shortcatapp.com/)键盘快捷键，写啥点啥,怒赞\n- [Chameleon](http://chameleon.alessandroboschini.com/) 打开第三方SSD的trim\n- [Agenda](https://apps.apple.com/cn/app/agenda/id1287445660?mt=12)\n- [itsycal](https://www.mowglii.com/itsycal/) 不错的菜单栏日历\n- [Sublime Merge](https://www.sublimemerge.com/) Sublime Text出品的Git客户端\n- [Netbeans 8](https://netbeans.org/community/releases/81/index.html) 使用PlantUML插件用它来画UML\n- [iThoughtsX(Paid)](https://apps.apple.com/cn/app/ithoughtsx-mindmap/id720669838?mt=12) Mindmap工具\n- [ForkLift2](https://apps.apple.com/cn/app/forklift-file-manager-and-ftp-sftp-webdav-amazon-s3-client/id412448059?mt=12) 目前AppStore版本免费，强大功能齐全的FTP工具\n\n#### shortcat快捷键\n```ruby\ncmd+shift+space唤醒\n输入关键词后，如果匹配了多个，使用control+字母去点击相应的匹配\n```\n\n\n#### 安装HomeBrew\n\nHomebrew是一个管理Mac拓展的工具，他可以很方便的安装你所需要的软件，以及软件的一些依赖包\n\n比如安装mysql，你只需要\n\n```ruby\nbrew install mysql\n```\nHomebrew 安装特别简单，只需要键入\n\n```ruby\nruby -e \"$(curl -fsSL https://raw.github.com/mxcl/homebrew/go)\"\n```\n\n相关的文档可以到官方去查看[http://mxcl.github.io/homebrew/](http://mxcl.github.io/homebrew/)\n\n\n#### 安装oh-my-Zsh\n\nZsh是Mac上面的一个命令行增强工具，他提供了关键字高亮，命令补全，以及一些命令的拓展，\n\n\n安装步骤\n```ruby\ncurl -L https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh | sh\n\n#备份你的.zshrc文件\ncp ~/.zshrc ~/.zshrc.orig\n\n#创建zsh配置\ncp ~/.oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc\n\n#设置zsh为你的默认shell\nchsh -s /bin/zsh\n\n#重启终端就会生效\n```\n\n这里还有一些主题[https://github.com/robbyrussell/oh-my-zsh/wiki/themes](https://github.com/robbyrussell/oh-my-zsh/wiki/themes)\n\n如果你要修改zsh的默认主题\n```ruby\nvi ~/.zshrc\n\n修改ZSH_THEME为你喜欢的主题名即可\n```\n\n\n如果不想继续使用，可以使用以下命令卸载\n```ruby\nuninstall_oh_my_zsh\n```\n","slug":"build-your-mac-os","published":1,"updated":"2020-01-01T02:23:42.000Z","photos":[],"link":"","_id":"clb0uhkb80001o63k1gsihvae","content":"<h4 id=\"我常用的一些Mac工具\"><a href=\"#我常用的一些Mac工具\" class=\"headerlink\" title=\"我常用的一些Mac工具\"></a>我常用的一些Mac工具</h4><ul>\n<li><a href=\"http://www.iterm2.com/\" target=\"_blank\" rel=\"noopener\">iTerm2</a> 一个增强的命令终端</li>\n<li><a href=\"http://www.sourcetreeapp.com/\" target=\"_blank\" rel=\"noopener\">SourceTree</a> git代码控制工具</li>\n<li><a href=\"https://www.wunderlist.com/\" target=\"_blank\" rel=\"noopener\">WunderList</a> 一个出色的Todo工具，提供云同步，我把它当做我的任务列表</li>\n<li><a href=\"https://github.com/textmate/textmate/tags\" target=\"_blank\" rel=\"noopener\">TextMate2</a> 号称”The Missing Editor for Mac OS X”</li>\n<li><a href=\"http://www.sublimetext.com/2\" target=\"_blank\" rel=\"noopener\">SublimeText2</a> 另一个特别出色的Editor</li>\n<li><a href=\"http://www.alfredapp.com/\" target=\"_blank\" rel=\"noopener\">Alfred</a> Option+Space,唤出，提高你打开软件的效率，购买Powerpack还可以使用很多强大的拓展</li>\n<li><a href=\"http://www.i-funbox.com/\" target=\"_blank\" rel=\"noopener\">iFunBox</a> 管理你的苹果设备的文件，可以不通过iTunes直接把文件放到程序的Documents下面</li>\n<li><a href=\"https://jianguoyun.com/\" target=\"_blank\" rel=\"noopener\">坚果云</a> 国内一个特别出色的网盘，可以右键添加要同步的文件</li>\n<li><a href=\"http://evernote.com/\" target=\"_blank\" rel=\"noopener\">Evernote</a> 这个大家都懂的</li>\n<li><a href=\"http://www.trankynam.com/xtrafinder/\" target=\"_blank\" rel=\"noopener\">XtraFinder</a> 为你的Finder增加Tab，剪切等功能</li>\n<li><a href=\"http://shortcatapp.com/\" target=\"_blank\" rel=\"noopener\">shortcat</a>键盘快捷键，写啥点啥,怒赞</li>\n<li><a href=\"http://chameleon.alessandroboschini.com/\" target=\"_blank\" rel=\"noopener\">Chameleon</a> 打开第三方SSD的trim</li>\n<li><a href=\"https://apps.apple.com/cn/app/agenda/id1287445660?mt=12\" target=\"_blank\" rel=\"noopener\">Agenda</a></li>\n<li><a href=\"https://www.mowglii.com/itsycal/\" target=\"_blank\" rel=\"noopener\">itsycal</a> 不错的菜单栏日历</li>\n<li><a href=\"https://www.sublimemerge.com/\" target=\"_blank\" rel=\"noopener\">Sublime Merge</a> Sublime Text出品的Git客户端</li>\n<li><a href=\"https://netbeans.org/community/releases/81/index.html\" target=\"_blank\" rel=\"noopener\">Netbeans 8</a> 使用PlantUML插件用它来画UML</li>\n<li><a href=\"https://apps.apple.com/cn/app/ithoughtsx-mindmap/id720669838?mt=12\" target=\"_blank\" rel=\"noopener\">iThoughtsX(Paid)</a> Mindmap工具</li>\n<li><a href=\"https://apps.apple.com/cn/app/forklift-file-manager-and-ftp-sftp-webdav-amazon-s3-client/id412448059?mt=12\" target=\"_blank\" rel=\"noopener\">ForkLift2</a> 目前AppStore版本免费，强大功能齐全的FTP工具</li>\n</ul>\n<h4 id=\"shortcat快捷键\"><a href=\"#shortcat快捷键\" class=\"headerlink\" title=\"shortcat快捷键\"></a>shortcat快捷键</h4><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cmd+shift+space唤醒</span><br><span class=\"line\">输入关键词后，如果匹配了多个，使用control+字母去点击相应的匹配</span><br></pre></td></tr></table></figure>\n<h4 id=\"安装HomeBrew\"><a href=\"#安装HomeBrew\" class=\"headerlink\" title=\"安装HomeBrew\"></a>安装HomeBrew</h4><p>Homebrew是一个管理Mac拓展的工具，他可以很方便的安装你所需要的软件，以及软件的一些依赖包</p>\n<p>比如安装mysql，你只需要</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew install mysql</span><br></pre></td></tr></table></figure>\n<p>Homebrew 安装特别简单，只需要键入</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ruby -e <span class=\"string\">\"$(curl -fsSL https://raw.github.com/mxcl/homebrew/go)\"</span></span><br></pre></td></tr></table></figure>\n<p>相关的文档可以到官方去查看<a href=\"http://mxcl.github.io/homebrew/\" target=\"_blank\" rel=\"noopener\">http://mxcl.github.io/homebrew/</a></p>\n<h4 id=\"安装oh-my-Zsh\"><a href=\"#安装oh-my-Zsh\" class=\"headerlink\" title=\"安装oh-my-Zsh\"></a>安装oh-my-Zsh</h4><p>Zsh是Mac上面的一个命令行增强工具，他提供了关键字高亮，命令补全，以及一些命令的拓展，</p>\n<p>安装步骤<br><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -L <span class=\"symbol\">https:</span>/<span class=\"regexp\">/github.com/robbyrussell</span><span class=\"regexp\">/oh-my-zsh/raw</span><span class=\"regexp\">/master/tools</span><span class=\"regexp\">/install.sh | sh</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">#备份你的.zshrc文件</span></span><br><span class=\"line\"><span class=\"regexp\">cp ~/</span>.zshrc ~<span class=\"regexp\">/.zshrc.orig</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">#创建zsh配置</span></span><br><span class=\"line\"><span class=\"regexp\">cp ~/</span>.oh-my-zsh/templates/zshrc.zsh-template ~<span class=\"regexp\">/.zshrc</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">#设置zsh为你的默认shell</span></span><br><span class=\"line\"><span class=\"regexp\">chsh -s /bin</span><span class=\"regexp\">/zsh</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">#重启终端就会生效</span></span><br></pre></td></tr></table></figure></p>\n<p>这里还有一些主题<a href=\"https://github.com/robbyrussell/oh-my-zsh/wiki/themes\" target=\"_blank\" rel=\"noopener\">https://github.com/robbyrussell/oh-my-zsh/wiki/themes</a></p>\n<p>如果你要修改zsh的默认主题<br><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi ~<span class=\"regexp\">/.zshrc</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">修改ZSH_THEME为你喜欢的主题名即可</span></span><br></pre></td></tr></table></figure></p>\n<p>如果不想继续使用，可以使用以下命令卸载<br><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">uninstall_oh_my_zsh</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"我常用的一些Mac工具\"><a href=\"#我常用的一些Mac工具\" class=\"headerlink\" title=\"我常用的一些Mac工具\"></a>我常用的一些Mac工具</h4><ul>\n<li><a href=\"http://www.iterm2.com/\" target=\"_blank\" rel=\"noopener\">iTerm2</a> 一个增强的命令终端</li>\n<li><a href=\"http://www.sourcetreeapp.com/\" target=\"_blank\" rel=\"noopener\">SourceTree</a> git代码控制工具</li>\n<li><a href=\"https://www.wunderlist.com/\" target=\"_blank\" rel=\"noopener\">WunderList</a> 一个出色的Todo工具，提供云同步，我把它当做我的任务列表</li>\n<li><a href=\"https://github.com/textmate/textmate/tags\" target=\"_blank\" rel=\"noopener\">TextMate2</a> 号称”The Missing Editor for Mac OS X”</li>\n<li><a href=\"http://www.sublimetext.com/2\" target=\"_blank\" rel=\"noopener\">SublimeText2</a> 另一个特别出色的Editor</li>\n<li><a href=\"http://www.alfredapp.com/\" target=\"_blank\" rel=\"noopener\">Alfred</a> Option+Space,唤出，提高你打开软件的效率，购买Powerpack还可以使用很多强大的拓展</li>\n<li><a href=\"http://www.i-funbox.com/\" target=\"_blank\" rel=\"noopener\">iFunBox</a> 管理你的苹果设备的文件，可以不通过iTunes直接把文件放到程序的Documents下面</li>\n<li><a href=\"https://jianguoyun.com/\" target=\"_blank\" rel=\"noopener\">坚果云</a> 国内一个特别出色的网盘，可以右键添加要同步的文件</li>\n<li><a href=\"http://evernote.com/\" target=\"_blank\" rel=\"noopener\">Evernote</a> 这个大家都懂的</li>\n<li><a href=\"http://www.trankynam.com/xtrafinder/\" target=\"_blank\" rel=\"noopener\">XtraFinder</a> 为你的Finder增加Tab，剪切等功能</li>\n<li><a href=\"http://shortcatapp.com/\" target=\"_blank\" rel=\"noopener\">shortcat</a>键盘快捷键，写啥点啥,怒赞</li>\n<li><a href=\"http://chameleon.alessandroboschini.com/\" target=\"_blank\" rel=\"noopener\">Chameleon</a> 打开第三方SSD的trim</li>\n<li><a href=\"https://apps.apple.com/cn/app/agenda/id1287445660?mt=12\" target=\"_blank\" rel=\"noopener\">Agenda</a></li>\n<li><a href=\"https://www.mowglii.com/itsycal/\" target=\"_blank\" rel=\"noopener\">itsycal</a> 不错的菜单栏日历</li>\n<li><a href=\"https://www.sublimemerge.com/\" target=\"_blank\" rel=\"noopener\">Sublime Merge</a> Sublime Text出品的Git客户端</li>\n<li><a href=\"https://netbeans.org/community/releases/81/index.html\" target=\"_blank\" rel=\"noopener\">Netbeans 8</a> 使用PlantUML插件用它来画UML</li>\n<li><a href=\"https://apps.apple.com/cn/app/ithoughtsx-mindmap/id720669838?mt=12\" target=\"_blank\" rel=\"noopener\">iThoughtsX(Paid)</a> Mindmap工具</li>\n<li><a href=\"https://apps.apple.com/cn/app/forklift-file-manager-and-ftp-sftp-webdav-amazon-s3-client/id412448059?mt=12\" target=\"_blank\" rel=\"noopener\">ForkLift2</a> 目前AppStore版本免费，强大功能齐全的FTP工具</li>\n</ul>\n<h4 id=\"shortcat快捷键\"><a href=\"#shortcat快捷键\" class=\"headerlink\" title=\"shortcat快捷键\"></a>shortcat快捷键</h4><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cmd+shift+space唤醒</span><br><span class=\"line\">输入关键词后，如果匹配了多个，使用control+字母去点击相应的匹配</span><br></pre></td></tr></table></figure>\n<h4 id=\"安装HomeBrew\"><a href=\"#安装HomeBrew\" class=\"headerlink\" title=\"安装HomeBrew\"></a>安装HomeBrew</h4><p>Homebrew是一个管理Mac拓展的工具，他可以很方便的安装你所需要的软件，以及软件的一些依赖包</p>\n<p>比如安装mysql，你只需要</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew install mysql</span><br></pre></td></tr></table></figure>\n<p>Homebrew 安装特别简单，只需要键入</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ruby -e <span class=\"string\">\"$(curl -fsSL https://raw.github.com/mxcl/homebrew/go)\"</span></span><br></pre></td></tr></table></figure>\n<p>相关的文档可以到官方去查看<a href=\"http://mxcl.github.io/homebrew/\" target=\"_blank\" rel=\"noopener\">http://mxcl.github.io/homebrew/</a></p>\n<h4 id=\"安装oh-my-Zsh\"><a href=\"#安装oh-my-Zsh\" class=\"headerlink\" title=\"安装oh-my-Zsh\"></a>安装oh-my-Zsh</h4><p>Zsh是Mac上面的一个命令行增强工具，他提供了关键字高亮，命令补全，以及一些命令的拓展，</p>\n<p>安装步骤<br><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -L <span class=\"symbol\">https:</span>/<span class=\"regexp\">/github.com/robbyrussell</span><span class=\"regexp\">/oh-my-zsh/raw</span><span class=\"regexp\">/master/tools</span><span class=\"regexp\">/install.sh | sh</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">#备份你的.zshrc文件</span></span><br><span class=\"line\"><span class=\"regexp\">cp ~/</span>.zshrc ~<span class=\"regexp\">/.zshrc.orig</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">#创建zsh配置</span></span><br><span class=\"line\"><span class=\"regexp\">cp ~/</span>.oh-my-zsh/templates/zshrc.zsh-template ~<span class=\"regexp\">/.zshrc</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">#设置zsh为你的默认shell</span></span><br><span class=\"line\"><span class=\"regexp\">chsh -s /bin</span><span class=\"regexp\">/zsh</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">#重启终端就会生效</span></span><br></pre></td></tr></table></figure></p>\n<p>这里还有一些主题<a href=\"https://github.com/robbyrussell/oh-my-zsh/wiki/themes\" target=\"_blank\" rel=\"noopener\">https://github.com/robbyrussell/oh-my-zsh/wiki/themes</a></p>\n<p>如果你要修改zsh的默认主题<br><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi ~<span class=\"regexp\">/.zshrc</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">修改ZSH_THEME为你喜欢的主题名即可</span></span><br></pre></td></tr></table></figure></p>\n<p>如果不想继续使用，可以使用以下命令卸载<br><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">uninstall_oh_my_zsh</span><br></pre></td></tr></table></figure></p>\n"},{"layout":"post","title":"Cocoapods 使用","date":"2013-04-10T08:48:00.000Z","comments":1,"_content":"\n\n```ruby\ngem install cocoapods\n```\n\ncd到你的项目的根目录，就是跟project文件同级,建立Podfile文件\n```ruby\ntouch Podfile\n```\n\n加入平台版本，（5.1可以省略，但是最好在podfile中加入，因为一些ARC相关的类库不加的话，会提示错误）\n```ruby\nplatform :ios,'9.0'\n```\n\n\n搜索第三方的oc库\n\n```ruby\npod search fmdb\n\n-> FMDB (2.0)\n   A Cocoa / Objective-C wrapper around SQLite.\n   - Homepage: https://github.com/ccgus/fmdb\n   - Source:   https://github.com/ccgus/fmdb.git\n   - Versions: 2.0, 1.5.1, 1.5 [master repo]\n```\n\n通过搜索，我们已经找到了该类库的版本的名字，只需要将这些内容加入到podfile文件中即可\n\n```ruby\nplatform :ios, '5.1'\nPod 'FMDB','2.0'\n```\n\n然后执行下面的命令，将这些类库加到到本地\n\n```ruby\npod install\n```\n\n### 修复Cocoapods，重置repo\n```ruby\npod repo remove master\npod repo add master https://github.com/CocoaPods/Specs.git\npod repo update\n```\n\n### 减少更新安装的时间，只安装或更新必要的库\n```ruby\npod install --verbose --no-repo-update\npod update --verbose --no-repo-update\n```\n\n之后将会生成一个workspace文件，以后我们打开项目的时候，就打开workspace文件即可，项目和其所需要的类库都以sub project的方式加到了这个workspace下面\n","source":"_posts/2013-04-10-use-cocoapods.markdown","raw":"---\nlayout: post\ntitle: \"Cocoapods 使用\"\ndate: 2013-04-10 16:48\ncomments: true\ncategories: iOS\n---\n\n\n```ruby\ngem install cocoapods\n```\n\ncd到你的项目的根目录，就是跟project文件同级,建立Podfile文件\n```ruby\ntouch Podfile\n```\n\n加入平台版本，（5.1可以省略，但是最好在podfile中加入，因为一些ARC相关的类库不加的话，会提示错误）\n```ruby\nplatform :ios,'9.0'\n```\n\n\n搜索第三方的oc库\n\n```ruby\npod search fmdb\n\n-> FMDB (2.0)\n   A Cocoa / Objective-C wrapper around SQLite.\n   - Homepage: https://github.com/ccgus/fmdb\n   - Source:   https://github.com/ccgus/fmdb.git\n   - Versions: 2.0, 1.5.1, 1.5 [master repo]\n```\n\n通过搜索，我们已经找到了该类库的版本的名字，只需要将这些内容加入到podfile文件中即可\n\n```ruby\nplatform :ios, '5.1'\nPod 'FMDB','2.0'\n```\n\n然后执行下面的命令，将这些类库加到到本地\n\n```ruby\npod install\n```\n\n### 修复Cocoapods，重置repo\n```ruby\npod repo remove master\npod repo add master https://github.com/CocoaPods/Specs.git\npod repo update\n```\n\n### 减少更新安装的时间，只安装或更新必要的库\n```ruby\npod install --verbose --no-repo-update\npod update --verbose --no-repo-update\n```\n\n之后将会生成一个workspace文件，以后我们打开项目的时候，就打开workspace文件即可，项目和其所需要的类库都以sub project的方式加到了这个workspace下面\n","slug":"use-cocoapods","published":1,"updated":"2020-01-01T02:23:42.000Z","photos":[],"link":"","_id":"clb0uhkbf0003o63kc7mxhnot","content":"<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gem install cocoapods</span><br></pre></td></tr></table></figure>\n<p>cd到你的项目的根目录，就是跟project文件同级,建立Podfile文件<br><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">touch Podfile</span><br></pre></td></tr></table></figure></p>\n<p>加入平台版本，（5.1可以省略，但是最好在podfile中加入，因为一些ARC相关的类库不加的话，会提示错误）<br><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">platform <span class=\"symbol\">:ios</span>,<span class=\"string\">'9.0'</span></span><br></pre></td></tr></table></figure></p>\n<p>搜索第三方的oc库</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pod search fmdb</span><br><span class=\"line\"></span><br><span class=\"line\">-&gt; FMDB (<span class=\"number\">2.0</span>)</span><br><span class=\"line\">   A Cocoa / Objective-C wrapper around SQLite.</span><br><span class=\"line\">   - <span class=\"symbol\">Homepage:</span> <span class=\"symbol\">https:</span>/<span class=\"regexp\">/github.com/ccgus</span><span class=\"regexp\">/fmdb</span></span><br><span class=\"line\"><span class=\"regexp\">   - Source:   https:/</span><span class=\"regexp\">/github.com/ccgus</span><span class=\"regexp\">/fmdb.git</span></span><br><span class=\"line\"><span class=\"regexp\">   - Versions: 2.0, 1.5.1, 1.5 [master repo]</span></span><br></pre></td></tr></table></figure>\n<p>通过搜索，我们已经找到了该类库的版本的名字，只需要将这些内容加入到podfile文件中即可</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">platform <span class=\"symbol\">:ios</span>, <span class=\"string\">'5.1'</span></span><br><span class=\"line\">Pod <span class=\"string\">'FMDB'</span>,<span class=\"string\">'2.0'</span></span><br></pre></td></tr></table></figure>\n<p>然后执行下面的命令，将这些类库加到到本地</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pod install</span><br></pre></td></tr></table></figure>\n<h3 id=\"修复Cocoapods，重置repo\"><a href=\"#修复Cocoapods，重置repo\" class=\"headerlink\" title=\"修复Cocoapods，重置repo\"></a>修复Cocoapods，重置repo</h3><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pod repo remove master</span><br><span class=\"line\">pod repo add master <span class=\"symbol\">https:</span>/<span class=\"regexp\">/github.com/</span>CocoaPods/Specs.git</span><br><span class=\"line\">pod repo update</span><br></pre></td></tr></table></figure>\n<h3 id=\"减少更新安装的时间，只安装或更新必要的库\"><a href=\"#减少更新安装的时间，只安装或更新必要的库\" class=\"headerlink\" title=\"减少更新安装的时间，只安装或更新必要的库\"></a>减少更新安装的时间，只安装或更新必要的库</h3><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pod install --verbose --no-repo-update</span><br><span class=\"line\">pod update --verbose --no-repo-update</span><br></pre></td></tr></table></figure>\n<p>之后将会生成一个workspace文件，以后我们打开项目的时候，就打开workspace文件即可，项目和其所需要的类库都以sub project的方式加到了这个workspace下面</p>\n","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gem install cocoapods</span><br></pre></td></tr></table></figure>\n<p>cd到你的项目的根目录，就是跟project文件同级,建立Podfile文件<br><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">touch Podfile</span><br></pre></td></tr></table></figure></p>\n<p>加入平台版本，（5.1可以省略，但是最好在podfile中加入，因为一些ARC相关的类库不加的话，会提示错误）<br><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">platform <span class=\"symbol\">:ios</span>,<span class=\"string\">'9.0'</span></span><br></pre></td></tr></table></figure></p>\n<p>搜索第三方的oc库</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pod search fmdb</span><br><span class=\"line\"></span><br><span class=\"line\">-&gt; FMDB (<span class=\"number\">2.0</span>)</span><br><span class=\"line\">   A Cocoa / Objective-C wrapper around SQLite.</span><br><span class=\"line\">   - <span class=\"symbol\">Homepage:</span> <span class=\"symbol\">https:</span>/<span class=\"regexp\">/github.com/ccgus</span><span class=\"regexp\">/fmdb</span></span><br><span class=\"line\"><span class=\"regexp\">   - Source:   https:/</span><span class=\"regexp\">/github.com/ccgus</span><span class=\"regexp\">/fmdb.git</span></span><br><span class=\"line\"><span class=\"regexp\">   - Versions: 2.0, 1.5.1, 1.5 [master repo]</span></span><br></pre></td></tr></table></figure>\n<p>通过搜索，我们已经找到了该类库的版本的名字，只需要将这些内容加入到podfile文件中即可</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">platform <span class=\"symbol\">:ios</span>, <span class=\"string\">'5.1'</span></span><br><span class=\"line\">Pod <span class=\"string\">'FMDB'</span>,<span class=\"string\">'2.0'</span></span><br></pre></td></tr></table></figure>\n<p>然后执行下面的命令，将这些类库加到到本地</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pod install</span><br></pre></td></tr></table></figure>\n<h3 id=\"修复Cocoapods，重置repo\"><a href=\"#修复Cocoapods，重置repo\" class=\"headerlink\" title=\"修复Cocoapods，重置repo\"></a>修复Cocoapods，重置repo</h3><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pod repo remove master</span><br><span class=\"line\">pod repo add master <span class=\"symbol\">https:</span>/<span class=\"regexp\">/github.com/</span>CocoaPods/Specs.git</span><br><span class=\"line\">pod repo update</span><br></pre></td></tr></table></figure>\n<h3 id=\"减少更新安装的时间，只安装或更新必要的库\"><a href=\"#减少更新安装的时间，只安装或更新必要的库\" class=\"headerlink\" title=\"减少更新安装的时间，只安装或更新必要的库\"></a>减少更新安装的时间，只安装或更新必要的库</h3><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pod install --verbose --no-repo-update</span><br><span class=\"line\">pod update --verbose --no-repo-update</span><br></pre></td></tr></table></figure>\n<p>之后将会生成一个workspace文件，以后我们打开项目的时候，就打开workspace文件即可，项目和其所需要的类库都以sub project的方式加到了这个workspace下面</p>\n"},{"layout":"post","title":"生成 github SSH keys","date":"2013-04-10T14:16:00.000Z","comments":1,"_content":"\n\n本文主要来自github官方，Generating SSH Keys\n\n\n```ruby\n\ncd ~/.ssh\n\nssh-keygen -t rsa -C \"your_email@example.com\"\n\n```\n\n下面的步骤可以只敲回车进行确认即可\n```ruby\nCreates a new ssh key using the provided email\n\nGenerating public/private rsa key pair.\n\n#这里直接回车就会生成一个默认名为id_rsa\nEnter file in which to save the key (/Users/you/.ssh/id_rsa): [Press enter]\n\n\n#这里需要你输入一个你加密的key（一定要记住）\nEnter passphrase (empty for no passphrase): [Type a passphrase]\nEnter same passphrase again: [Type passphrase again]\n\n\nYour identification has been saved in /Users/welsonla/.ssh/id_rsa.\nYour public key has been saved in /Users/welsonla/.ssh/id_rsa.pub.\nThe key fingerprint is:\n30:e8:aa:08:ee:bc:76:88:2c:3f:83:39:b0:6e:95:cc wyc.jar@gmail.com\nThe key's randomart image is:\n+--[ RSA 2048]----+\n|                 |\n|     .           |\n|    . o          |\n|   .   o         |\n|  o o   S        |\n|.  E             |\n|=++              |\n|%*o.             |\n|OO+o             |\n+-----------------+\n```\n\n看到这个界面说明生成成功\n\n\ncopy加密字符到剪切板\n\n```\npbcopy < ~/.ssh/id_rsa.pub\n```\n\n\n\n打开你的github\n```\n1. 点击 Account Settings\n2. 点击左侧 \"SSH Keys\" \n3. 点击 \"Add SSH key\"\n4. 粘贴你的可以到 \"Key\" 输入框\n5. 点击 \"Add key\"\n6. 输入你的github密码确认\n\n```\n\n","source":"_posts/2013-04-10-generate-github-ssh-keys.markdown","raw":"---\nlayout: post\ntitle: \"生成 github SSH keys\"\ndate: 2013-04-10 22:16\ncomments: true\ncategories: 技术随笔\n---\n\n\n本文主要来自github官方，Generating SSH Keys\n\n\n```ruby\n\ncd ~/.ssh\n\nssh-keygen -t rsa -C \"your_email@example.com\"\n\n```\n\n下面的步骤可以只敲回车进行确认即可\n```ruby\nCreates a new ssh key using the provided email\n\nGenerating public/private rsa key pair.\n\n#这里直接回车就会生成一个默认名为id_rsa\nEnter file in which to save the key (/Users/you/.ssh/id_rsa): [Press enter]\n\n\n#这里需要你输入一个你加密的key（一定要记住）\nEnter passphrase (empty for no passphrase): [Type a passphrase]\nEnter same passphrase again: [Type passphrase again]\n\n\nYour identification has been saved in /Users/welsonla/.ssh/id_rsa.\nYour public key has been saved in /Users/welsonla/.ssh/id_rsa.pub.\nThe key fingerprint is:\n30:e8:aa:08:ee:bc:76:88:2c:3f:83:39:b0:6e:95:cc wyc.jar@gmail.com\nThe key's randomart image is:\n+--[ RSA 2048]----+\n|                 |\n|     .           |\n|    . o          |\n|   .   o         |\n|  o o   S        |\n|.  E             |\n|=++              |\n|%*o.             |\n|OO+o             |\n+-----------------+\n```\n\n看到这个界面说明生成成功\n\n\ncopy加密字符到剪切板\n\n```\npbcopy < ~/.ssh/id_rsa.pub\n```\n\n\n\n打开你的github\n```\n1. 点击 Account Settings\n2. 点击左侧 \"SSH Keys\" \n3. 点击 \"Add SSH key\"\n4. 粘贴你的可以到 \"Key\" 输入框\n5. 点击 \"Add key\"\n6. 输入你的github密码确认\n\n```\n\n","slug":"generate-github-ssh-keys","published":1,"updated":"2020-01-01T02:23:42.000Z","photos":[],"link":"","_id":"clb0uhkbk0006o63kfvs4qqt8","content":"<p>本文主要来自github官方，Generating SSH Keys</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">cd ~<span class=\"regexp\">/.ssh</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">ssh-keygen -t rsa -C \"your_email@example.com\"</span></span><br></pre></td></tr></table></figure>\n<p>下面的步骤可以只敲回车进行确认即可<br><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Creates a new ssh key using the provided email</span><br><span class=\"line\"></span><br><span class=\"line\">Generating public/private rsa key pair.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#这里直接回车就会生成一个默认名为id_rsa</span></span><br><span class=\"line\">Enter file <span class=\"keyword\">in</span> which to save the key (<span class=\"regexp\">/Users/you</span><span class=\"regexp\">/.ssh/id</span>_rsa): [Press enter]</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#这里需要你输入一个你加密的key（一定要记住）</span></span><br><span class=\"line\">Enter passphrase (empty <span class=\"keyword\">for</span> no passphrase): [Type a passphrase]</span><br><span class=\"line\">Enter same passphrase <span class=\"symbol\">again:</span> [Type passphrase again]</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">Your identification has been saved <span class=\"keyword\">in</span> /Users/welsonla/.ssh/id_rsa.</span><br><span class=\"line\">Your public key has been saved <span class=\"keyword\">in</span> /Users/welsonla/.ssh/id_rsa.pub.</span><br><span class=\"line\">The key fingerprint <span class=\"symbol\">is:</span></span><br><span class=\"line\"><span class=\"number\">30</span><span class=\"symbol\">:e8</span><span class=\"symbol\">:aa</span><span class=\"symbol\">:</span>08<span class=\"symbol\">:ee</span><span class=\"symbol\">:bc</span><span class=\"symbol\">:</span><span class=\"number\">76</span><span class=\"symbol\">:</span><span class=\"number\">88</span><span class=\"symbol\">:</span><span class=\"number\">2</span><span class=\"symbol\">c:</span><span class=\"number\">3</span><span class=\"symbol\">f:</span><span class=\"number\">83</span><span class=\"symbol\">:</span><span class=\"number\">39</span><span class=\"symbol\">:b0</span><span class=\"symbol\">:</span><span class=\"number\">6</span><span class=\"symbol\">e:</span><span class=\"number\">95</span><span class=\"symbol\">:cc</span> wyc.jar@gmail.com</span><br><span class=\"line\">The key<span class=\"string\">'s randomart image is:</span></span><br><span class=\"line\"><span class=\"string\">+--[ RSA 2048]----+</span></span><br><span class=\"line\"><span class=\"string\">|                 |</span></span><br><span class=\"line\"><span class=\"string\">|     .           |</span></span><br><span class=\"line\"><span class=\"string\">|    . o          |</span></span><br><span class=\"line\"><span class=\"string\">|   .   o         |</span></span><br><span class=\"line\"><span class=\"string\">|  o o   S        |</span></span><br><span class=\"line\"><span class=\"string\">|.  E             |</span></span><br><span class=\"line\"><span class=\"string\">|=++              |</span></span><br><span class=\"line\"><span class=\"string\">|%*o.             |</span></span><br><span class=\"line\"><span class=\"string\">|OO+o             |</span></span><br><span class=\"line\"><span class=\"string\">+-----------------+</span></span><br></pre></td></tr></table></figure></p>\n<p>看到这个界面说明生成成功</p>\n<p>copy加密字符到剪切板</p>\n<figure class=\"highlight arcade\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pbcopy &lt; ~<span class=\"regexp\">/.ssh/i</span>d_rsa.pub</span><br></pre></td></tr></table></figure>\n<p>打开你的github<br><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. 点击 Account Settings</span><br><span class=\"line\">2. 点击左侧 <span class=\"string\">\"SSH Keys\"</span> </span><br><span class=\"line\">3. 点击 <span class=\"string\">\"Add SSH key\"</span></span><br><span class=\"line\">4. 粘贴你的可以到 <span class=\"string\">\"Key\"</span> 输入框</span><br><span class=\"line\">5. 点击 <span class=\"string\">\"Add key\"</span></span><br><span class=\"line\">6. 输入你的github密码确认</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>本文主要来自github官方，Generating SSH Keys</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">cd ~<span class=\"regexp\">/.ssh</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">ssh-keygen -t rsa -C \"your_email@example.com\"</span></span><br></pre></td></tr></table></figure>\n<p>下面的步骤可以只敲回车进行确认即可<br><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Creates a new ssh key using the provided email</span><br><span class=\"line\"></span><br><span class=\"line\">Generating public/private rsa key pair.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#这里直接回车就会生成一个默认名为id_rsa</span></span><br><span class=\"line\">Enter file <span class=\"keyword\">in</span> which to save the key (<span class=\"regexp\">/Users/you</span><span class=\"regexp\">/.ssh/id</span>_rsa): [Press enter]</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#这里需要你输入一个你加密的key（一定要记住）</span></span><br><span class=\"line\">Enter passphrase (empty <span class=\"keyword\">for</span> no passphrase): [Type a passphrase]</span><br><span class=\"line\">Enter same passphrase <span class=\"symbol\">again:</span> [Type passphrase again]</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">Your identification has been saved <span class=\"keyword\">in</span> /Users/welsonla/.ssh/id_rsa.</span><br><span class=\"line\">Your public key has been saved <span class=\"keyword\">in</span> /Users/welsonla/.ssh/id_rsa.pub.</span><br><span class=\"line\">The key fingerprint <span class=\"symbol\">is:</span></span><br><span class=\"line\"><span class=\"number\">30</span><span class=\"symbol\">:e8</span><span class=\"symbol\">:aa</span><span class=\"symbol\">:</span>08<span class=\"symbol\">:ee</span><span class=\"symbol\">:bc</span><span class=\"symbol\">:</span><span class=\"number\">76</span><span class=\"symbol\">:</span><span class=\"number\">88</span><span class=\"symbol\">:</span><span class=\"number\">2</span><span class=\"symbol\">c:</span><span class=\"number\">3</span><span class=\"symbol\">f:</span><span class=\"number\">83</span><span class=\"symbol\">:</span><span class=\"number\">39</span><span class=\"symbol\">:b0</span><span class=\"symbol\">:</span><span class=\"number\">6</span><span class=\"symbol\">e:</span><span class=\"number\">95</span><span class=\"symbol\">:cc</span> wyc.jar@gmail.com</span><br><span class=\"line\">The key<span class=\"string\">'s randomart image is:</span></span><br><span class=\"line\"><span class=\"string\">+--[ RSA 2048]----+</span></span><br><span class=\"line\"><span class=\"string\">|                 |</span></span><br><span class=\"line\"><span class=\"string\">|     .           |</span></span><br><span class=\"line\"><span class=\"string\">|    . o          |</span></span><br><span class=\"line\"><span class=\"string\">|   .   o         |</span></span><br><span class=\"line\"><span class=\"string\">|  o o   S        |</span></span><br><span class=\"line\"><span class=\"string\">|.  E             |</span></span><br><span class=\"line\"><span class=\"string\">|=++              |</span></span><br><span class=\"line\"><span class=\"string\">|%*o.             |</span></span><br><span class=\"line\"><span class=\"string\">|OO+o             |</span></span><br><span class=\"line\"><span class=\"string\">+-----------------+</span></span><br></pre></td></tr></table></figure></p>\n<p>看到这个界面说明生成成功</p>\n<p>copy加密字符到剪切板</p>\n<figure class=\"highlight arcade\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pbcopy &lt; ~<span class=\"regexp\">/.ssh/i</span>d_rsa.pub</span><br></pre></td></tr></table></figure>\n<p>打开你的github<br><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. 点击 Account Settings</span><br><span class=\"line\">2. 点击左侧 <span class=\"string\">\"SSH Keys\"</span> </span><br><span class=\"line\">3. 点击 <span class=\"string\">\"Add SSH key\"</span></span><br><span class=\"line\">4. 粘贴你的可以到 <span class=\"string\">\"Key\"</span> 输入框</span><br><span class=\"line\">5. 点击 <span class=\"string\">\"Add key\"</span></span><br><span class=\"line\">6. 输入你的github密码确认</span><br></pre></td></tr></table></figure></p>\n"},{"layout":"post","title":"blog with github(1)-前期准备","date":"2013-05-09T17:18:00.000Z","comments":1,"_content":"\n\n##开始之前\n\n1. [安装Git](http://git-scm.com/)\n2. 使用[rbenv](http://octopress.org/docs/setup/rbenv)或者[RVM](http://octopress.org/docs/setup/rvm)安装ruby 1.9.3\n\n安装完后确保你的ruby版本是1.9.3\n```ruby\nruby -v\n```\n\n\n##设置Octopress\n\n```ruby\ngit clone git://github.com/imathis/octopress.git octopress\ncd octopress  \n```\n\n接下来安装一些依赖\n\n```ruby\ngem install bundler\nrbenv rehash   \nbundle install\n```\n\n安装Octopress默认主题\n\n```ruby\nrake install\n```\n\n\n\n\n--未完待续，哥去睡觉\n","source":"_posts/2013-05-10-blog-with-github.markdown","raw":"---\nlayout: post\ntitle: \"blog with github(1)-前期准备\"\ndate: 2013-05-10 01:18\ncomments: true\ncategories: 技术随笔\n---\n\n\n##开始之前\n\n1. [安装Git](http://git-scm.com/)\n2. 使用[rbenv](http://octopress.org/docs/setup/rbenv)或者[RVM](http://octopress.org/docs/setup/rvm)安装ruby 1.9.3\n\n安装完后确保你的ruby版本是1.9.3\n```ruby\nruby -v\n```\n\n\n##设置Octopress\n\n```ruby\ngit clone git://github.com/imathis/octopress.git octopress\ncd octopress  \n```\n\n接下来安装一些依赖\n\n```ruby\ngem install bundler\nrbenv rehash   \nbundle install\n```\n\n安装Octopress默认主题\n\n```ruby\nrake install\n```\n\n\n\n\n--未完待续，哥去睡觉\n","slug":"blog-with-github","published":1,"updated":"2020-01-01T02:23:42.000Z","photos":[],"link":"","_id":"clb0uhkbn0008o63kyio48qn0","content":"<p>##开始之前</p>\n<ol>\n<li><a href=\"http://git-scm.com/\" target=\"_blank\" rel=\"noopener\">安装Git</a></li>\n<li>使用<a href=\"http://octopress.org/docs/setup/rbenv\" target=\"_blank\" rel=\"noopener\">rbenv</a>或者<a href=\"http://octopress.org/docs/setup/rvm\" target=\"_blank\" rel=\"noopener\">RVM</a>安装ruby 1.9.3</li>\n</ol>\n<p>安装完后确保你的ruby版本是1.9.3<br><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ruby -v</span><br></pre></td></tr></table></figure></p>\n<p>##设置Octopress</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone <span class=\"symbol\">git:</span>/<span class=\"regexp\">/github.com/imathis</span><span class=\"regexp\">/octopress.git octopress</span></span><br><span class=\"line\"><span class=\"regexp\">cd octopress</span></span><br></pre></td></tr></table></figure>\n<p>接下来安装一些依赖</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gem install bundler</span><br><span class=\"line\">rbenv rehash   </span><br><span class=\"line\">bundle install</span><br></pre></td></tr></table></figure>\n<p>安装Octopress默认主题</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rake install</span><br></pre></td></tr></table></figure>\n<p>–未完待续，哥去睡觉</p>\n","site":{"data":{}},"excerpt":"","more":"<p>##开始之前</p>\n<ol>\n<li><a href=\"http://git-scm.com/\" target=\"_blank\" rel=\"noopener\">安装Git</a></li>\n<li>使用<a href=\"http://octopress.org/docs/setup/rbenv\" target=\"_blank\" rel=\"noopener\">rbenv</a>或者<a href=\"http://octopress.org/docs/setup/rvm\" target=\"_blank\" rel=\"noopener\">RVM</a>安装ruby 1.9.3</li>\n</ol>\n<p>安装完后确保你的ruby版本是1.9.3<br><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ruby -v</span><br></pre></td></tr></table></figure></p>\n<p>##设置Octopress</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone <span class=\"symbol\">git:</span>/<span class=\"regexp\">/github.com/imathis</span><span class=\"regexp\">/octopress.git octopress</span></span><br><span class=\"line\"><span class=\"regexp\">cd octopress</span></span><br></pre></td></tr></table></figure>\n<p>接下来安装一些依赖</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gem install bundler</span><br><span class=\"line\">rbenv rehash   </span><br><span class=\"line\">bundle install</span><br></pre></td></tr></table></figure>\n<p>安装Octopress默认主题</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rake install</span><br></pre></td></tr></table></figure>\n<p>–未完待续，哥去睡觉</p>\n"},{"layout":"post","title":"使用RVM安装ruby","date":"2013-04-10T08:58:00.000Z","comments":1,"_content":"\n今天突然发现ruby版本不小心又回到了1.8.7，可能是我修改了rvm的配置文件导致的，于是开始折腾安装rvm和ruby\n\n首先还是先安装Homebrew吧\n很简单，一行代码搞定\n\n```ruby\nruby -e \"$(curl -fsSL https://raw.github.com/mxcl/homebrew/go)\"\n```\n\n安装RVM\n```ruby\ncurl -L https://get.rvm.io | bash -s stable --ruby\n```\n\n走着走着发现出错了\n```ruby\nMissing required packages: autoconf, automake, libtool, pkg-config, libyaml, readline, libxml2, libxslt, libksba, openssl, sqlite.\nRVM autolibs is now configured with mode '2' => 'check and stop if missing',\nplease run `rvm autolibs enable` to let RVM do it's job or run and read `rvm autolibs [help]`\nor visit https://rvm.io/rvm/autolibs for more information.\nThere were package installation errors, make sure to read the log.\nCheck Homebrew requirements https://github.com/mxcl/homebrew/wiki/Installation\n```\n\n透过错误信息，发现缺少一写依赖的包，和rvm的autolibs没打开，这时候我们就通过Homebrew先安装上（具体你要看清楚你缺少的是什么）\n```ruby\nrvm autolibs enable\nrvm reload\nbrew install autoconf automake libtool pkg-config libyaml readline libxml2 libxslt libksba openssl sqlite\n```\n\n漫长的等带后，依赖包终于装完了\n再次安装RVM\n\n```ruby\ncurl -L https://get.rvm.io | bash -s stable --ruby\n```\n\n就会安装成功，你可以rvm -v查看下版本\n\n\n安装并设置1.9.3为你的默认版本\n```ruby\nrvm install 1.9.3\nrvm use 1.9.3\nrvm rubygems latest\n```\n\nFinish\n\n","source":"_posts/2013-04-10-use-rvm-install-ruby.markdown","raw":"---\nlayout: post\ntitle: \"使用RVM安装ruby\"\ndate: 2013-04-10 16:58\ncomments: true\ncategories: 技术随笔\n---\n\n今天突然发现ruby版本不小心又回到了1.8.7，可能是我修改了rvm的配置文件导致的，于是开始折腾安装rvm和ruby\n\n首先还是先安装Homebrew吧\n很简单，一行代码搞定\n\n```ruby\nruby -e \"$(curl -fsSL https://raw.github.com/mxcl/homebrew/go)\"\n```\n\n安装RVM\n```ruby\ncurl -L https://get.rvm.io | bash -s stable --ruby\n```\n\n走着走着发现出错了\n```ruby\nMissing required packages: autoconf, automake, libtool, pkg-config, libyaml, readline, libxml2, libxslt, libksba, openssl, sqlite.\nRVM autolibs is now configured with mode '2' => 'check and stop if missing',\nplease run `rvm autolibs enable` to let RVM do it's job or run and read `rvm autolibs [help]`\nor visit https://rvm.io/rvm/autolibs for more information.\nThere were package installation errors, make sure to read the log.\nCheck Homebrew requirements https://github.com/mxcl/homebrew/wiki/Installation\n```\n\n透过错误信息，发现缺少一写依赖的包，和rvm的autolibs没打开，这时候我们就通过Homebrew先安装上（具体你要看清楚你缺少的是什么）\n```ruby\nrvm autolibs enable\nrvm reload\nbrew install autoconf automake libtool pkg-config libyaml readline libxml2 libxslt libksba openssl sqlite\n```\n\n漫长的等带后，依赖包终于装完了\n再次安装RVM\n\n```ruby\ncurl -L https://get.rvm.io | bash -s stable --ruby\n```\n\n就会安装成功，你可以rvm -v查看下版本\n\n\n安装并设置1.9.3为你的默认版本\n```ruby\nrvm install 1.9.3\nrvm use 1.9.3\nrvm rubygems latest\n```\n\nFinish\n\n","slug":"use-rvm-install-ruby","published":1,"updated":"2020-01-01T02:23:42.000Z","photos":[],"link":"","_id":"clb0uhkbq000ao63koxt38q42","content":"<p>今天突然发现ruby版本不小心又回到了1.8.7，可能是我修改了rvm的配置文件导致的，于是开始折腾安装rvm和ruby</p>\n<p>首先还是先安装Homebrew吧<br>很简单，一行代码搞定</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ruby -e <span class=\"string\">\"$(curl -fsSL https://raw.github.com/mxcl/homebrew/go)\"</span></span><br></pre></td></tr></table></figure>\n<p>安装RVM<br><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -L <span class=\"symbol\">https:</span>/<span class=\"regexp\">/get.rvm.io | bash -s stable --ruby</span></span><br></pre></td></tr></table></figure></p>\n<p>走着走着发现出错了<br><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Missing required <span class=\"symbol\">packages:</span> autoconf, automake, libtool, pkg-config, libyaml, readline, libxml2, libxslt, libksba, openssl, sqlite.</span><br><span class=\"line\">RVM autolibs is now configured with mode <span class=\"string\">'2'</span> =&gt; <span class=\"string\">'check and stop if missing'</span>,</span><br><span class=\"line\">please run <span class=\"string\">`rvm autolibs enable`</span> to let RVM <span class=\"keyword\">do</span> it<span class=\"string\">'s job or run and read `rvm autolibs [help]`</span></span><br><span class=\"line\"><span class=\"string\">or visit https://rvm.io/rvm/autolibs for more information.</span></span><br><span class=\"line\"><span class=\"string\">There were package installation errors, make sure to read the log.</span></span><br><span class=\"line\"><span class=\"string\">Check Homebrew requirements https://github.com/mxcl/homebrew/wiki/Installation</span></span><br></pre></td></tr></table></figure></p>\n<p>透过错误信息，发现缺少一写依赖的包，和rvm的autolibs没打开，这时候我们就通过Homebrew先安装上（具体你要看清楚你缺少的是什么）<br><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rvm autolibs enable</span><br><span class=\"line\">rvm reload</span><br><span class=\"line\">brew install autoconf automake libtool pkg-config libyaml readline libxml2 libxslt libksba openssl sqlite</span><br></pre></td></tr></table></figure></p>\n<p>漫长的等带后，依赖包终于装完了<br>再次安装RVM</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -L <span class=\"symbol\">https:</span>/<span class=\"regexp\">/get.rvm.io | bash -s stable --ruby</span></span><br></pre></td></tr></table></figure>\n<p>就会安装成功，你可以rvm -v查看下版本</p>\n<p>安装并设置1.9.3为你的默认版本<br><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rvm install <span class=\"number\">1.9</span>.<span class=\"number\">3</span></span><br><span class=\"line\">rvm use <span class=\"number\">1.9</span>.<span class=\"number\">3</span></span><br><span class=\"line\">rvm rubygems latest</span><br></pre></td></tr></table></figure></p>\n<p>Finish</p>\n","site":{"data":{}},"excerpt":"","more":"<p>今天突然发现ruby版本不小心又回到了1.8.7，可能是我修改了rvm的配置文件导致的，于是开始折腾安装rvm和ruby</p>\n<p>首先还是先安装Homebrew吧<br>很简单，一行代码搞定</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ruby -e <span class=\"string\">\"$(curl -fsSL https://raw.github.com/mxcl/homebrew/go)\"</span></span><br></pre></td></tr></table></figure>\n<p>安装RVM<br><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -L <span class=\"symbol\">https:</span>/<span class=\"regexp\">/get.rvm.io | bash -s stable --ruby</span></span><br></pre></td></tr></table></figure></p>\n<p>走着走着发现出错了<br><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Missing required <span class=\"symbol\">packages:</span> autoconf, automake, libtool, pkg-config, libyaml, readline, libxml2, libxslt, libksba, openssl, sqlite.</span><br><span class=\"line\">RVM autolibs is now configured with mode <span class=\"string\">'2'</span> =&gt; <span class=\"string\">'check and stop if missing'</span>,</span><br><span class=\"line\">please run <span class=\"string\">`rvm autolibs enable`</span> to let RVM <span class=\"keyword\">do</span> it<span class=\"string\">'s job or run and read `rvm autolibs [help]`</span></span><br><span class=\"line\"><span class=\"string\">or visit https://rvm.io/rvm/autolibs for more information.</span></span><br><span class=\"line\"><span class=\"string\">There were package installation errors, make sure to read the log.</span></span><br><span class=\"line\"><span class=\"string\">Check Homebrew requirements https://github.com/mxcl/homebrew/wiki/Installation</span></span><br></pre></td></tr></table></figure></p>\n<p>透过错误信息，发现缺少一写依赖的包，和rvm的autolibs没打开，这时候我们就通过Homebrew先安装上（具体你要看清楚你缺少的是什么）<br><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rvm autolibs enable</span><br><span class=\"line\">rvm reload</span><br><span class=\"line\">brew install autoconf automake libtool pkg-config libyaml readline libxml2 libxslt libksba openssl sqlite</span><br></pre></td></tr></table></figure></p>\n<p>漫长的等带后，依赖包终于装完了<br>再次安装RVM</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -L <span class=\"symbol\">https:</span>/<span class=\"regexp\">/get.rvm.io | bash -s stable --ruby</span></span><br></pre></td></tr></table></figure>\n<p>就会安装成功，你可以rvm -v查看下版本</p>\n<p>安装并设置1.9.3为你的默认版本<br><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rvm install <span class=\"number\">1.9</span>.<span class=\"number\">3</span></span><br><span class=\"line\">rvm use <span class=\"number\">1.9</span>.<span class=\"number\">3</span></span><br><span class=\"line\">rvm rubygems latest</span><br></pre></td></tr></table></figure></p>\n<p>Finish</p>\n"},{"layout":"post","title":"different of class and category","date":"2013-05-09T17:05:00.000Z","comments":1,"_content":"\n\n当需要重写父类中的方法时，这时候定义子类\n\n\n```ruby\n@interface JADanSideController : JASidePanelController\n\n\n@end\n\n\n@implementation JADanSideController\n\n- (UIBarButtonItem *)leftButtonForCenterPanel{\n    \n    UIButton *leftBarButton = [UIButton buttonWithType:UIButtonTypeCustom];\n    [leftBarButton setFrame:CGRectMake(0, 0, 44, 30)];\n    [leftBarButton setBackgroundImage:[UIImage imageNamed:@\"List_NaviSide.png\"] forState:UIControlStateNormal];\n    [leftBarButton addTarget:self action:@selector(toggleLeftPanel:) forControlEvents:UIControlEventTouchUpInside];\n    __autoreleasing UIBarButtonItem *leftBarButtonItem = [[UIBarButtonItem alloc] initWithCustomView:leftBarButton];\n\n    return leftBarButtonItem;\n}\n\n@end\n\n```\n\n当需要为父类添加方法时，这时候定义类别\n\n\n```ruby\n@interface JADanSideController : JASidePanelController\n\n- (void)setBackGroundColor;\n\n@end\n\n```\n","source":"_posts/2013-05-10-different-of-class-and-category.markdown","raw":"---\nlayout: post\ntitle: \"different of class and category\"\ndate: 2013-05-10 01:05\ncomments: true\ncategories: 技术随笔 \n---\n\n\n当需要重写父类中的方法时，这时候定义子类\n\n\n```ruby\n@interface JADanSideController : JASidePanelController\n\n\n@end\n\n\n@implementation JADanSideController\n\n- (UIBarButtonItem *)leftButtonForCenterPanel{\n    \n    UIButton *leftBarButton = [UIButton buttonWithType:UIButtonTypeCustom];\n    [leftBarButton setFrame:CGRectMake(0, 0, 44, 30)];\n    [leftBarButton setBackgroundImage:[UIImage imageNamed:@\"List_NaviSide.png\"] forState:UIControlStateNormal];\n    [leftBarButton addTarget:self action:@selector(toggleLeftPanel:) forControlEvents:UIControlEventTouchUpInside];\n    __autoreleasing UIBarButtonItem *leftBarButtonItem = [[UIBarButtonItem alloc] initWithCustomView:leftBarButton];\n\n    return leftBarButtonItem;\n}\n\n@end\n\n```\n\n当需要为父类添加方法时，这时候定义类别\n\n\n```ruby\n@interface JADanSideController : JASidePanelController\n\n- (void)setBackGroundColor;\n\n@end\n\n```\n","slug":"different-of-class-and-category","published":1,"updated":"2020-01-01T02:23:42.000Z","photos":[],"link":"","_id":"clb0uhkbt000co63kyx15o3kc","content":"<p>当需要重写父类中的方法时，这时候定义子类</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@interface JADanSideController : JASidePanelController</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">@end</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">@implementation JADanSideController</span><br><span class=\"line\"></span><br><span class=\"line\">- (UIBarButtonItem *)leftButtonForCenterPanel&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    UIButton *leftBarButton = [UIButton <span class=\"symbol\">buttonWithType:</span>UIButtonTypeCustom];</span><br><span class=\"line\">    [leftBarButton <span class=\"symbol\">setFrame:</span>CGRectMake(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">44</span>, <span class=\"number\">30</span>)];</span><br><span class=\"line\">    [leftBarButton <span class=\"symbol\">setBackgroundImage:</span>[UIImage <span class=\"symbol\">imageNamed:</span>@<span class=\"string\">\"List_NaviSide.png\"</span>] <span class=\"symbol\">forState:</span>UIControlStateNormal];</span><br><span class=\"line\">    [leftBarButton <span class=\"symbol\">addTarget:</span><span class=\"keyword\">self</span> <span class=\"symbol\">action:</span>@selector(<span class=\"symbol\">toggleLeftPanel:</span>) <span class=\"symbol\">forControlEvents:</span>UIControlEventTouchUpInside];</span><br><span class=\"line\">    __autoreleasing UIBarButtonItem *leftBarButtonItem = [[UIBarButtonItem alloc] <span class=\"symbol\">initWithCustomView:</span>leftBarButton];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> leftBarButtonItem;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">@end</span><br></pre></td></tr></table></figure>\n<p>当需要为父类添加方法时，这时候定义类别</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@interface JADanSideController : JASidePanelController</span><br><span class=\"line\"></span><br><span class=\"line\">- (void)setBackGroundColor;</span><br><span class=\"line\"></span><br><span class=\"line\">@end</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p>当需要重写父类中的方法时，这时候定义子类</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@interface JADanSideController : JASidePanelController</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">@end</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">@implementation JADanSideController</span><br><span class=\"line\"></span><br><span class=\"line\">- (UIBarButtonItem *)leftButtonForCenterPanel&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    UIButton *leftBarButton = [UIButton <span class=\"symbol\">buttonWithType:</span>UIButtonTypeCustom];</span><br><span class=\"line\">    [leftBarButton <span class=\"symbol\">setFrame:</span>CGRectMake(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">44</span>, <span class=\"number\">30</span>)];</span><br><span class=\"line\">    [leftBarButton <span class=\"symbol\">setBackgroundImage:</span>[UIImage <span class=\"symbol\">imageNamed:</span>@<span class=\"string\">\"List_NaviSide.png\"</span>] <span class=\"symbol\">forState:</span>UIControlStateNormal];</span><br><span class=\"line\">    [leftBarButton <span class=\"symbol\">addTarget:</span><span class=\"keyword\">self</span> <span class=\"symbol\">action:</span>@selector(<span class=\"symbol\">toggleLeftPanel:</span>) <span class=\"symbol\">forControlEvents:</span>UIControlEventTouchUpInside];</span><br><span class=\"line\">    __autoreleasing UIBarButtonItem *leftBarButtonItem = [[UIBarButtonItem alloc] <span class=\"symbol\">initWithCustomView:</span>leftBarButton];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> leftBarButtonItem;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">@end</span><br></pre></td></tr></table></figure>\n<p>当需要为父类添加方法时，这时候定义类别</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@interface JADanSideController : JASidePanelController</span><br><span class=\"line\"></span><br><span class=\"line\">- (void)setBackGroundColor;</span><br><span class=\"line\"></span><br><span class=\"line\">@end</span><br></pre></td></tr></table></figure>\n"},{"layout":"post","title":"blog with github(2)-部署到github","date":"2013-06-03T05:20:00.000Z","comments":1,"_content":"\n\n###使用github pages\n\n如果想使用 http://username.github.io 的域名作为你的blog地址的话，首先要创建一个仓库，名字为你的用户id.github.io（比如我的是welsonla.github.io）\n\n\n\n用户使用的是Github Pages的master版本下面的public作为你的网站主目录，你可以通过浏览http://username.github.io 来查看。如果你想在source这个版本上面维护代码，并且把内容提交到master分支，Octopress有一个命令来帮助你完成这些\n\n```ruby\nrake setup_github_pages\n```\n\n然后，他将 \n\n1. 询问你的github pages的url\n2. 将远程的重‘origin’重命名为‘octopress’\n3. 在远程的origin讲你的github pages仓库添加进去\n4. 切换当前branch从master切换到source\n5. 根据你的仓库名，重新配置你的blog地址\n6. 在_deploy目录下面设置master分支，用于部署\n\n\n\n接下来执行\n```ruby\nrake generate\nrake deploy\n\n```\n\n这将生成你的blog，并将生成的文件copy到_deploy目录下面,并添加到git，将他们commit和push到master分支上面，稍后，你会收到一份来自github的email告诉你，你的提交已经收到，并且很快将发不到你的web上面\n\n\n并且，不要忘记提交你的代码到source分支\n\n```ruby\ngit add .\ngit commit -m 'your message'\ngit push origin source\n```\n\n\n\n####自定义域名绑定\n\n\n首先你要source目录下面创建一个CNAME，\n\n```ruby\necho 'your-domain.com' >> source/CNAME\n```\n\n\n之后去你的域名服务商或者你的dns服务商那里创建一条CNAME记录，记录指向的IP为\n(不要使用顶级域名指向到pages,要使用二级域名)\n```ruby\n207.97.227.245\n```\n","source":"_posts/2013-06-03-blog-with-github-2.markdown","raw":"---\nlayout: post\ntitle: \"blog with github(2)-部署到github\"\ndate: 2013-06-03 13:20\ncomments: true\ncategories: 技术随笔 \n---\n\n\n###使用github pages\n\n如果想使用 http://username.github.io 的域名作为你的blog地址的话，首先要创建一个仓库，名字为你的用户id.github.io（比如我的是welsonla.github.io）\n\n\n\n用户使用的是Github Pages的master版本下面的public作为你的网站主目录，你可以通过浏览http://username.github.io 来查看。如果你想在source这个版本上面维护代码，并且把内容提交到master分支，Octopress有一个命令来帮助你完成这些\n\n```ruby\nrake setup_github_pages\n```\n\n然后，他将 \n\n1. 询问你的github pages的url\n2. 将远程的重‘origin’重命名为‘octopress’\n3. 在远程的origin讲你的github pages仓库添加进去\n4. 切换当前branch从master切换到source\n5. 根据你的仓库名，重新配置你的blog地址\n6. 在_deploy目录下面设置master分支，用于部署\n\n\n\n接下来执行\n```ruby\nrake generate\nrake deploy\n\n```\n\n这将生成你的blog，并将生成的文件copy到_deploy目录下面,并添加到git，将他们commit和push到master分支上面，稍后，你会收到一份来自github的email告诉你，你的提交已经收到，并且很快将发不到你的web上面\n\n\n并且，不要忘记提交你的代码到source分支\n\n```ruby\ngit add .\ngit commit -m 'your message'\ngit push origin source\n```\n\n\n\n####自定义域名绑定\n\n\n首先你要source目录下面创建一个CNAME，\n\n```ruby\necho 'your-domain.com' >> source/CNAME\n```\n\n\n之后去你的域名服务商或者你的dns服务商那里创建一条CNAME记录，记录指向的IP为\n(不要使用顶级域名指向到pages,要使用二级域名)\n```ruby\n207.97.227.245\n```\n","slug":"blog-with-github-2","published":1,"updated":"2020-01-01T02:23:42.000Z","photos":[],"link":"","_id":"clb0uhkbv000do63kw0chjn2s","content":"<p>###使用github pages</p>\n<p>如果想使用 <a href=\"http://username.github.io\" target=\"_blank\" rel=\"noopener\">http://username.github.io</a> 的域名作为你的blog地址的话，首先要创建一个仓库，名字为你的用户id.github.io（比如我的是welsonla.github.io）</p>\n<p>用户使用的是Github Pages的master版本下面的public作为你的网站主目录，你可以通过浏览<a href=\"http://username.github.io\" target=\"_blank\" rel=\"noopener\">http://username.github.io</a> 来查看。如果你想在source这个版本上面维护代码，并且把内容提交到master分支，Octopress有一个命令来帮助你完成这些</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rake setup_github_pages</span><br></pre></td></tr></table></figure>\n<p>然后，他将 </p>\n<ol>\n<li>询问你的github pages的url</li>\n<li>将远程的重‘origin’重命名为‘octopress’</li>\n<li>在远程的origin讲你的github pages仓库添加进去</li>\n<li>切换当前branch从master切换到source</li>\n<li>根据你的仓库名，重新配置你的blog地址</li>\n<li>在_deploy目录下面设置master分支，用于部署</li>\n</ol>\n<p>接下来执行<br><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rake generate</span><br><span class=\"line\">rake deploy</span><br></pre></td></tr></table></figure></p>\n<p>这将生成你的blog，并将生成的文件copy到_deploy目录下面,并添加到git，将他们commit和push到master分支上面，稍后，你会收到一份来自github的email告诉你，你的提交已经收到，并且很快将发不到你的web上面</p>\n<p>并且，不要忘记提交你的代码到source分支</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add .</span><br><span class=\"line\">git commit -m <span class=\"string\">'your message'</span></span><br><span class=\"line\">git push origin source</span><br></pre></td></tr></table></figure>\n<p>####自定义域名绑定</p>\n<p>首先你要source目录下面创建一个CNAME，</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo <span class=\"string\">'your-domain.com'</span> &gt;&gt; source/CNAME</span><br></pre></td></tr></table></figure>\n<p>之后去你的域名服务商或者你的dns服务商那里创建一条CNAME记录，记录指向的IP为<br>(不要使用顶级域名指向到pages,要使用二级域名)<br><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">207.97</span>.<span class=\"number\">227.245</span></span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>###使用github pages</p>\n<p>如果想使用 <a href=\"http://username.github.io\" target=\"_blank\" rel=\"noopener\">http://username.github.io</a> 的域名作为你的blog地址的话，首先要创建一个仓库，名字为你的用户id.github.io（比如我的是welsonla.github.io）</p>\n<p>用户使用的是Github Pages的master版本下面的public作为你的网站主目录，你可以通过浏览<a href=\"http://username.github.io\" target=\"_blank\" rel=\"noopener\">http://username.github.io</a> 来查看。如果你想在source这个版本上面维护代码，并且把内容提交到master分支，Octopress有一个命令来帮助你完成这些</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rake setup_github_pages</span><br></pre></td></tr></table></figure>\n<p>然后，他将 </p>\n<ol>\n<li>询问你的github pages的url</li>\n<li>将远程的重‘origin’重命名为‘octopress’</li>\n<li>在远程的origin讲你的github pages仓库添加进去</li>\n<li>切换当前branch从master切换到source</li>\n<li>根据你的仓库名，重新配置你的blog地址</li>\n<li>在_deploy目录下面设置master分支，用于部署</li>\n</ol>\n<p>接下来执行<br><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rake generate</span><br><span class=\"line\">rake deploy</span><br></pre></td></tr></table></figure></p>\n<p>这将生成你的blog，并将生成的文件copy到_deploy目录下面,并添加到git，将他们commit和push到master分支上面，稍后，你会收到一份来自github的email告诉你，你的提交已经收到，并且很快将发不到你的web上面</p>\n<p>并且，不要忘记提交你的代码到source分支</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add .</span><br><span class=\"line\">git commit -m <span class=\"string\">'your message'</span></span><br><span class=\"line\">git push origin source</span><br></pre></td></tr></table></figure>\n<p>####自定义域名绑定</p>\n<p>首先你要source目录下面创建一个CNAME，</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo <span class=\"string\">'your-domain.com'</span> &gt;&gt; source/CNAME</span><br></pre></td></tr></table></figure>\n<p>之后去你的域名服务商或者你的dns服务商那里创建一条CNAME记录，记录指向的IP为<br>(不要使用顶级域名指向到pages,要使用二级域名)<br><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">207.97</span>.<span class=\"number\">227.245</span></span><br></pre></td></tr></table></figure></p>\n"},{"layout":"post","title":"blog with github(3)-Octopress配置","date":"2013-06-03T05:46:00.000Z","comments":1,"_content":"\n\nOctopress的配置相当的简单，并且一般配置完成后，你不需要再对Rakefile和_config文件进行修改，下面这些是Octopress的配置文件\n\n```ruby\n_config.yml       # Main config (Jekyll's settings)\nRakefile          # Configs for deployment\nconfig.rb         # Compass config\nconfig.ru         # Rack config\n\n```\n\nRakefile大多是与部署相关的配置,如果不需要同步的话，你就不需要进行修改\n\n####Blog配置\n\n_config.yml有三部分配置,你必须修改url，并且title，subtitle和author也要修改，还有一些第三方的服务需要启用\n\n\n#####主配置\n```ruby\nurl:                # For rewriting urls for RSS, etc\ntitle:              # Used in the header and title tags\nsubtitle:           # A description used in the header\nauthor:             # Your name, for RSS, Copyright, Metadata\nsimple_search:      # Search engine for simple site search\ndescription:        # A default meta description for your site\ndate_format:        # Format dates using Ruby's date strftime syntax\nsubscribe_rss:      # Url for your blog's feed, defauts to /atom.xml\nsubscribe_email:    # Url to subscribe by email (service required)\ncategory_feeds:     # Enable per category RSS feeds (defaults to false in 2.1)\nemail:              # Email address for the RSS feed if you want it.\n```\n\n\n#####Jekyll&Plugins\n\n```ruby\nroot:               # Mapping for relative urls (default: /)\npermalink:          # Permalink structure for blog posts\nsource:             # Directory for site source files\ndestination:        # Directory for generated site files\nplugins:            # Directory for Jekyll plugins\ncode_dir:           # Directory for code snippets (for include_code plugin)\ncategory_dir:       # Directory for generated blog category pages\n\npygments:           # Toggle python pygments syntax highlighting\npaginate:           # Posts per page on the blog index\npagination_dir:     # Directory base for pagination URLs eg. /blog/page/2/\nrecent_posts:       # Number of recent posts to appear in the sidebar\n\ndefault_asides:     # Configure what shows up in the sidebar and in what order\nblog_index_asides:  # Optional sidebar config for blog index page\npost_asides:        # Optional sidebar config for post layout\npage_asides:        # Optional sidebar config for page layout\n```\n\n\n#####第三方配置\n```ruby\nGithub - List your github repositories in the sidebar\nTwitter - Setup a sidebar twitter feed, follow button, and tweet button (for sharing posts and pages).\nGoogle Plus One - Setup sharing for posts and pages on Google’s plus one network.\nPinboard - Share your recent Pinboard bookmarks in the sidebar.\nDelicious - Share your recent Delicious bookmarks in the sidebar.\nDisqus Comments - Add your disqus short name to enable disqus comments on your site.\nGoogle Analytics - Add your tracking id to enable Google Analytics tracking for your site.\nFacebook - Add a Facebook like button\n\n```\n","source":"_posts/2013-06-03-blog-with-github-3.markdown","raw":"---\nlayout: post\ntitle: \"blog with github(3)-Octopress配置\"\ndate: 2013-06-03 13:46\ncomments: true\ncategories: 技术随笔 \n---\n\n\nOctopress的配置相当的简单，并且一般配置完成后，你不需要再对Rakefile和_config文件进行修改，下面这些是Octopress的配置文件\n\n```ruby\n_config.yml       # Main config (Jekyll's settings)\nRakefile          # Configs for deployment\nconfig.rb         # Compass config\nconfig.ru         # Rack config\n\n```\n\nRakefile大多是与部署相关的配置,如果不需要同步的话，你就不需要进行修改\n\n####Blog配置\n\n_config.yml有三部分配置,你必须修改url，并且title，subtitle和author也要修改，还有一些第三方的服务需要启用\n\n\n#####主配置\n```ruby\nurl:                # For rewriting urls for RSS, etc\ntitle:              # Used in the header and title tags\nsubtitle:           # A description used in the header\nauthor:             # Your name, for RSS, Copyright, Metadata\nsimple_search:      # Search engine for simple site search\ndescription:        # A default meta description for your site\ndate_format:        # Format dates using Ruby's date strftime syntax\nsubscribe_rss:      # Url for your blog's feed, defauts to /atom.xml\nsubscribe_email:    # Url to subscribe by email (service required)\ncategory_feeds:     # Enable per category RSS feeds (defaults to false in 2.1)\nemail:              # Email address for the RSS feed if you want it.\n```\n\n\n#####Jekyll&Plugins\n\n```ruby\nroot:               # Mapping for relative urls (default: /)\npermalink:          # Permalink structure for blog posts\nsource:             # Directory for site source files\ndestination:        # Directory for generated site files\nplugins:            # Directory for Jekyll plugins\ncode_dir:           # Directory for code snippets (for include_code plugin)\ncategory_dir:       # Directory for generated blog category pages\n\npygments:           # Toggle python pygments syntax highlighting\npaginate:           # Posts per page on the blog index\npagination_dir:     # Directory base for pagination URLs eg. /blog/page/2/\nrecent_posts:       # Number of recent posts to appear in the sidebar\n\ndefault_asides:     # Configure what shows up in the sidebar and in what order\nblog_index_asides:  # Optional sidebar config for blog index page\npost_asides:        # Optional sidebar config for post layout\npage_asides:        # Optional sidebar config for page layout\n```\n\n\n#####第三方配置\n```ruby\nGithub - List your github repositories in the sidebar\nTwitter - Setup a sidebar twitter feed, follow button, and tweet button (for sharing posts and pages).\nGoogle Plus One - Setup sharing for posts and pages on Google’s plus one network.\nPinboard - Share your recent Pinboard bookmarks in the sidebar.\nDelicious - Share your recent Delicious bookmarks in the sidebar.\nDisqus Comments - Add your disqus short name to enable disqus comments on your site.\nGoogle Analytics - Add your tracking id to enable Google Analytics tracking for your site.\nFacebook - Add a Facebook like button\n\n```\n","slug":"blog-with-github-3","published":1,"updated":"2020-01-01T02:23:42.000Z","photos":[],"link":"","_id":"clb0uhkby000go63k0xm6xlm0","content":"<p>Octopress的配置相当的简单，并且一般配置完成后，你不需要再对Rakefile和_config文件进行修改，下面这些是Octopress的配置文件</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">_config.yml       <span class=\"comment\"># Main config (Jekyll's settings)</span></span><br><span class=\"line\">Rakefile          <span class=\"comment\"># Configs for deployment</span></span><br><span class=\"line\">config.rb         <span class=\"comment\"># Compass config</span></span><br><span class=\"line\">config.ru         <span class=\"comment\"># Rack config</span></span><br></pre></td></tr></table></figure>\n<p>Rakefile大多是与部署相关的配置,如果不需要同步的话，你就不需要进行修改</p>\n<p>####Blog配置</p>\n<p>_config.yml有三部分配置,你必须修改url，并且title，subtitle和author也要修改，还有一些第三方的服务需要启用</p>\n<p>#####主配置<br><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">url:</span>                <span class=\"comment\"># For rewriting urls for RSS, etc</span></span><br><span class=\"line\"><span class=\"symbol\">title:</span>              <span class=\"comment\"># Used in the header and title tags</span></span><br><span class=\"line\"><span class=\"symbol\">subtitle:</span>           <span class=\"comment\"># A description used in the header</span></span><br><span class=\"line\"><span class=\"symbol\">author:</span>             <span class=\"comment\"># Your name, for RSS, Copyright, Metadata</span></span><br><span class=\"line\"><span class=\"symbol\">simple_search:</span>      <span class=\"comment\"># Search engine for simple site search</span></span><br><span class=\"line\"><span class=\"symbol\">description:</span>        <span class=\"comment\"># A default meta description for your site</span></span><br><span class=\"line\"><span class=\"symbol\">date_format:</span>        <span class=\"comment\"># Format dates using Ruby's date strftime syntax</span></span><br><span class=\"line\"><span class=\"symbol\">subscribe_rss:</span>      <span class=\"comment\"># Url for your blog's feed, defauts to /atom.xml</span></span><br><span class=\"line\"><span class=\"symbol\">subscribe_email:</span>    <span class=\"comment\"># Url to subscribe by email (service required)</span></span><br><span class=\"line\"><span class=\"symbol\">category_feeds:</span>     <span class=\"comment\"># Enable per category RSS feeds (defaults to false in 2.1)</span></span><br><span class=\"line\"><span class=\"symbol\">email:</span>              <span class=\"comment\"># Email address for the RSS feed if you want it.</span></span><br></pre></td></tr></table></figure></p>\n<p>#####Jekyll&amp;Plugins</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">root:</span>               <span class=\"comment\"># Mapping for relative urls (default: /)</span></span><br><span class=\"line\"><span class=\"symbol\">permalink:</span>          <span class=\"comment\"># Permalink structure for blog posts</span></span><br><span class=\"line\"><span class=\"symbol\">source:</span>             <span class=\"comment\"># Directory for site source files</span></span><br><span class=\"line\"><span class=\"symbol\">destination:</span>        <span class=\"comment\"># Directory for generated site files</span></span><br><span class=\"line\"><span class=\"symbol\">plugins:</span>            <span class=\"comment\"># Directory for Jekyll plugins</span></span><br><span class=\"line\"><span class=\"symbol\">code_dir:</span>           <span class=\"comment\"># Directory for code snippets (for include_code plugin)</span></span><br><span class=\"line\"><span class=\"symbol\">category_dir:</span>       <span class=\"comment\"># Directory for generated blog category pages</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">pygments:</span>           <span class=\"comment\"># Toggle python pygments syntax highlighting</span></span><br><span class=\"line\"><span class=\"symbol\">paginate:</span>           <span class=\"comment\"># Posts per page on the blog index</span></span><br><span class=\"line\"><span class=\"symbol\">pagination_dir:</span>     <span class=\"comment\"># Directory base for pagination URLs eg. /blog/page/2/</span></span><br><span class=\"line\"><span class=\"symbol\">recent_posts:</span>       <span class=\"comment\"># Number of recent posts to appear in the sidebar</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">default_asides:</span>     <span class=\"comment\"># Configure what shows up in the sidebar and in what order</span></span><br><span class=\"line\"><span class=\"symbol\">blog_index_asides:</span>  <span class=\"comment\"># Optional sidebar config for blog index page</span></span><br><span class=\"line\"><span class=\"symbol\">post_asides:</span>        <span class=\"comment\"># Optional sidebar config for post layout</span></span><br><span class=\"line\"><span class=\"symbol\">page_asides:</span>        <span class=\"comment\"># Optional sidebar config for page layout</span></span><br></pre></td></tr></table></figure>\n<p>#####第三方配置<br><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Github - List your github repositories <span class=\"keyword\">in</span> the sidebar</span><br><span class=\"line\">Twitter - Setup a sidebar twitter feed, follow button, <span class=\"keyword\">and</span> tweet button (<span class=\"keyword\">for</span> sharing posts <span class=\"keyword\">and</span> pages).</span><br><span class=\"line\">Google Plus One - Setup sharing <span class=\"keyword\">for</span> posts <span class=\"keyword\">and</span> pages on Google’s plus one network.</span><br><span class=\"line\">Pinboard - Share your recent Pinboard bookmarks <span class=\"keyword\">in</span> the sidebar.</span><br><span class=\"line\">Delicious - Share your recent Delicious bookmarks <span class=\"keyword\">in</span> the sidebar.</span><br><span class=\"line\">Disqus Comments - Add your disqus short name to enable disqus comments on your site.</span><br><span class=\"line\">Google Analytics - Add your tracking id to enable Google Analytics tracking <span class=\"keyword\">for</span> your site.</span><br><span class=\"line\">Facebook - Add a Facebook like button</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Octopress的配置相当的简单，并且一般配置完成后，你不需要再对Rakefile和_config文件进行修改，下面这些是Octopress的配置文件</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">_config.yml       <span class=\"comment\"># Main config (Jekyll's settings)</span></span><br><span class=\"line\">Rakefile          <span class=\"comment\"># Configs for deployment</span></span><br><span class=\"line\">config.rb         <span class=\"comment\"># Compass config</span></span><br><span class=\"line\">config.ru         <span class=\"comment\"># Rack config</span></span><br></pre></td></tr></table></figure>\n<p>Rakefile大多是与部署相关的配置,如果不需要同步的话，你就不需要进行修改</p>\n<p>####Blog配置</p>\n<p>_config.yml有三部分配置,你必须修改url，并且title，subtitle和author也要修改，还有一些第三方的服务需要启用</p>\n<p>#####主配置<br><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">url:</span>                <span class=\"comment\"># For rewriting urls for RSS, etc</span></span><br><span class=\"line\"><span class=\"symbol\">title:</span>              <span class=\"comment\"># Used in the header and title tags</span></span><br><span class=\"line\"><span class=\"symbol\">subtitle:</span>           <span class=\"comment\"># A description used in the header</span></span><br><span class=\"line\"><span class=\"symbol\">author:</span>             <span class=\"comment\"># Your name, for RSS, Copyright, Metadata</span></span><br><span class=\"line\"><span class=\"symbol\">simple_search:</span>      <span class=\"comment\"># Search engine for simple site search</span></span><br><span class=\"line\"><span class=\"symbol\">description:</span>        <span class=\"comment\"># A default meta description for your site</span></span><br><span class=\"line\"><span class=\"symbol\">date_format:</span>        <span class=\"comment\"># Format dates using Ruby's date strftime syntax</span></span><br><span class=\"line\"><span class=\"symbol\">subscribe_rss:</span>      <span class=\"comment\"># Url for your blog's feed, defauts to /atom.xml</span></span><br><span class=\"line\"><span class=\"symbol\">subscribe_email:</span>    <span class=\"comment\"># Url to subscribe by email (service required)</span></span><br><span class=\"line\"><span class=\"symbol\">category_feeds:</span>     <span class=\"comment\"># Enable per category RSS feeds (defaults to false in 2.1)</span></span><br><span class=\"line\"><span class=\"symbol\">email:</span>              <span class=\"comment\"># Email address for the RSS feed if you want it.</span></span><br></pre></td></tr></table></figure></p>\n<p>#####Jekyll&amp;Plugins</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">root:</span>               <span class=\"comment\"># Mapping for relative urls (default: /)</span></span><br><span class=\"line\"><span class=\"symbol\">permalink:</span>          <span class=\"comment\"># Permalink structure for blog posts</span></span><br><span class=\"line\"><span class=\"symbol\">source:</span>             <span class=\"comment\"># Directory for site source files</span></span><br><span class=\"line\"><span class=\"symbol\">destination:</span>        <span class=\"comment\"># Directory for generated site files</span></span><br><span class=\"line\"><span class=\"symbol\">plugins:</span>            <span class=\"comment\"># Directory for Jekyll plugins</span></span><br><span class=\"line\"><span class=\"symbol\">code_dir:</span>           <span class=\"comment\"># Directory for code snippets (for include_code plugin)</span></span><br><span class=\"line\"><span class=\"symbol\">category_dir:</span>       <span class=\"comment\"># Directory for generated blog category pages</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">pygments:</span>           <span class=\"comment\"># Toggle python pygments syntax highlighting</span></span><br><span class=\"line\"><span class=\"symbol\">paginate:</span>           <span class=\"comment\"># Posts per page on the blog index</span></span><br><span class=\"line\"><span class=\"symbol\">pagination_dir:</span>     <span class=\"comment\"># Directory base for pagination URLs eg. /blog/page/2/</span></span><br><span class=\"line\"><span class=\"symbol\">recent_posts:</span>       <span class=\"comment\"># Number of recent posts to appear in the sidebar</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">default_asides:</span>     <span class=\"comment\"># Configure what shows up in the sidebar and in what order</span></span><br><span class=\"line\"><span class=\"symbol\">blog_index_asides:</span>  <span class=\"comment\"># Optional sidebar config for blog index page</span></span><br><span class=\"line\"><span class=\"symbol\">post_asides:</span>        <span class=\"comment\"># Optional sidebar config for post layout</span></span><br><span class=\"line\"><span class=\"symbol\">page_asides:</span>        <span class=\"comment\"># Optional sidebar config for page layout</span></span><br></pre></td></tr></table></figure>\n<p>#####第三方配置<br><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Github - List your github repositories <span class=\"keyword\">in</span> the sidebar</span><br><span class=\"line\">Twitter - Setup a sidebar twitter feed, follow button, <span class=\"keyword\">and</span> tweet button (<span class=\"keyword\">for</span> sharing posts <span class=\"keyword\">and</span> pages).</span><br><span class=\"line\">Google Plus One - Setup sharing <span class=\"keyword\">for</span> posts <span class=\"keyword\">and</span> pages on Google’s plus one network.</span><br><span class=\"line\">Pinboard - Share your recent Pinboard bookmarks <span class=\"keyword\">in</span> the sidebar.</span><br><span class=\"line\">Delicious - Share your recent Delicious bookmarks <span class=\"keyword\">in</span> the sidebar.</span><br><span class=\"line\">Disqus Comments - Add your disqus short name to enable disqus comments on your site.</span><br><span class=\"line\">Google Analytics - Add your tracking id to enable Google Analytics tracking <span class=\"keyword\">for</span> your site.</span><br><span class=\"line\">Facebook - Add a Facebook like button</span><br></pre></td></tr></table></figure></p>\n"},{"layout":"post","title":"blog with github(4)-开始写吧，骚年","date":"2013-06-03T05:57:00.000Z","comments":1,"_content":"\n\nOctopress提供很多的Rake任务去创建post和pages，他还会根据你的posts来生成Category，你可以在atom.xml或者blog/categories/\\<category\\>/atom.xml中找到这些内容\n\n\n####Post\n\n这些Post页面必须存放在Source/_posts目录下面，并且命名方式和jekyll的命名方式一样，会转换成YYYY-MM-DD-Post-title.markdown，这个文件的名字就是你的blog的url slug，日期帮助你排序这些文章\n\n\n```ruby\nrake new_post[\"Title\"]\n```\n\n在使用了ZSH的话，你要这样创建\n\n```ruby\nrake new_post或者rake new_post[\\\"Title\\\"]\n```\n\n例如\n\n```ruby\nrake new_post[\"Zombie Ninjas Attack: A survivor's retrospective\"]\n Creates source/_posts/2011-07-03-zombie-ninjas-attack-a-survivors-retrospective.markdown\n```\nor\n\n```ruby\n~/Code/rails/octopress(branch:source) » rake new_post                        \nEnter a title for your post: blog-with-github-4\nmkdir -p source/_posts\nCreating new post: source/_posts/2013-06-03-blog-with-github-4.markdown\n```\n\n\n生成的内容大致如下\n\n```ruby\n---\nlayout: post\ntitle: \"Zombie Ninjas Attack: A survivor's retrospective\"\ndate: 2011-07-03 5:59\ncomments: true\nexternal-url:\ncategories:\n---\n```\n\n你可以关闭comments，或者为他添加categories的tag，并且你还可以添加`author: Your Name`与`published: false`来控制是否发布\n\n\n####Page\n\n生成Page的命令\n\n```ruby\nrake new_page[super-awesome]\n# creates /source/super-awesome/index.markdown\n\nrake new_page[super-awesome/page.html]\n```\n\n如果使用了zsh的话，方法要参照post的创建方式\n\n生成的pages的默认内如大致如下\n\n```ruby\n---\nlayout: page\ntitle: \"Super Awesome\"\ndate: 2011-07-03 5:59\ncomments: true\nsharing: true\nfooter: true\n---\n```\n\n####Content\n\n如果列表中不想显示全文内容的话，可以添加`<!-- more -->`标签，这将在文章下面生成一个“Continue →” 链接，链接到全文的地址\n\n\n\n\n###Generate & Preview\n\n```ruby\nrake generate   # Generates posts and pages into the public directory\nrake watch      # Watches source/ and sass/ for changes and regenerates\nrake preview    # Watches, and mounts a webserver at http://localhost:4000\n```\n\n本地使用http://localhost:4000就可以访问了\n\n\n\n\n\n\n\n","source":"_posts/2013-06-03-blog-with-github-4.markdown","raw":"---\nlayout: post\ntitle: \"blog with github(4)-开始写吧，骚年\"\ndate: 2013-06-03 13:57\ncomments: true\ncategories: 技术随笔 \n---\n\n\nOctopress提供很多的Rake任务去创建post和pages，他还会根据你的posts来生成Category，你可以在atom.xml或者blog/categories/\\<category\\>/atom.xml中找到这些内容\n\n\n####Post\n\n这些Post页面必须存放在Source/_posts目录下面，并且命名方式和jekyll的命名方式一样，会转换成YYYY-MM-DD-Post-title.markdown，这个文件的名字就是你的blog的url slug，日期帮助你排序这些文章\n\n\n```ruby\nrake new_post[\"Title\"]\n```\n\n在使用了ZSH的话，你要这样创建\n\n```ruby\nrake new_post或者rake new_post[\\\"Title\\\"]\n```\n\n例如\n\n```ruby\nrake new_post[\"Zombie Ninjas Attack: A survivor's retrospective\"]\n Creates source/_posts/2011-07-03-zombie-ninjas-attack-a-survivors-retrospective.markdown\n```\nor\n\n```ruby\n~/Code/rails/octopress(branch:source) » rake new_post                        \nEnter a title for your post: blog-with-github-4\nmkdir -p source/_posts\nCreating new post: source/_posts/2013-06-03-blog-with-github-4.markdown\n```\n\n\n生成的内容大致如下\n\n```ruby\n---\nlayout: post\ntitle: \"Zombie Ninjas Attack: A survivor's retrospective\"\ndate: 2011-07-03 5:59\ncomments: true\nexternal-url:\ncategories:\n---\n```\n\n你可以关闭comments，或者为他添加categories的tag，并且你还可以添加`author: Your Name`与`published: false`来控制是否发布\n\n\n####Page\n\n生成Page的命令\n\n```ruby\nrake new_page[super-awesome]\n# creates /source/super-awesome/index.markdown\n\nrake new_page[super-awesome/page.html]\n```\n\n如果使用了zsh的话，方法要参照post的创建方式\n\n生成的pages的默认内如大致如下\n\n```ruby\n---\nlayout: page\ntitle: \"Super Awesome\"\ndate: 2011-07-03 5:59\ncomments: true\nsharing: true\nfooter: true\n---\n```\n\n####Content\n\n如果列表中不想显示全文内容的话，可以添加`<!-- more -->`标签，这将在文章下面生成一个“Continue →” 链接，链接到全文的地址\n\n\n\n\n###Generate & Preview\n\n```ruby\nrake generate   # Generates posts and pages into the public directory\nrake watch      # Watches source/ and sass/ for changes and regenerates\nrake preview    # Watches, and mounts a webserver at http://localhost:4000\n```\n\n本地使用http://localhost:4000就可以访问了\n\n\n\n\n\n\n\n","slug":"blog-with-github-4","published":1,"updated":"2020-01-01T02:23:42.000Z","photos":[],"link":"","_id":"clb0uhkbz000ho63klqnkeeks","content":"<p>Octopress提供很多的Rake任务去创建post和pages，他还会根据你的posts来生成Category，你可以在atom.xml或者blog/categories/\\&lt;category>/atom.xml中找到这些内容</p>\n<p>####Post</p>\n<p>这些Post页面必须存放在Source/_posts目录下面，并且命名方式和jekyll的命名方式一样，会转换成YYYY-MM-DD-Post-title.markdown，这个文件的名字就是你的blog的url slug，日期帮助你排序这些文章</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rake new_post[<span class=\"string\">\"Title\"</span>]</span><br></pre></td></tr></table></figure>\n<p>在使用了ZSH的话，你要这样创建</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rake new_post或者rake new_post[\\<span class=\"string\">\"Title\\\"]</span></span><br></pre></td></tr></table></figure>\n<p>例如</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rake new_post[<span class=\"string\">\"Zombie Ninjas Attack: A survivor's retrospective\"</span>]</span><br><span class=\"line\"> Creates source/_posts/<span class=\"number\">2011</span>-<span class=\"number\">07</span>-<span class=\"number\">03</span>-zombie-ninjas-attack-a-survivors-retrospective.markdown</span><br></pre></td></tr></table></figure>\n<p>or</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">~<span class=\"regexp\">/Code/rails</span><span class=\"regexp\">/octopress(branch:source) » rake new_post                        </span></span><br><span class=\"line\"><span class=\"regexp\">Enter a title for your post: blog-with-github-4</span></span><br><span class=\"line\"><span class=\"regexp\">mkdir -p source/</span>_posts</span><br><span class=\"line\">Creating new <span class=\"symbol\">post:</span> source/_posts/<span class=\"number\">2013</span>-<span class=\"number\">06</span>-<span class=\"number\">03</span>-blog-with-github-<span class=\"number\">4</span>.markdown</span><br></pre></td></tr></table></figure>\n<p>生成的内容大致如下</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\"><span class=\"symbol\">layout:</span> post</span><br><span class=\"line\"><span class=\"symbol\">title:</span> <span class=\"string\">\"Zombie Ninjas Attack: A survivor's retrospective\"</span></span><br><span class=\"line\"><span class=\"symbol\">date:</span> <span class=\"number\">2011</span>-<span class=\"number\">07</span>-<span class=\"number\">03</span> <span class=\"number\">5</span><span class=\"symbol\">:</span><span class=\"number\">59</span></span><br><span class=\"line\"><span class=\"symbol\">comments:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">external-<span class=\"symbol\">url:</span></span><br><span class=\"line\"><span class=\"symbol\">categories:</span></span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n<p>你可以关闭comments，或者为他添加categories的tag，并且你还可以添加<code>author: Your Name</code>与<code>published: false</code>来控制是否发布</p>\n<p>####Page</p>\n<p>生成Page的命令</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rake new_page[<span class=\"keyword\">super</span>-awesome]</span><br><span class=\"line\"><span class=\"comment\"># creates /source/super-awesome/index.markdown</span></span><br><span class=\"line\"></span><br><span class=\"line\">rake new_page[<span class=\"keyword\">super</span>-awesome/page.html]</span><br></pre></td></tr></table></figure>\n<p>如果使用了zsh的话，方法要参照post的创建方式</p>\n<p>生成的pages的默认内如大致如下</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\"><span class=\"symbol\">layout:</span> page</span><br><span class=\"line\"><span class=\"symbol\">title:</span> <span class=\"string\">\"Super Awesome\"</span></span><br><span class=\"line\"><span class=\"symbol\">date:</span> <span class=\"number\">2011</span>-<span class=\"number\">07</span>-<span class=\"number\">03</span> <span class=\"number\">5</span><span class=\"symbol\">:</span><span class=\"number\">59</span></span><br><span class=\"line\"><span class=\"symbol\">comments:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"symbol\">sharing:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"symbol\">footer:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n<p>####Content</p>\n<p>如果列表中不想显示全文内容的话，可以添加<code>&lt;!-- more --&gt;</code>标签，这将在文章下面生成一个“Continue →” 链接，链接到全文的地址</p>\n<p>###Generate &amp; Preview</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rake generate   <span class=\"comment\"># Generates posts and pages into the public directory</span></span><br><span class=\"line\">rake watch      <span class=\"comment\"># Watches source/ and sass/ for changes and regenerates</span></span><br><span class=\"line\">rake preview    <span class=\"comment\"># Watches, and mounts a webserver at http://localhost:4000</span></span><br></pre></td></tr></table></figure>\n<p>本地使用<a href=\"http://localhost:4000就可以访问了\" target=\"_blank\" rel=\"noopener\">http://localhost:4000就可以访问了</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Octopress提供很多的Rake任务去创建post和pages，他还会根据你的posts来生成Category，你可以在atom.xml或者blog/categories/\\&lt;category>/atom.xml中找到这些内容</p>\n<p>####Post</p>\n<p>这些Post页面必须存放在Source/_posts目录下面，并且命名方式和jekyll的命名方式一样，会转换成YYYY-MM-DD-Post-title.markdown，这个文件的名字就是你的blog的url slug，日期帮助你排序这些文章</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rake new_post[<span class=\"string\">\"Title\"</span>]</span><br></pre></td></tr></table></figure>\n<p>在使用了ZSH的话，你要这样创建</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rake new_post或者rake new_post[\\<span class=\"string\">\"Title\\\"]</span></span><br></pre></td></tr></table></figure>\n<p>例如</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rake new_post[<span class=\"string\">\"Zombie Ninjas Attack: A survivor's retrospective\"</span>]</span><br><span class=\"line\"> Creates source/_posts/<span class=\"number\">2011</span>-<span class=\"number\">07</span>-<span class=\"number\">03</span>-zombie-ninjas-attack-a-survivors-retrospective.markdown</span><br></pre></td></tr></table></figure>\n<p>or</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">~<span class=\"regexp\">/Code/rails</span><span class=\"regexp\">/octopress(branch:source) » rake new_post                        </span></span><br><span class=\"line\"><span class=\"regexp\">Enter a title for your post: blog-with-github-4</span></span><br><span class=\"line\"><span class=\"regexp\">mkdir -p source/</span>_posts</span><br><span class=\"line\">Creating new <span class=\"symbol\">post:</span> source/_posts/<span class=\"number\">2013</span>-<span class=\"number\">06</span>-<span class=\"number\">03</span>-blog-with-github-<span class=\"number\">4</span>.markdown</span><br></pre></td></tr></table></figure>\n<p>生成的内容大致如下</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\"><span class=\"symbol\">layout:</span> post</span><br><span class=\"line\"><span class=\"symbol\">title:</span> <span class=\"string\">\"Zombie Ninjas Attack: A survivor's retrospective\"</span></span><br><span class=\"line\"><span class=\"symbol\">date:</span> <span class=\"number\">2011</span>-<span class=\"number\">07</span>-<span class=\"number\">03</span> <span class=\"number\">5</span><span class=\"symbol\">:</span><span class=\"number\">59</span></span><br><span class=\"line\"><span class=\"symbol\">comments:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">external-<span class=\"symbol\">url:</span></span><br><span class=\"line\"><span class=\"symbol\">categories:</span></span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n<p>你可以关闭comments，或者为他添加categories的tag，并且你还可以添加<code>author: Your Name</code>与<code>published: false</code>来控制是否发布</p>\n<p>####Page</p>\n<p>生成Page的命令</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rake new_page[<span class=\"keyword\">super</span>-awesome]</span><br><span class=\"line\"><span class=\"comment\"># creates /source/super-awesome/index.markdown</span></span><br><span class=\"line\"></span><br><span class=\"line\">rake new_page[<span class=\"keyword\">super</span>-awesome/page.html]</span><br></pre></td></tr></table></figure>\n<p>如果使用了zsh的话，方法要参照post的创建方式</p>\n<p>生成的pages的默认内如大致如下</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\"><span class=\"symbol\">layout:</span> page</span><br><span class=\"line\"><span class=\"symbol\">title:</span> <span class=\"string\">\"Super Awesome\"</span></span><br><span class=\"line\"><span class=\"symbol\">date:</span> <span class=\"number\">2011</span>-<span class=\"number\">07</span>-<span class=\"number\">03</span> <span class=\"number\">5</span><span class=\"symbol\">:</span><span class=\"number\">59</span></span><br><span class=\"line\"><span class=\"symbol\">comments:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"symbol\">sharing:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"symbol\">footer:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n<p>####Content</p>\n<p>如果列表中不想显示全文内容的话，可以添加<code>&lt;!-- more --&gt;</code>标签，这将在文章下面生成一个“Continue →” 链接，链接到全文的地址</p>\n<p>###Generate &amp; Preview</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rake generate   <span class=\"comment\"># Generates posts and pages into the public directory</span></span><br><span class=\"line\">rake watch      <span class=\"comment\"># Watches source/ and sass/ for changes and regenerates</span></span><br><span class=\"line\">rake preview    <span class=\"comment\"># Watches, and mounts a webserver at http://localhost:4000</span></span><br></pre></td></tr></table></figure>\n<p>本地使用<a href=\"http://localhost:4000就可以访问了\" target=\"_blank\" rel=\"noopener\">http://localhost:4000就可以访问了</a></p>\n"},{"layout":"post","title":"git笔记","date":"2013-06-25T01:21:00.000Z","comments":1,"_content":"\n\n#### 一些全局配置\n```ruby\ngit config --global push.default matching\n\ngit config --global color.status auto\ngit config --global color.diff auto\ngit config --global color.branch auto\ngit config --global color.interactive auto\n```\n#### 添加所有新文件\n\n```ruby\ngit add .\n```\n\n#### 从版本中去除一个文件\n```ruby\ngit rm test.html.rb\n```\n\n#### 假设有很多新文件和删除了好多文件\n```ruby\ngit add -A\n```\n#### 获取所有远程版本\n```ruby\ngit fetch\n```\n\n#### 创建并切换到新分支\n```ruby\ngit checkout -b newbranch\n```\n\n#### 切换到分支\n```ruby\ngit checkout master\n```\n\n#### 迁移原有git项目到新得项目地址\n```ruby\ngit remote set-url origin git@git.github.com:welsonla/studio.git\n```\n\n#### 查看当前git分支\n```\ngit branch -r\n```\n#### 查看git log\n```ruby\ngit log\n```\n\n#### 查看当前tag\n```ruby\ngit tag\n```\n#### 创建一个新的tag\n```ruby\ngit tag v1.1\n```\n\n#### 降当前tag推送到服务器\n```ruby\ngit push origin --tags\n\n推送单个\ngit push origin v1.1\n```\n\n#### 将现有svn项目转换成git项目，并保留所有commit log\n```ruby\ngit svn clone [SVN-Path]\n```\n#### 回滚\n\n```ruby\n#http://stackoverflow.com/questions/1338728/delete-commits-from-a-branch-in-git\ngit reset --hard commitid\ngit push --force\n```\n\n\n\n#### ignore\n\n##### .gitignore 新文件使用正则匹配\n```\n*.file_extension\n.idea/*\n```\n\n##### remove exist files(现有文件需要软删除)\n```ruby\ngit rm -r --cached . //soft delete\ngit add .\ngit commit -m 'remove ignore files'\n```","source":"_posts/2013-06-25-git-note.markdown","raw":"---\nlayout: post\ntitle: \"git笔记\"\ndate: 2013-06-25 09:21\ncomments: true\ncategories: git \n---\n\n\n#### 一些全局配置\n```ruby\ngit config --global push.default matching\n\ngit config --global color.status auto\ngit config --global color.diff auto\ngit config --global color.branch auto\ngit config --global color.interactive auto\n```\n#### 添加所有新文件\n\n```ruby\ngit add .\n```\n\n#### 从版本中去除一个文件\n```ruby\ngit rm test.html.rb\n```\n\n#### 假设有很多新文件和删除了好多文件\n```ruby\ngit add -A\n```\n#### 获取所有远程版本\n```ruby\ngit fetch\n```\n\n#### 创建并切换到新分支\n```ruby\ngit checkout -b newbranch\n```\n\n#### 切换到分支\n```ruby\ngit checkout master\n```\n\n#### 迁移原有git项目到新得项目地址\n```ruby\ngit remote set-url origin git@git.github.com:welsonla/studio.git\n```\n\n#### 查看当前git分支\n```\ngit branch -r\n```\n#### 查看git log\n```ruby\ngit log\n```\n\n#### 查看当前tag\n```ruby\ngit tag\n```\n#### 创建一个新的tag\n```ruby\ngit tag v1.1\n```\n\n#### 降当前tag推送到服务器\n```ruby\ngit push origin --tags\n\n推送单个\ngit push origin v1.1\n```\n\n#### 将现有svn项目转换成git项目，并保留所有commit log\n```ruby\ngit svn clone [SVN-Path]\n```\n#### 回滚\n\n```ruby\n#http://stackoverflow.com/questions/1338728/delete-commits-from-a-branch-in-git\ngit reset --hard commitid\ngit push --force\n```\n\n\n\n#### ignore\n\n##### .gitignore 新文件使用正则匹配\n```\n*.file_extension\n.idea/*\n```\n\n##### remove exist files(现有文件需要软删除)\n```ruby\ngit rm -r --cached . //soft delete\ngit add .\ngit commit -m 'remove ignore files'\n```","slug":"git-note","published":1,"updated":"2020-01-01T02:23:42.000Z","photos":[],"link":"","_id":"clb0uhkc2000ko63k5smgnc0t","content":"<h4 id=\"一些全局配置\"><a href=\"#一些全局配置\" class=\"headerlink\" title=\"一些全局配置\"></a>一些全局配置</h4><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global push.default matching</span><br><span class=\"line\"></span><br><span class=\"line\">git config --global color.status auto</span><br><span class=\"line\">git config --global color.diff auto</span><br><span class=\"line\">git config --global color.branch auto</span><br><span class=\"line\">git config --global color.interactive auto</span><br></pre></td></tr></table></figure>\n<h4 id=\"添加所有新文件\"><a href=\"#添加所有新文件\" class=\"headerlink\" title=\"添加所有新文件\"></a>添加所有新文件</h4><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add .</span><br></pre></td></tr></table></figure>\n<h4 id=\"从版本中去除一个文件\"><a href=\"#从版本中去除一个文件\" class=\"headerlink\" title=\"从版本中去除一个文件\"></a>从版本中去除一个文件</h4><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git rm test.html.rb</span><br></pre></td></tr></table></figure>\n<h4 id=\"假设有很多新文件和删除了好多文件\"><a href=\"#假设有很多新文件和删除了好多文件\" class=\"headerlink\" title=\"假设有很多新文件和删除了好多文件\"></a>假设有很多新文件和删除了好多文件</h4><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add -A</span><br></pre></td></tr></table></figure>\n<h4 id=\"获取所有远程版本\"><a href=\"#获取所有远程版本\" class=\"headerlink\" title=\"获取所有远程版本\"></a>获取所有远程版本</h4><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git fetch</span><br></pre></td></tr></table></figure>\n<h4 id=\"创建并切换到新分支\"><a href=\"#创建并切换到新分支\" class=\"headerlink\" title=\"创建并切换到新分支\"></a>创建并切换到新分支</h4><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout -b newbranch</span><br></pre></td></tr></table></figure>\n<h4 id=\"切换到分支\"><a href=\"#切换到分支\" class=\"headerlink\" title=\"切换到分支\"></a>切换到分支</h4><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout master</span><br></pre></td></tr></table></figure>\n<h4 id=\"迁移原有git项目到新得项目地址\"><a href=\"#迁移原有git项目到新得项目地址\" class=\"headerlink\" title=\"迁移原有git项目到新得项目地址\"></a>迁移原有git项目到新得项目地址</h4><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote set-url origin git@git.github.<span class=\"symbol\">com:</span>welsonla/studio.git</span><br></pre></td></tr></table></figure>\n<h4 id=\"查看当前git分支\"><a href=\"#查看当前git分支\" class=\"headerlink\" title=\"查看当前git分支\"></a>查看当前git分支</h4><figure class=\"highlight armasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">git</span> <span class=\"keyword\">branch </span>-r</span><br></pre></td></tr></table></figure>\n<h4 id=\"查看git-log\"><a href=\"#查看git-log\" class=\"headerlink\" title=\"查看git log\"></a>查看git log</h4><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git log</span><br></pre></td></tr></table></figure>\n<h4 id=\"查看当前tag\"><a href=\"#查看当前tag\" class=\"headerlink\" title=\"查看当前tag\"></a>查看当前tag</h4><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git tag</span><br></pre></td></tr></table></figure>\n<h4 id=\"创建一个新的tag\"><a href=\"#创建一个新的tag\" class=\"headerlink\" title=\"创建一个新的tag\"></a>创建一个新的tag</h4><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git tag v1.<span class=\"number\">1</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"降当前tag推送到服务器\"><a href=\"#降当前tag推送到服务器\" class=\"headerlink\" title=\"降当前tag推送到服务器\"></a>降当前tag推送到服务器</h4><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push origin --tags</span><br><span class=\"line\"></span><br><span class=\"line\">推送单个</span><br><span class=\"line\">git push origin v1.<span class=\"number\">1</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"将现有svn项目转换成git项目，并保留所有commit-log\"><a href=\"#将现有svn项目转换成git项目，并保留所有commit-log\" class=\"headerlink\" title=\"将现有svn项目转换成git项目，并保留所有commit log\"></a>将现有svn项目转换成git项目，并保留所有commit log</h4><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git svn clone [SVN-Path]</span><br></pre></td></tr></table></figure>\n<h4 id=\"回滚\"><a href=\"#回滚\" class=\"headerlink\" title=\"回滚\"></a>回滚</h4><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#http://stackoverflow.com/questions/1338728/delete-commits-from-a-branch-in-git</span></span><br><span class=\"line\">git reset --hard commitid</span><br><span class=\"line\">git push --force</span><br></pre></td></tr></table></figure>\n<h4 id=\"ignore\"><a href=\"#ignore\" class=\"headerlink\" title=\"ignore\"></a>ignore</h4><h5 id=\"gitignore-新文件使用正则匹配\"><a href=\"#gitignore-新文件使用正则匹配\" class=\"headerlink\" title=\".gitignore 新文件使用正则匹配\"></a>.gitignore 新文件使用正则匹配</h5><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">*<span class=\"selector-class\">.file_extension</span></span><br><span class=\"line\"><span class=\"selector-class\">.idea</span><span class=\"comment\">/*</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"remove-exist-files-现有文件需要软删除\"><a href=\"#remove-exist-files-现有文件需要软删除\" class=\"headerlink\" title=\"remove exist files(现有文件需要软删除)\"></a>remove exist files(现有文件需要软删除)</h5><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git rm -r --cached . /<span class=\"regexp\">/soft delete</span></span><br><span class=\"line\"><span class=\"regexp\">git add .</span></span><br><span class=\"line\"><span class=\"regexp\">git commit -m 'remove ignore files'</span></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h4 id=\"一些全局配置\"><a href=\"#一些全局配置\" class=\"headerlink\" title=\"一些全局配置\"></a>一些全局配置</h4><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global push.default matching</span><br><span class=\"line\"></span><br><span class=\"line\">git config --global color.status auto</span><br><span class=\"line\">git config --global color.diff auto</span><br><span class=\"line\">git config --global color.branch auto</span><br><span class=\"line\">git config --global color.interactive auto</span><br></pre></td></tr></table></figure>\n<h4 id=\"添加所有新文件\"><a href=\"#添加所有新文件\" class=\"headerlink\" title=\"添加所有新文件\"></a>添加所有新文件</h4><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add .</span><br></pre></td></tr></table></figure>\n<h4 id=\"从版本中去除一个文件\"><a href=\"#从版本中去除一个文件\" class=\"headerlink\" title=\"从版本中去除一个文件\"></a>从版本中去除一个文件</h4><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git rm test.html.rb</span><br></pre></td></tr></table></figure>\n<h4 id=\"假设有很多新文件和删除了好多文件\"><a href=\"#假设有很多新文件和删除了好多文件\" class=\"headerlink\" title=\"假设有很多新文件和删除了好多文件\"></a>假设有很多新文件和删除了好多文件</h4><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add -A</span><br></pre></td></tr></table></figure>\n<h4 id=\"获取所有远程版本\"><a href=\"#获取所有远程版本\" class=\"headerlink\" title=\"获取所有远程版本\"></a>获取所有远程版本</h4><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git fetch</span><br></pre></td></tr></table></figure>\n<h4 id=\"创建并切换到新分支\"><a href=\"#创建并切换到新分支\" class=\"headerlink\" title=\"创建并切换到新分支\"></a>创建并切换到新分支</h4><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout -b newbranch</span><br></pre></td></tr></table></figure>\n<h4 id=\"切换到分支\"><a href=\"#切换到分支\" class=\"headerlink\" title=\"切换到分支\"></a>切换到分支</h4><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout master</span><br></pre></td></tr></table></figure>\n<h4 id=\"迁移原有git项目到新得项目地址\"><a href=\"#迁移原有git项目到新得项目地址\" class=\"headerlink\" title=\"迁移原有git项目到新得项目地址\"></a>迁移原有git项目到新得项目地址</h4><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote set-url origin git@git.github.<span class=\"symbol\">com:</span>welsonla/studio.git</span><br></pre></td></tr></table></figure>\n<h4 id=\"查看当前git分支\"><a href=\"#查看当前git分支\" class=\"headerlink\" title=\"查看当前git分支\"></a>查看当前git分支</h4><figure class=\"highlight armasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">git</span> <span class=\"keyword\">branch </span>-r</span><br></pre></td></tr></table></figure>\n<h4 id=\"查看git-log\"><a href=\"#查看git-log\" class=\"headerlink\" title=\"查看git log\"></a>查看git log</h4><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git log</span><br></pre></td></tr></table></figure>\n<h4 id=\"查看当前tag\"><a href=\"#查看当前tag\" class=\"headerlink\" title=\"查看当前tag\"></a>查看当前tag</h4><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git tag</span><br></pre></td></tr></table></figure>\n<h4 id=\"创建一个新的tag\"><a href=\"#创建一个新的tag\" class=\"headerlink\" title=\"创建一个新的tag\"></a>创建一个新的tag</h4><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git tag v1.<span class=\"number\">1</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"降当前tag推送到服务器\"><a href=\"#降当前tag推送到服务器\" class=\"headerlink\" title=\"降当前tag推送到服务器\"></a>降当前tag推送到服务器</h4><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push origin --tags</span><br><span class=\"line\"></span><br><span class=\"line\">推送单个</span><br><span class=\"line\">git push origin v1.<span class=\"number\">1</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"将现有svn项目转换成git项目，并保留所有commit-log\"><a href=\"#将现有svn项目转换成git项目，并保留所有commit-log\" class=\"headerlink\" title=\"将现有svn项目转换成git项目，并保留所有commit log\"></a>将现有svn项目转换成git项目，并保留所有commit log</h4><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git svn clone [SVN-Path]</span><br></pre></td></tr></table></figure>\n<h4 id=\"回滚\"><a href=\"#回滚\" class=\"headerlink\" title=\"回滚\"></a>回滚</h4><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#http://stackoverflow.com/questions/1338728/delete-commits-from-a-branch-in-git</span></span><br><span class=\"line\">git reset --hard commitid</span><br><span class=\"line\">git push --force</span><br></pre></td></tr></table></figure>\n<h4 id=\"ignore\"><a href=\"#ignore\" class=\"headerlink\" title=\"ignore\"></a>ignore</h4><h5 id=\"gitignore-新文件使用正则匹配\"><a href=\"#gitignore-新文件使用正则匹配\" class=\"headerlink\" title=\".gitignore 新文件使用正则匹配\"></a>.gitignore 新文件使用正则匹配</h5><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">*<span class=\"selector-class\">.file_extension</span></span><br><span class=\"line\"><span class=\"selector-class\">.idea</span><span class=\"comment\">/*</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"remove-exist-files-现有文件需要软删除\"><a href=\"#remove-exist-files-现有文件需要软删除\" class=\"headerlink\" title=\"remove exist files(现有文件需要软删除)\"></a>remove exist files(现有文件需要软删除)</h5><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git rm -r --cached . /<span class=\"regexp\">/soft delete</span></span><br><span class=\"line\"><span class=\"regexp\">git add .</span></span><br><span class=\"line\"><span class=\"regexp\">git commit -m 'remove ignore files'</span></span><br></pre></td></tr></table></figure>"},{"layout":"post","title":"vim-note","date":"2013-07-06T09:27:00.000Z","comments":1,"_content":"\n####移动到行首\n```ruby\n0\n```\n\n####移动到行尾\n```ruby\n$\n```\n\n####剪切多行\n```ruby\nv\n向下移动\nd\n```\n\n####粘贴\n```ruby\nP\n```\n\n####在nerdTree光标处新建一个文件\n```ruby\nm\n```\n\n####删除多行(数字+dd)\n```ruby\n5dd #删除5行\n```\n\n####多行注释\n```ruby\n1.ESC+v\n2.方向键向下或者向上选中多行\n3.Control+v\n4.Shift+i\n5.#\n6.Esc,Esc\n```\n\n","source":"_posts/2013-07-06-vim-note.markdown","raw":"---\nlayout: post\ntitle: \"vim-note\"\ndate: 2013-07-06 17:27\ncomments: true\ncategories: 工具控 \n---\n\n####移动到行首\n```ruby\n0\n```\n\n####移动到行尾\n```ruby\n$\n```\n\n####剪切多行\n```ruby\nv\n向下移动\nd\n```\n\n####粘贴\n```ruby\nP\n```\n\n####在nerdTree光标处新建一个文件\n```ruby\nm\n```\n\n####删除多行(数字+dd)\n```ruby\n5dd #删除5行\n```\n\n####多行注释\n```ruby\n1.ESC+v\n2.方向键向下或者向上选中多行\n3.Control+v\n4.Shift+i\n5.#\n6.Esc,Esc\n```\n\n","slug":"vim-note","published":1,"updated":"2020-01-01T02:23:42.000Z","photos":[],"link":"","_id":"clb0uhkc3000lo63k09667lnf","content":"<p>####移动到行首<br><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">0</span></span><br></pre></td></tr></table></figure></p>\n<p>####移动到行尾<br><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$</span><br></pre></td></tr></table></figure></p>\n<p>####剪切多行<br><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">v</span><br><span class=\"line\">向下移动</span><br><span class=\"line\">d</span><br></pre></td></tr></table></figure></p>\n<p>####粘贴<br><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">P</span><br></pre></td></tr></table></figure></p>\n<p>####在nerdTree光标处新建一个文件<br><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">m</span><br></pre></td></tr></table></figure></p>\n<p>####删除多行(数字+dd)<br><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">5</span>dd <span class=\"comment\">#删除5行</span></span><br></pre></td></tr></table></figure></p>\n<p>####多行注释<br><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1</span>.ESC+v</span><br><span class=\"line\"><span class=\"number\">2</span>.方向键向下或者向上选中多行</span><br><span class=\"line\"><span class=\"number\">3</span>.Control+v</span><br><span class=\"line\"><span class=\"number\">4</span>.Shift+i</span><br><span class=\"line\"><span class=\"number\">5</span>.<span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"number\">6</span>.Esc,Esc</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>####移动到行首<br><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">0</span></span><br></pre></td></tr></table></figure></p>\n<p>####移动到行尾<br><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$</span><br></pre></td></tr></table></figure></p>\n<p>####剪切多行<br><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">v</span><br><span class=\"line\">向下移动</span><br><span class=\"line\">d</span><br></pre></td></tr></table></figure></p>\n<p>####粘贴<br><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">P</span><br></pre></td></tr></table></figure></p>\n<p>####在nerdTree光标处新建一个文件<br><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">m</span><br></pre></td></tr></table></figure></p>\n<p>####删除多行(数字+dd)<br><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">5</span>dd <span class=\"comment\">#删除5行</span></span><br></pre></td></tr></table></figure></p>\n<p>####多行注释<br><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1</span>.ESC+v</span><br><span class=\"line\"><span class=\"number\">2</span>.方向键向下或者向上选中多行</span><br><span class=\"line\"><span class=\"number\">3</span>.Control+v</span><br><span class=\"line\"><span class=\"number\">4</span>.Shift+i</span><br><span class=\"line\"><span class=\"number\">5</span>.<span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"number\">6</span>.Esc,Esc</span><br></pre></td></tr></table></figure></p>\n"},{"layout":"post","title":"generate new host RSA key","date":"2013-08-06T15:34:00.000Z","comments":1,"_content":"\n最近oschina的git服务器进行了迁移，导致了原有的git项目push不上去，总是提示\n\n```ruby\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n@       WARNING: POSSIBLE DNS SPOOFING DETECTED!          @\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\nThe RSA host key for git.oschina.net has changed,\nand the key for the corresponding IP address 112.124.6.106\nis unknown. This could either mean that\nDNS SPOOFING is happening or the IP address for the host\nand its host key have changed at the same time.\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n@    WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!     @\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\nIT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY!\nSomeone could be eavesdropping on you right now (man-in-the-middle attack)!\nIt is also possible that a host key has just been changed.\n```\n\n~~第一个问题非常简单，就是修改/etc/hosts，添加一个IP与域名的对应关系即可~~\n\n第二个是要求你更新know_host中的RSA key，执行如下命令即可\n\n```ruby\nssh-keygen -R git.oschina.net\n```\n\n```ruby\ncat /.ssh/known_hosts\n```\n查看known_host中的数据可以看到key已经更新了","source":"_posts/2013-08-06-generate-new-host-rsa-key.markdown","raw":"---\nlayout: post\ntitle: \"generate new host RSA key\"\ndate: 2013-08-06 23:34\ncomments: true\ncategories: git\n---\n\n最近oschina的git服务器进行了迁移，导致了原有的git项目push不上去，总是提示\n\n```ruby\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n@       WARNING: POSSIBLE DNS SPOOFING DETECTED!          @\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\nThe RSA host key for git.oschina.net has changed,\nand the key for the corresponding IP address 112.124.6.106\nis unknown. This could either mean that\nDNS SPOOFING is happening or the IP address for the host\nand its host key have changed at the same time.\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n@    WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!     @\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\nIT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY!\nSomeone could be eavesdropping on you right now (man-in-the-middle attack)!\nIt is also possible that a host key has just been changed.\n```\n\n~~第一个问题非常简单，就是修改/etc/hosts，添加一个IP与域名的对应关系即可~~\n\n第二个是要求你更新know_host中的RSA key，执行如下命令即可\n\n```ruby\nssh-keygen -R git.oschina.net\n```\n\n```ruby\ncat /.ssh/known_hosts\n```\n查看known_host中的数据可以看到key已经更新了","slug":"generate-new-host-rsa-key","published":1,"updated":"2020-01-01T02:23:42.000Z","photos":[],"link":"","_id":"clb0uhkc5000oo63k65ll2v3k","content":"<p>最近oschina的git服务器进行了迁移，导致了原有的git项目push不上去，总是提示</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@</span><br><span class=\"line\">@       <span class=\"symbol\">WARNING:</span> POSSIBLE DNS SPOOFING DETECTED!          @</span><br><span class=\"line\">@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@</span><br><span class=\"line\">The RSA host key <span class=\"keyword\">for</span> git.oschina.net has changed,</span><br><span class=\"line\"><span class=\"keyword\">and</span> the key <span class=\"keyword\">for</span> the corresponding IP address <span class=\"number\">112.124</span>.<span class=\"number\">6.106</span></span><br><span class=\"line\">is unknown. This could either mean that</span><br><span class=\"line\">DNS SPOOFING is happening <span class=\"keyword\">or</span> the IP address <span class=\"keyword\">for</span> the host</span><br><span class=\"line\"><span class=\"keyword\">and</span> its host key have changed at the same time.</span><br><span class=\"line\">@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@</span><br><span class=\"line\">@    <span class=\"symbol\">WARNING:</span> REMOTE HOST IDENTIFICATION HAS CHANGED!     @</span><br><span class=\"line\">@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@</span><br><span class=\"line\">IT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY!</span><br><span class=\"line\">Someone could be eavesdropping on you right now (man-<span class=\"keyword\">in</span>-the-middle attack)!</span><br><span class=\"line\">It is also possible that a host key has just been changed.</span><br></pre></td></tr></table></figure>\n<p><del>第一个问题非常简单，就是修改/etc/hosts，添加一个IP与域名的对应关系即可</del></p>\n<p>第二个是要求你更新know_host中的RSA key，执行如下命令即可</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -R git.oschina.net</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat /.ssh/known_hosts</span><br></pre></td></tr></table></figure>\n<p>查看known_host中的数据可以看到key已经更新了</p>\n","site":{"data":{}},"excerpt":"","more":"<p>最近oschina的git服务器进行了迁移，导致了原有的git项目push不上去，总是提示</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@</span><br><span class=\"line\">@       <span class=\"symbol\">WARNING:</span> POSSIBLE DNS SPOOFING DETECTED!          @</span><br><span class=\"line\">@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@</span><br><span class=\"line\">The RSA host key <span class=\"keyword\">for</span> git.oschina.net has changed,</span><br><span class=\"line\"><span class=\"keyword\">and</span> the key <span class=\"keyword\">for</span> the corresponding IP address <span class=\"number\">112.124</span>.<span class=\"number\">6.106</span></span><br><span class=\"line\">is unknown. This could either mean that</span><br><span class=\"line\">DNS SPOOFING is happening <span class=\"keyword\">or</span> the IP address <span class=\"keyword\">for</span> the host</span><br><span class=\"line\"><span class=\"keyword\">and</span> its host key have changed at the same time.</span><br><span class=\"line\">@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@</span><br><span class=\"line\">@    <span class=\"symbol\">WARNING:</span> REMOTE HOST IDENTIFICATION HAS CHANGED!     @</span><br><span class=\"line\">@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@</span><br><span class=\"line\">IT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY!</span><br><span class=\"line\">Someone could be eavesdropping on you right now (man-<span class=\"keyword\">in</span>-the-middle attack)!</span><br><span class=\"line\">It is also possible that a host key has just been changed.</span><br></pre></td></tr></table></figure>\n<p><del>第一个问题非常简单，就是修改/etc/hosts，添加一个IP与域名的对应关系即可</del></p>\n<p>第二个是要求你更新know_host中的RSA key，执行如下命令即可</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -R git.oschina.net</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat /.ssh/known_hosts</span><br></pre></td></tr></table></figure>\n<p>查看known_host中的数据可以看到key已经更新了</p>\n"},{"layout":"post","title":"encrypt sqlite with sqlcipher","date":"2013-08-13T10:05:00.000Z","comments":1,"_content":"##Get the sqlcipher SourceCode\n\n```ruby\n#使用2.1的版本比较稳定些\nhttps://github.com/welsonla/sqlcipher/archive/v2.1.1.tar.gz\n\n```\n<!--more-->\n\n##Complite the source code\n动态链接的编译方法（Compiling with dynamic linking）[推荐]:\n\n```ruby\n./configure --enable-tempstore=yes CFLAGS=\"-DSQLITE_HAS_CODEC\" LDFLAGS=\"-lcrypto\"\n make\n ln -s /Users/wanyc/sqlcipher/sqlite3 /usr/bin/sqlcipher \n```\n\n~~静态库的编译方法: (replace /path/to with the path to libcrypto.a)~~\n```ruby\n  #./configure --enable-tempstore=yes CFLAGS=\"-DSQLITE_HAS_CODEC\" LDFLAGS=\"/path/to/libcrypto.a\"\n  #make\n```\n  \n\n##How to encrypt a sqlite(In Shell)\n\n#加密数据库几种方式\n\n####1.shell方式加密一个sqlite\n\n```ruby\nsqlcipher test.db\n> PRAGMA key='test'; //必须在打开数据库第一步来执行\n```\n\n\n####2.（In shell）\n```ruby\nsqlciper test.db\nPRAGMA KEY='helloworld';#第一步必须执行\nATTACH DATABASE 'encrypted.db' as encrypted KEY 'SomePassword'; //encrypted.db是要导出的新的数据库\nSELECT sqlcipher_export('encrypted');\nDETACH DATABASE encrypted;\n```\n\n#####3..Object-c代码实现对一个非加密库导入到加密库的方法(已经验证)(Xcode)\n```ruby\nNSString *documentPath = [NSSearchPathForDirectoriesInDomains(NSDocumentDirectory,NSUserDomainMask, YES) objectAtIndex:0];\nNSString *attachPath = [documentPath stringByAppendingPathComponent:@\"new.db\"];\n\nif (sqlite3_open([path_u UTF8String], &convert_DB) == SQLITE_OK) {\n\t\tNSString *sql = [NSString stringWithFormat:@\"ATTACH DATABASE '%@' AS encrypted KEY '1234';\",attachPath];\n\t\n\t\t//执行Attach操作\n\t  sqlite3_exec(convert_DB, [sql UTF8String] , NULL, NULL, NULL);\n  \n\t  // 导出数据库\n\t  sqlite3_exec(convert_DB, \"SELECT sqlcipher_export('encrypted');\", NULL, NULL, NULL);\n  \n\t  // 执行分离\n\t  sqlite3_exec(convert_DB, \"DETACH DATABASE encrypted;\", NULL, NULL, NULL);\n  \n\t  NSLog (@\"End database copying at %@\",[NSDate date]);\n\t  sqlite3_close(convert_DB);\n}\nelse {\n    sqlite3_close(convert_DB);\n    NSAssert1(NO, @\"Failed to open database with message '%s'.\", sqlite3_errmsg(convert_DB));\n}\n```\n\n#为加密数据库解密\n####1.先导出现有库的数据(In shell)\n```ruby\nsqlcipher plaintext.db\n.output dsa.sql\n.dump\n```\n####将新的数据库导出，并加密，之后导入非加密的库里面的数据\n```ruby\nsqlcipher another.db\nPRAGMA key='aaa';\n.read dsa.sql\n```\n\n####2. 为加密后的sqlite执行解密(其实步骤与加密一样，只要把key设置为空就实现了不加密)\n```ruby\nATTACH DATABASE 'encrypted.db' as encrypted KEY ''; //encrypted.db是要导出的新的数据库\nSELECT sqlcipher_export('encrypted');\nDETACH DATABASE encrypted;\n```\n\n####3.（In shell）\n```ruby\nsqlciper test.db\nPRAGMA KEY='helloworld';#第一步必须执行\nATTACH DATABASE 'encrypted.db' as encrypted KEY '';\nSELECT sqlcipher_export('encrypted');\nDETACH DATABASE encrypted;\n```\n\n\n##参考\n* sqlcipher配置 [http://sqlcipher.net/ios-tutorial/](http://sqlcipher.net/ios-tutorial/)  \n* sqlcipher API [http://sqlcipher.net/sqlcipher-api/](http://sqlcipher.net/sqlcipher-api/)\n* sqlcipher 使用 [http://jordy.easymorse.com/?p=970](http://jordy.easymorse.com/?p=970)\n* Mac SQLCipher导出工具 [https://github.com/welsonla/SQLCipherExport](https://github.com/welsonla/SQLCipherExport)","source":"_posts/2013-08-13-encrypt-sqlite-with-sqlcipher.markdown","raw":"---\nlayout: post\ntitle: \"encrypt sqlite with sqlcipher\"\ndate: 2013-08-13 18:05\ncomments: true\ncategories: iOS\n---\n##Get the sqlcipher SourceCode\n\n```ruby\n#使用2.1的版本比较稳定些\nhttps://github.com/welsonla/sqlcipher/archive/v2.1.1.tar.gz\n\n```\n<!--more-->\n\n##Complite the source code\n动态链接的编译方法（Compiling with dynamic linking）[推荐]:\n\n```ruby\n./configure --enable-tempstore=yes CFLAGS=\"-DSQLITE_HAS_CODEC\" LDFLAGS=\"-lcrypto\"\n make\n ln -s /Users/wanyc/sqlcipher/sqlite3 /usr/bin/sqlcipher \n```\n\n~~静态库的编译方法: (replace /path/to with the path to libcrypto.a)~~\n```ruby\n  #./configure --enable-tempstore=yes CFLAGS=\"-DSQLITE_HAS_CODEC\" LDFLAGS=\"/path/to/libcrypto.a\"\n  #make\n```\n  \n\n##How to encrypt a sqlite(In Shell)\n\n#加密数据库几种方式\n\n####1.shell方式加密一个sqlite\n\n```ruby\nsqlcipher test.db\n> PRAGMA key='test'; //必须在打开数据库第一步来执行\n```\n\n\n####2.（In shell）\n```ruby\nsqlciper test.db\nPRAGMA KEY='helloworld';#第一步必须执行\nATTACH DATABASE 'encrypted.db' as encrypted KEY 'SomePassword'; //encrypted.db是要导出的新的数据库\nSELECT sqlcipher_export('encrypted');\nDETACH DATABASE encrypted;\n```\n\n#####3..Object-c代码实现对一个非加密库导入到加密库的方法(已经验证)(Xcode)\n```ruby\nNSString *documentPath = [NSSearchPathForDirectoriesInDomains(NSDocumentDirectory,NSUserDomainMask, YES) objectAtIndex:0];\nNSString *attachPath = [documentPath stringByAppendingPathComponent:@\"new.db\"];\n\nif (sqlite3_open([path_u UTF8String], &convert_DB) == SQLITE_OK) {\n\t\tNSString *sql = [NSString stringWithFormat:@\"ATTACH DATABASE '%@' AS encrypted KEY '1234';\",attachPath];\n\t\n\t\t//执行Attach操作\n\t  sqlite3_exec(convert_DB, [sql UTF8String] , NULL, NULL, NULL);\n  \n\t  // 导出数据库\n\t  sqlite3_exec(convert_DB, \"SELECT sqlcipher_export('encrypted');\", NULL, NULL, NULL);\n  \n\t  // 执行分离\n\t  sqlite3_exec(convert_DB, \"DETACH DATABASE encrypted;\", NULL, NULL, NULL);\n  \n\t  NSLog (@\"End database copying at %@\",[NSDate date]);\n\t  sqlite3_close(convert_DB);\n}\nelse {\n    sqlite3_close(convert_DB);\n    NSAssert1(NO, @\"Failed to open database with message '%s'.\", sqlite3_errmsg(convert_DB));\n}\n```\n\n#为加密数据库解密\n####1.先导出现有库的数据(In shell)\n```ruby\nsqlcipher plaintext.db\n.output dsa.sql\n.dump\n```\n####将新的数据库导出，并加密，之后导入非加密的库里面的数据\n```ruby\nsqlcipher another.db\nPRAGMA key='aaa';\n.read dsa.sql\n```\n\n####2. 为加密后的sqlite执行解密(其实步骤与加密一样，只要把key设置为空就实现了不加密)\n```ruby\nATTACH DATABASE 'encrypted.db' as encrypted KEY ''; //encrypted.db是要导出的新的数据库\nSELECT sqlcipher_export('encrypted');\nDETACH DATABASE encrypted;\n```\n\n####3.（In shell）\n```ruby\nsqlciper test.db\nPRAGMA KEY='helloworld';#第一步必须执行\nATTACH DATABASE 'encrypted.db' as encrypted KEY '';\nSELECT sqlcipher_export('encrypted');\nDETACH DATABASE encrypted;\n```\n\n\n##参考\n* sqlcipher配置 [http://sqlcipher.net/ios-tutorial/](http://sqlcipher.net/ios-tutorial/)  \n* sqlcipher API [http://sqlcipher.net/sqlcipher-api/](http://sqlcipher.net/sqlcipher-api/)\n* sqlcipher 使用 [http://jordy.easymorse.com/?p=970](http://jordy.easymorse.com/?p=970)\n* Mac SQLCipher导出工具 [https://github.com/welsonla/SQLCipherExport](https://github.com/welsonla/SQLCipherExport)","slug":"encrypt-sqlite-with-sqlcipher","published":1,"updated":"2020-01-01T02:23:42.000Z","photos":[],"link":"","_id":"clb0uhkc7000qo63kgkhyg9aj","content":"<p>##Get the sqlcipher SourceCode</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#使用2.1的版本比较稳定些</span></span><br><span class=\"line\"><span class=\"symbol\">https:</span>/<span class=\"regexp\">/github.com/welsonla</span><span class=\"regexp\">/sqlcipher/archive</span><span class=\"regexp\">/v2.1.1.tar.gz</span></span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<p>##Complite the source code<br>动态链接的编译方法（Compiling with dynamic linking）[推荐]:</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./configure --enable-tempstore=yes CFLAGS=<span class=\"string\">\"-DSQLITE_HAS_CODEC\"</span> LDFLAGS=<span class=\"string\">\"-lcrypto\"</span></span><br><span class=\"line\"> make</span><br><span class=\"line\"> ln -s /Users/wanyc/sqlcipher/sqlite3 /usr/bin/sqlcipher</span><br></pre></td></tr></table></figure>\n<p><del>静态库的编译方法: (replace /path/to with the path to libcrypto.a)</del><br><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#./configure --enable-tempstore=yes CFLAGS=\"-DSQLITE_HAS_CODEC\" LDFLAGS=\"/path/to/libcrypto.a\"</span></span><br><span class=\"line\"><span class=\"comment\">#make</span></span><br></pre></td></tr></table></figure></p>\n<p>##How to encrypt a sqlite(In Shell)</p>\n<p>#加密数据库几种方式</p>\n<p>####1.shell方式加密一个sqlite</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sqlcipher test.db</span><br><span class=\"line\">&gt; PRAGMA key=<span class=\"string\">'test'</span>; <span class=\"regexp\">//</span>必须在打开数据库第一步来执行</span><br></pre></td></tr></table></figure>\n<p>####2.（In shell）<br><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sqlciper test.db</span><br><span class=\"line\">PRAGMA KEY=<span class=\"string\">'helloworld'</span>;<span class=\"comment\">#第一步必须执行</span></span><br><span class=\"line\">ATTACH DATABASE <span class=\"string\">'encrypted.db'</span> as encrypted KEY <span class=\"string\">'SomePassword'</span>; <span class=\"regexp\">//encrypted</span>.db是要导出的新的数据库</span><br><span class=\"line\">SELECT sqlcipher_export(<span class=\"string\">'encrypted'</span>);</span><br><span class=\"line\">DETACH DATABASE encrypted;</span><br></pre></td></tr></table></figure></p>\n<p>#####3..Object-c代码实现对一个非加密库导入到加密库的方法(已经验证)(Xcode)<br><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">NSString *documentPath = [NSSearchPathForDirectoriesInDomains(NSDocumentDirectory,NSUserDomainMask, YES) <span class=\"symbol\">objectAtIndex:</span><span class=\"number\">0</span>];</span><br><span class=\"line\">NSString *attachPath = [documentPath <span class=\"symbol\">stringByAppendingPathComponent:</span>@<span class=\"string\">\"new.db\"</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (sqlite3_open([path_u UTF8String], &amp;convert_DB) == SQLITE_OK) &#123;</span><br><span class=\"line\">\t\tNSString *sql = [NSString <span class=\"symbol\">stringWithFormat:</span>@<span class=\"string\">\"ATTACH DATABASE '%@' AS encrypted KEY '1234';\"</span>,attachPath];</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t\t/<span class=\"regexp\">/执行Attach操作</span></span><br><span class=\"line\"><span class=\"regexp\">\t  sqlite3_exec(convert_DB, [sql UTF8String] , NULL, NULL, NULL);</span></span><br><span class=\"line\"><span class=\"regexp\">  </span></span><br><span class=\"line\"><span class=\"regexp\">\t  /</span><span class=\"regexp\">/ 导出数据库</span></span><br><span class=\"line\"><span class=\"regexp\">\t  sqlite3_exec(convert_DB, \"SELECT sqlcipher_export('encrypted');\", NULL, NULL, NULL);</span></span><br><span class=\"line\"><span class=\"regexp\">  </span></span><br><span class=\"line\"><span class=\"regexp\">\t  /</span><span class=\"regexp\">/ 执行分离</span></span><br><span class=\"line\"><span class=\"regexp\">\t  sqlite3_exec(convert_DB, \"DETACH DATABASE encrypted;\", NULL, NULL, NULL);</span></span><br><span class=\"line\"><span class=\"regexp\">  </span></span><br><span class=\"line\"><span class=\"regexp\">\t  NSLog (@\"End database copying at %@\",[NSDate date]);</span></span><br><span class=\"line\"><span class=\"regexp\">\t  sqlite3_close(convert_DB);</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">else &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">    sqlite3_close(convert_DB);</span></span><br><span class=\"line\"><span class=\"regexp\">    NSAssert1(NO, @\"Failed to open database with message '%s'.\", sqlite3_errmsg(convert_DB));</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br></pre></td></tr></table></figure></p>\n<p>#为加密数据库解密</p>\n<p>####1.先导出现有库的数据(In shell)<br><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sqlcipher plaintext.db</span><br><span class=\"line\">.output dsa.sql</span><br><span class=\"line\">.dump</span><br></pre></td></tr></table></figure></p>\n<p>####将新的数据库导出，并加密，之后导入非加密的库里面的数据<br><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sqlcipher another.db</span><br><span class=\"line\">PRAGMA key=<span class=\"string\">'aaa'</span>;</span><br><span class=\"line\">.read dsa.sql</span><br></pre></td></tr></table></figure></p>\n<p>####2. 为加密后的sqlite执行解密(其实步骤与加密一样，只要把key设置为空就实现了不加密)<br><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ATTACH DATABASE <span class=\"string\">'encrypted.db'</span> as encrypted KEY <span class=\"string\">''</span>; <span class=\"regexp\">//encrypted</span>.db是要导出的新的数据库</span><br><span class=\"line\">SELECT sqlcipher_export(<span class=\"string\">'encrypted'</span>);</span><br><span class=\"line\">DETACH DATABASE encrypted;</span><br></pre></td></tr></table></figure></p>\n<p>####3.（In shell）<br><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sqlciper test.db</span><br><span class=\"line\">PRAGMA KEY=<span class=\"string\">'helloworld'</span>;<span class=\"comment\">#第一步必须执行</span></span><br><span class=\"line\">ATTACH DATABASE <span class=\"string\">'encrypted.db'</span> as encrypted KEY <span class=\"string\">''</span>;</span><br><span class=\"line\">SELECT sqlcipher_export(<span class=\"string\">'encrypted'</span>);</span><br><span class=\"line\">DETACH DATABASE encrypted;</span><br></pre></td></tr></table></figure></p>\n<p>##参考</p>\n<ul>\n<li>sqlcipher配置 <a href=\"http://sqlcipher.net/ios-tutorial/\" target=\"_blank\" rel=\"noopener\">http://sqlcipher.net/ios-tutorial/</a>  </li>\n<li>sqlcipher API <a href=\"http://sqlcipher.net/sqlcipher-api/\" target=\"_blank\" rel=\"noopener\">http://sqlcipher.net/sqlcipher-api/</a></li>\n<li>sqlcipher 使用 <a href=\"http://jordy.easymorse.com/?p=970\" target=\"_blank\" rel=\"noopener\">http://jordy.easymorse.com/?p=970</a></li>\n<li>Mac SQLCipher导出工具 <a href=\"https://github.com/welsonla/SQLCipherExport\" target=\"_blank\" rel=\"noopener\">https://github.com/welsonla/SQLCipherExport</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"<p>##Get the sqlcipher SourceCode</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#使用2.1的版本比较稳定些</span></span><br><span class=\"line\"><span class=\"symbol\">https:</span>/<span class=\"regexp\">/github.com/welsonla</span><span class=\"regexp\">/sqlcipher/archive</span><span class=\"regexp\">/v2.1.1.tar.gz</span></span><br></pre></td></tr></table></figure>","more":"<p>##Complite the source code<br>动态链接的编译方法（Compiling with dynamic linking）[推荐]:</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./configure --enable-tempstore=yes CFLAGS=<span class=\"string\">\"-DSQLITE_HAS_CODEC\"</span> LDFLAGS=<span class=\"string\">\"-lcrypto\"</span></span><br><span class=\"line\"> make</span><br><span class=\"line\"> ln -s /Users/wanyc/sqlcipher/sqlite3 /usr/bin/sqlcipher</span><br></pre></td></tr></table></figure>\n<p><del>静态库的编译方法: (replace /path/to with the path to libcrypto.a)</del><br><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#./configure --enable-tempstore=yes CFLAGS=\"-DSQLITE_HAS_CODEC\" LDFLAGS=\"/path/to/libcrypto.a\"</span></span><br><span class=\"line\"><span class=\"comment\">#make</span></span><br></pre></td></tr></table></figure></p>\n<p>##How to encrypt a sqlite(In Shell)</p>\n<p>#加密数据库几种方式</p>\n<p>####1.shell方式加密一个sqlite</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sqlcipher test.db</span><br><span class=\"line\">&gt; PRAGMA key=<span class=\"string\">'test'</span>; <span class=\"regexp\">//</span>必须在打开数据库第一步来执行</span><br></pre></td></tr></table></figure>\n<p>####2.（In shell）<br><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sqlciper test.db</span><br><span class=\"line\">PRAGMA KEY=<span class=\"string\">'helloworld'</span>;<span class=\"comment\">#第一步必须执行</span></span><br><span class=\"line\">ATTACH DATABASE <span class=\"string\">'encrypted.db'</span> as encrypted KEY <span class=\"string\">'SomePassword'</span>; <span class=\"regexp\">//encrypted</span>.db是要导出的新的数据库</span><br><span class=\"line\">SELECT sqlcipher_export(<span class=\"string\">'encrypted'</span>);</span><br><span class=\"line\">DETACH DATABASE encrypted;</span><br></pre></td></tr></table></figure></p>\n<p>#####3..Object-c代码实现对一个非加密库导入到加密库的方法(已经验证)(Xcode)<br><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">NSString *documentPath = [NSSearchPathForDirectoriesInDomains(NSDocumentDirectory,NSUserDomainMask, YES) <span class=\"symbol\">objectAtIndex:</span><span class=\"number\">0</span>];</span><br><span class=\"line\">NSString *attachPath = [documentPath <span class=\"symbol\">stringByAppendingPathComponent:</span>@<span class=\"string\">\"new.db\"</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (sqlite3_open([path_u UTF8String], &amp;convert_DB) == SQLITE_OK) &#123;</span><br><span class=\"line\">\t\tNSString *sql = [NSString <span class=\"symbol\">stringWithFormat:</span>@<span class=\"string\">\"ATTACH DATABASE '%@' AS encrypted KEY '1234';\"</span>,attachPath];</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t\t/<span class=\"regexp\">/执行Attach操作</span></span><br><span class=\"line\"><span class=\"regexp\">\t  sqlite3_exec(convert_DB, [sql UTF8String] , NULL, NULL, NULL);</span></span><br><span class=\"line\"><span class=\"regexp\">  </span></span><br><span class=\"line\"><span class=\"regexp\">\t  /</span><span class=\"regexp\">/ 导出数据库</span></span><br><span class=\"line\"><span class=\"regexp\">\t  sqlite3_exec(convert_DB, \"SELECT sqlcipher_export('encrypted');\", NULL, NULL, NULL);</span></span><br><span class=\"line\"><span class=\"regexp\">  </span></span><br><span class=\"line\"><span class=\"regexp\">\t  /</span><span class=\"regexp\">/ 执行分离</span></span><br><span class=\"line\"><span class=\"regexp\">\t  sqlite3_exec(convert_DB, \"DETACH DATABASE encrypted;\", NULL, NULL, NULL);</span></span><br><span class=\"line\"><span class=\"regexp\">  </span></span><br><span class=\"line\"><span class=\"regexp\">\t  NSLog (@\"End database copying at %@\",[NSDate date]);</span></span><br><span class=\"line\"><span class=\"regexp\">\t  sqlite3_close(convert_DB);</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">else &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">    sqlite3_close(convert_DB);</span></span><br><span class=\"line\"><span class=\"regexp\">    NSAssert1(NO, @\"Failed to open database with message '%s'.\", sqlite3_errmsg(convert_DB));</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br></pre></td></tr></table></figure></p>\n<p>#为加密数据库解密</p>\n<p>####1.先导出现有库的数据(In shell)<br><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sqlcipher plaintext.db</span><br><span class=\"line\">.output dsa.sql</span><br><span class=\"line\">.dump</span><br></pre></td></tr></table></figure></p>\n<p>####将新的数据库导出，并加密，之后导入非加密的库里面的数据<br><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sqlcipher another.db</span><br><span class=\"line\">PRAGMA key=<span class=\"string\">'aaa'</span>;</span><br><span class=\"line\">.read dsa.sql</span><br></pre></td></tr></table></figure></p>\n<p>####2. 为加密后的sqlite执行解密(其实步骤与加密一样，只要把key设置为空就实现了不加密)<br><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ATTACH DATABASE <span class=\"string\">'encrypted.db'</span> as encrypted KEY <span class=\"string\">''</span>; <span class=\"regexp\">//encrypted</span>.db是要导出的新的数据库</span><br><span class=\"line\">SELECT sqlcipher_export(<span class=\"string\">'encrypted'</span>);</span><br><span class=\"line\">DETACH DATABASE encrypted;</span><br></pre></td></tr></table></figure></p>\n<p>####3.（In shell）<br><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sqlciper test.db</span><br><span class=\"line\">PRAGMA KEY=<span class=\"string\">'helloworld'</span>;<span class=\"comment\">#第一步必须执行</span></span><br><span class=\"line\">ATTACH DATABASE <span class=\"string\">'encrypted.db'</span> as encrypted KEY <span class=\"string\">''</span>;</span><br><span class=\"line\">SELECT sqlcipher_export(<span class=\"string\">'encrypted'</span>);</span><br><span class=\"line\">DETACH DATABASE encrypted;</span><br></pre></td></tr></table></figure></p>\n<p>##参考</p>\n<ul>\n<li>sqlcipher配置 <a href=\"http://sqlcipher.net/ios-tutorial/\" target=\"_blank\" rel=\"noopener\">http://sqlcipher.net/ios-tutorial/</a>  </li>\n<li>sqlcipher API <a href=\"http://sqlcipher.net/sqlcipher-api/\" target=\"_blank\" rel=\"noopener\">http://sqlcipher.net/sqlcipher-api/</a></li>\n<li>sqlcipher 使用 <a href=\"http://jordy.easymorse.com/?p=970\" target=\"_blank\" rel=\"noopener\">http://jordy.easymorse.com/?p=970</a></li>\n<li>Mac SQLCipher导出工具 <a href=\"https://github.com/welsonla/SQLCipherExport\" target=\"_blank\" rel=\"noopener\">https://github.com/welsonla/SQLCipherExport</a></li>\n</ul>"},{"layout":"post","title":"我的2013","date":"2014-01-02T00:19:00.000Z","comments":1,"_content":"\n####作品\n1. 对晴天进行了两次更新;\n2. 和小伙伴们一起做了一个密码管理的软件[passbox](https://itunes)\n3. 写了一个对SQLCipher加密数据库转换的Mac程序\n\n####读书\n1. 《打造Facebook》\n2. 《MacTack人生元编程》\n3. 《写给程序员的Web设计书》\n4. 《写给大家看的Web设计书》\n5. 《淘宝技术这十年》\n6. 《苹果开发之Cocoa编程》\n7. 《代码整洁之道》\n\n####健康\n12年有一阵子住院，13年特别注意锻炼身体，9月份每天和几个朋友去紫竹院跑步运动。强度不是很大，天气渐冷，入冬，雾霾跟严寒，使运动停止。\n\n13年身体并没有什么大碍，感谢\n\n####技术\n感觉自己这一年的技术，进步不大，惭愧。在用户体验跟交互方面，倒是有了一些自己的心得。对Mac的编程有了越来越浓厚的兴趣。\n\n####济南\n从十月份，陆续跟女朋友在济南看了几套房子。主要参考的房子是90平米以上可以落户的房子，现在我女人已经开始考虑学区的问题了，经十路沿线现在也越来越多的高楼在崛起，房价也在逐渐的攀高，房价是每个年轻人心里的痛。\n\n####2014\n1. 多读书\n2. 更多的iOS上的作品\n3. 更多的Mac应用\n4. 深入Object-c，并继续强化Ruby on Rails\n5. 锻炼身体\n6. 从AppStore赚多一点钱\n7. 与几个朋友的小工作室，希望我们能成为TapBot\n8. 换新工作 \n9. 买房结婚(房子已买)","source":"_posts/2014-01-02-my-2013.markdown","raw":"---\nlayout: post\ntitle: \"我的2013\"\ndate: 2014-01-02 08:19\ncomments: true\ncategories: life\n---\n\n####作品\n1. 对晴天进行了两次更新;\n2. 和小伙伴们一起做了一个密码管理的软件[passbox](https://itunes)\n3. 写了一个对SQLCipher加密数据库转换的Mac程序\n\n####读书\n1. 《打造Facebook》\n2. 《MacTack人生元编程》\n3. 《写给程序员的Web设计书》\n4. 《写给大家看的Web设计书》\n5. 《淘宝技术这十年》\n6. 《苹果开发之Cocoa编程》\n7. 《代码整洁之道》\n\n####健康\n12年有一阵子住院，13年特别注意锻炼身体，9月份每天和几个朋友去紫竹院跑步运动。强度不是很大，天气渐冷，入冬，雾霾跟严寒，使运动停止。\n\n13年身体并没有什么大碍，感谢\n\n####技术\n感觉自己这一年的技术，进步不大，惭愧。在用户体验跟交互方面，倒是有了一些自己的心得。对Mac的编程有了越来越浓厚的兴趣。\n\n####济南\n从十月份，陆续跟女朋友在济南看了几套房子。主要参考的房子是90平米以上可以落户的房子，现在我女人已经开始考虑学区的问题了，经十路沿线现在也越来越多的高楼在崛起，房价也在逐渐的攀高，房价是每个年轻人心里的痛。\n\n####2014\n1. 多读书\n2. 更多的iOS上的作品\n3. 更多的Mac应用\n4. 深入Object-c，并继续强化Ruby on Rails\n5. 锻炼身体\n6. 从AppStore赚多一点钱\n7. 与几个朋友的小工作室，希望我们能成为TapBot\n8. 换新工作 \n9. 买房结婚(房子已买)","slug":"my-2013","published":1,"updated":"2020-01-01T02:23:42.000Z","photos":[],"link":"","_id":"clb0uhkc9000to63kc5r30f8e","content":"<p>####作品</p>\n<ol>\n<li>对晴天进行了两次更新;</li>\n<li>和小伙伴们一起做了一个密码管理的软件<a href=\"https://itunes\" target=\"_blank\" rel=\"noopener\">passbox</a></li>\n<li>写了一个对SQLCipher加密数据库转换的Mac程序</li>\n</ol>\n<p>####读书</p>\n<ol>\n<li>《打造Facebook》</li>\n<li>《MacTack人生元编程》</li>\n<li>《写给程序员的Web设计书》</li>\n<li>《写给大家看的Web设计书》</li>\n<li>《淘宝技术这十年》</li>\n<li>《苹果开发之Cocoa编程》</li>\n<li>《代码整洁之道》</li>\n</ol>\n<p>####健康<br>12年有一阵子住院，13年特别注意锻炼身体，9月份每天和几个朋友去紫竹院跑步运动。强度不是很大，天气渐冷，入冬，雾霾跟严寒，使运动停止。</p>\n<p>13年身体并没有什么大碍，感谢</p>\n<p>####技术<br>感觉自己这一年的技术，进步不大，惭愧。在用户体验跟交互方面，倒是有了一些自己的心得。对Mac的编程有了越来越浓厚的兴趣。</p>\n<p>####济南<br>从十月份，陆续跟女朋友在济南看了几套房子。主要参考的房子是90平米以上可以落户的房子，现在我女人已经开始考虑学区的问题了，经十路沿线现在也越来越多的高楼在崛起，房价也在逐渐的攀高，房价是每个年轻人心里的痛。</p>\n<p>####2014</p>\n<ol>\n<li>多读书</li>\n<li>更多的iOS上的作品</li>\n<li>更多的Mac应用</li>\n<li>深入Object-c，并继续强化Ruby on Rails</li>\n<li>锻炼身体</li>\n<li>从AppStore赚多一点钱</li>\n<li>与几个朋友的小工作室，希望我们能成为TapBot</li>\n<li>换新工作 </li>\n<li>买房结婚(房子已买)</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<p>####作品</p>\n<ol>\n<li>对晴天进行了两次更新;</li>\n<li>和小伙伴们一起做了一个密码管理的软件<a href=\"https://itunes\" target=\"_blank\" rel=\"noopener\">passbox</a></li>\n<li>写了一个对SQLCipher加密数据库转换的Mac程序</li>\n</ol>\n<p>####读书</p>\n<ol>\n<li>《打造Facebook》</li>\n<li>《MacTack人生元编程》</li>\n<li>《写给程序员的Web设计书》</li>\n<li>《写给大家看的Web设计书》</li>\n<li>《淘宝技术这十年》</li>\n<li>《苹果开发之Cocoa编程》</li>\n<li>《代码整洁之道》</li>\n</ol>\n<p>####健康<br>12年有一阵子住院，13年特别注意锻炼身体，9月份每天和几个朋友去紫竹院跑步运动。强度不是很大，天气渐冷，入冬，雾霾跟严寒，使运动停止。</p>\n<p>13年身体并没有什么大碍，感谢</p>\n<p>####技术<br>感觉自己这一年的技术，进步不大，惭愧。在用户体验跟交互方面，倒是有了一些自己的心得。对Mac的编程有了越来越浓厚的兴趣。</p>\n<p>####济南<br>从十月份，陆续跟女朋友在济南看了几套房子。主要参考的房子是90平米以上可以落户的房子，现在我女人已经开始考虑学区的问题了，经十路沿线现在也越来越多的高楼在崛起，房价也在逐渐的攀高，房价是每个年轻人心里的痛。</p>\n<p>####2014</p>\n<ol>\n<li>多读书</li>\n<li>更多的iOS上的作品</li>\n<li>更多的Mac应用</li>\n<li>深入Object-c，并继续强化Ruby on Rails</li>\n<li>锻炼身体</li>\n<li>从AppStore赚多一点钱</li>\n<li>与几个朋友的小工作室，希望我们能成为TapBot</li>\n<li>换新工作 </li>\n<li>买房结婚(房子已买)</li>\n</ol>\n"},{"layout":"post","title":"你的Mac慢了么","date":"2014-04-12T04:56:00.000Z","comments":1,"_content":"\n本子是MC700,已经陪伴我coding了三年,中间升级了内存,硬盘加了SSD,但是自从电池坏掉以后,我拆掉了电池,接电使用,发现越来越卡,经历了三个月左右的煎熬,我的mac终于又重新焕发了青春,说说遇到的问题\n\n\n<!--more-->\n\n1. 必须安装电池,电池坏掉的话,赶紧买新的装上,否则你的macbook会降频运行\n\n\t>这就是为什么我是SSD硬盘,依然感觉慢的要死的原因,之前电池坏了,本想着拆下来,裸奔运行,后来就发现本子卡的不行.检测你的macbook是否在降频运行,可以使用这个小工具[Intel(R) Power Gadget](http://software.intel.com/en-us/articles/intel-power-gadget-20)\n\n2. 使用时间长,本子会发热,你会发现kenerl_task这个进程占用的CPU特别大,试着用一些软件为mac降温\n   >推荐[Macs Fan Control ](http://www.crystalidea.com/macs-fan-control),能固定风扇的转速,防止温度飙的很高\n   \n3. 如果是自己加装的SSD,默认trim是不打开的,需要自己使用打开\n\t>推荐一个小工具[trim enables](http://www.cindori.org/software/trimenabler/)\n     如果你是geek,也可以使用命令行打开trim,打开后需要重启你的电脑,看看这个gist上[trim_enabler.sh](https://gist.github.com/return1/4058659)\n   \n\n","source":"_posts/2014-04-12-why-my-mac-so-slow.markdown","raw":"---\nlayout: post\ntitle: 你的Mac慢了么\ndate: 2014-04-12 12:56\ncomments: true\ncategories: 随笔\n---\n\n本子是MC700,已经陪伴我coding了三年,中间升级了内存,硬盘加了SSD,但是自从电池坏掉以后,我拆掉了电池,接电使用,发现越来越卡,经历了三个月左右的煎熬,我的mac终于又重新焕发了青春,说说遇到的问题\n\n\n<!--more-->\n\n1. 必须安装电池,电池坏掉的话,赶紧买新的装上,否则你的macbook会降频运行\n\n\t>这就是为什么我是SSD硬盘,依然感觉慢的要死的原因,之前电池坏了,本想着拆下来,裸奔运行,后来就发现本子卡的不行.检测你的macbook是否在降频运行,可以使用这个小工具[Intel(R) Power Gadget](http://software.intel.com/en-us/articles/intel-power-gadget-20)\n\n2. 使用时间长,本子会发热,你会发现kenerl_task这个进程占用的CPU特别大,试着用一些软件为mac降温\n   >推荐[Macs Fan Control ](http://www.crystalidea.com/macs-fan-control),能固定风扇的转速,防止温度飙的很高\n   \n3. 如果是自己加装的SSD,默认trim是不打开的,需要自己使用打开\n\t>推荐一个小工具[trim enables](http://www.cindori.org/software/trimenabler/)\n     如果你是geek,也可以使用命令行打开trim,打开后需要重启你的电脑,看看这个gist上[trim_enabler.sh](https://gist.github.com/return1/4058659)\n   \n\n","slug":"why-my-mac-so-slow","published":1,"updated":"2020-01-01T02:23:42.000Z","photos":[],"link":"","_id":"clb0uhkca000vo63k2wc9lyzs","content":"<p>本子是MC700,已经陪伴我coding了三年,中间升级了内存,硬盘加了SSD,但是自从电池坏掉以后,我拆掉了电池,接电使用,发现越来越卡,经历了三个月左右的煎熬,我的mac终于又重新焕发了青春,说说遇到的问题</p>\n<a id=\"more\"></a>\n<ol>\n<li><p>必须安装电池,电池坏掉的话,赶紧买新的装上,否则你的macbook会降频运行</p>\n<blockquote>\n<p>这就是为什么我是SSD硬盘,依然感觉慢的要死的原因,之前电池坏了,本想着拆下来,裸奔运行,后来就发现本子卡的不行.检测你的macbook是否在降频运行,可以使用这个小工具<a href=\"http://software.intel.com/en-us/articles/intel-power-gadget-20\" target=\"_blank\" rel=\"noopener\">Intel(R) Power Gadget</a></p>\n</blockquote>\n</li>\n<li><p>使用时间长,本子会发热,你会发现kenerl_task这个进程占用的CPU特别大,试着用一些软件为mac降温</p>\n<blockquote>\n<p>推荐<a href=\"http://www.crystalidea.com/macs-fan-control\" target=\"_blank\" rel=\"noopener\">Macs Fan Control </a>,能固定风扇的转速,防止温度飙的很高</p>\n</blockquote>\n</li>\n<li><p>如果是自己加装的SSD,默认trim是不打开的,需要自己使用打开</p>\n<blockquote>\n<p>推荐一个小工具<a href=\"http://www.cindori.org/software/trimenabler/\" target=\"_blank\" rel=\"noopener\">trim enables</a><br>  如果你是geek,也可以使用命令行打开trim,打开后需要重启你的电脑,看看这个gist上<a href=\"https://gist.github.com/return1/4058659\" target=\"_blank\" rel=\"noopener\">trim_enabler.sh</a></p>\n</blockquote>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"<p>本子是MC700,已经陪伴我coding了三年,中间升级了内存,硬盘加了SSD,但是自从电池坏掉以后,我拆掉了电池,接电使用,发现越来越卡,经历了三个月左右的煎熬,我的mac终于又重新焕发了青春,说说遇到的问题</p>","more":"<ol>\n<li><p>必须安装电池,电池坏掉的话,赶紧买新的装上,否则你的macbook会降频运行</p>\n<blockquote>\n<p>这就是为什么我是SSD硬盘,依然感觉慢的要死的原因,之前电池坏了,本想着拆下来,裸奔运行,后来就发现本子卡的不行.检测你的macbook是否在降频运行,可以使用这个小工具<a href=\"http://software.intel.com/en-us/articles/intel-power-gadget-20\" target=\"_blank\" rel=\"noopener\">Intel(R) Power Gadget</a></p>\n</blockquote>\n</li>\n<li><p>使用时间长,本子会发热,你会发现kenerl_task这个进程占用的CPU特别大,试着用一些软件为mac降温</p>\n<blockquote>\n<p>推荐<a href=\"http://www.crystalidea.com/macs-fan-control\" target=\"_blank\" rel=\"noopener\">Macs Fan Control </a>,能固定风扇的转速,防止温度飙的很高</p>\n</blockquote>\n</li>\n<li><p>如果是自己加装的SSD,默认trim是不打开的,需要自己使用打开</p>\n<blockquote>\n<p>推荐一个小工具<a href=\"http://www.cindori.org/software/trimenabler/\" target=\"_blank\" rel=\"noopener\">trim enables</a><br>  如果你是geek,也可以使用命令行打开trim,打开后需要重启你的电脑,看看这个gist上<a href=\"https://gist.github.com/return1/4058659\" target=\"_blank\" rel=\"noopener\">trim_enabler.sh</a></p>\n</blockquote>\n</li>\n</ol>"},{"layout":"post","title":"Learn core animation the hard way","date":"2014-05-11T12:43:00.000Z","comments":1,"_content":"\n\n\n\n###Document\n1. [CABasicAnimation Keypath](https://developer.apple.com/library/ios/documentation/Cocoa/Conceptual/CoreAnimation_guide/Key-ValueCodingExtensions/Key-ValueCodingExtensions.html#//apple_ref/doc/uid/TP40004514-CH12-SW8)\n2. [Animation Types and Timing Programming Guide](https://developer.apple.com/library/mac/documentation/Cocoa/Conceptual/Animation_Types_Timing/Articles/PropertyAnimations.html)\n3. [CGAffineTransform](https://developer.apple.com/library/mac/documentation/graphicsimaging/reference/CGAffineTransform/Reference/reference.html)\n4. [Quartz 2D Programming Guide](https://developer.apple.com/library/mac/documentation/graphicsimaging/Conceptual/drawingwithquartz2d/Introduction/Introduction.html#//apple_ref/doc/uid/TP30001066)\n5. [放射变换](http://baike.baidu.com/view/954621.htm)\n6. [组合动画](http://www.cnblogs.com/xiaodao/archive/2012/02/10/2345481.html)\n7. [http://www.cnblogs.com/v2m_/archive/2013/05/09/3070187.html](http://www.cnblogs.com/v2m_/archive/2013/05/09/3070187.html)\n8. [几个常用动画代码](http://www.cnblogs.com/sell/archive/2013/02/01/2889013.html)","source":"_posts/2014-05-11-learn-core-animation-the-hard-way.markdown","raw":"---\nlayout: post\ntitle: \"Learn core animation the hard way\"\ndate: 2014-05-11 20:43\ncomments: true\ncategories: iOS\n---\n\n\n\n\n###Document\n1. [CABasicAnimation Keypath](https://developer.apple.com/library/ios/documentation/Cocoa/Conceptual/CoreAnimation_guide/Key-ValueCodingExtensions/Key-ValueCodingExtensions.html#//apple_ref/doc/uid/TP40004514-CH12-SW8)\n2. [Animation Types and Timing Programming Guide](https://developer.apple.com/library/mac/documentation/Cocoa/Conceptual/Animation_Types_Timing/Articles/PropertyAnimations.html)\n3. [CGAffineTransform](https://developer.apple.com/library/mac/documentation/graphicsimaging/reference/CGAffineTransform/Reference/reference.html)\n4. [Quartz 2D Programming Guide](https://developer.apple.com/library/mac/documentation/graphicsimaging/Conceptual/drawingwithquartz2d/Introduction/Introduction.html#//apple_ref/doc/uid/TP30001066)\n5. [放射变换](http://baike.baidu.com/view/954621.htm)\n6. [组合动画](http://www.cnblogs.com/xiaodao/archive/2012/02/10/2345481.html)\n7. [http://www.cnblogs.com/v2m_/archive/2013/05/09/3070187.html](http://www.cnblogs.com/v2m_/archive/2013/05/09/3070187.html)\n8. [几个常用动画代码](http://www.cnblogs.com/sell/archive/2013/02/01/2889013.html)","slug":"learn-core-animation-the-hard-way","published":1,"updated":"2020-01-01T02:23:42.000Z","photos":[],"link":"","_id":"clb0uhkcc000yo63k0q59oic0","content":"<p>###Document</p>\n<ol>\n<li><a href=\"https://developer.apple.com/library/ios/documentation/Cocoa/Conceptual/CoreAnimation_guide/Key-ValueCodingExtensions/Key-ValueCodingExtensions.html#//apple_ref/doc/uid/TP40004514-CH12-SW8\" target=\"_blank\" rel=\"noopener\">CABasicAnimation Keypath</a></li>\n<li><a href=\"https://developer.apple.com/library/mac/documentation/Cocoa/Conceptual/Animation_Types_Timing/Articles/PropertyAnimations.html\" target=\"_blank\" rel=\"noopener\">Animation Types and Timing Programming Guide</a></li>\n<li><a href=\"https://developer.apple.com/library/mac/documentation/graphicsimaging/reference/CGAffineTransform/Reference/reference.html\" target=\"_blank\" rel=\"noopener\">CGAffineTransform</a></li>\n<li><a href=\"https://developer.apple.com/library/mac/documentation/graphicsimaging/Conceptual/drawingwithquartz2d/Introduction/Introduction.html#//apple_ref/doc/uid/TP30001066\" target=\"_blank\" rel=\"noopener\">Quartz 2D Programming Guide</a></li>\n<li><a href=\"http://baike.baidu.com/view/954621.htm\" target=\"_blank\" rel=\"noopener\">放射变换</a></li>\n<li><a href=\"http://www.cnblogs.com/xiaodao/archive/2012/02/10/2345481.html\" target=\"_blank\" rel=\"noopener\">组合动画</a></li>\n<li><a href=\"http://www.cnblogs.com/v2m_/archive/2013/05/09/3070187.html\" target=\"_blank\" rel=\"noopener\">http://www.cnblogs.com/v2m_/archive/2013/05/09/3070187.html</a></li>\n<li><a href=\"http://www.cnblogs.com/sell/archive/2013/02/01/2889013.html\" target=\"_blank\" rel=\"noopener\">几个常用动画代码</a></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<p>###Document</p>\n<ol>\n<li><a href=\"https://developer.apple.com/library/ios/documentation/Cocoa/Conceptual/CoreAnimation_guide/Key-ValueCodingExtensions/Key-ValueCodingExtensions.html#//apple_ref/doc/uid/TP40004514-CH12-SW8\" target=\"_blank\" rel=\"noopener\">CABasicAnimation Keypath</a></li>\n<li><a href=\"https://developer.apple.com/library/mac/documentation/Cocoa/Conceptual/Animation_Types_Timing/Articles/PropertyAnimations.html\" target=\"_blank\" rel=\"noopener\">Animation Types and Timing Programming Guide</a></li>\n<li><a href=\"https://developer.apple.com/library/mac/documentation/graphicsimaging/reference/CGAffineTransform/Reference/reference.html\" target=\"_blank\" rel=\"noopener\">CGAffineTransform</a></li>\n<li><a href=\"https://developer.apple.com/library/mac/documentation/graphicsimaging/Conceptual/drawingwithquartz2d/Introduction/Introduction.html#//apple_ref/doc/uid/TP30001066\" target=\"_blank\" rel=\"noopener\">Quartz 2D Programming Guide</a></li>\n<li><a href=\"http://baike.baidu.com/view/954621.htm\" target=\"_blank\" rel=\"noopener\">放射变换</a></li>\n<li><a href=\"http://www.cnblogs.com/xiaodao/archive/2012/02/10/2345481.html\" target=\"_blank\" rel=\"noopener\">组合动画</a></li>\n<li><a href=\"http://www.cnblogs.com/v2m_/archive/2013/05/09/3070187.html\" target=\"_blank\" rel=\"noopener\">http://www.cnblogs.com/v2m_/archive/2013/05/09/3070187.html</a></li>\n<li><a href=\"http://www.cnblogs.com/sell/archive/2013/02/01/2889013.html\" target=\"_blank\" rel=\"noopener\">几个常用动画代码</a></li>\n</ol>\n"},{"layout":"post","title":"Instruments无法启动","date":"2014-07-14T07:57:00.000Z","comments":1,"_content":"\n最近在iOS7的系统上使用Instrument想检查内存的leaks，启动时候总是提示失败，花了些时间，解决了这个问题，做下笔记。\n\n<!--more-->\n\n##issue\n```ruby\nError Starting Recording\nAt least one target failed to launch; aborting run\n\n\nTarget failed to run. Permisson to debug [app name] was denied. The app must be signed with a development identity (i.e. iOS Developer)\n```\n![http://ww4.sinaimg.cn/large/6e8de9dbgw1eice18vkrej20rs0jmgnq.jpg](http://ww4.sinaimg.cn/large/6e8de9dbgw1eice18vkrej20rs0jmgnq.jpg)\n\n##fix\n```ruby\nProduct-->Scheme-->Edit Scheme,将Profile那栏中的Build Configuration将Release改为Debug\n```\n![http://ww1.sinaimg.cn/large/6e8de9dbgw1eice66ef74j20jg0d7759.jpg](http://ww1.sinaimg.cn/large/6e8de9dbgw1eice66ef74j20jg0d7759.jpg)\n\n\n##issue\n1.如果发现leaks视图无法监控到任何的内存泄露，说明你开启了Zombie，将Scheme菜单中的`Enable Zombie Objects`勾去就可以了\n2.检查你是否启用了环境变量，变量中是否开启了zombie设置\n\n![http://ww4.sinaimg.cn/large/6e8de9dbgw1eiceaztirjj20ee0arq3q.jpg](http://ww4.sinaimg.cn/large/6e8de9dbgw1eiceaztirjj20ee0arq3q.jpg)\n","source":"_posts/2014-07-14-instrument-start-fail.markdown","raw":"---\nlayout: post\ntitle: \"Instruments无法启动\"\ndate: 2014-07-14 15:57\ncomments: true\ncategories: iOS\n---\n\n最近在iOS7的系统上使用Instrument想检查内存的leaks，启动时候总是提示失败，花了些时间，解决了这个问题，做下笔记。\n\n<!--more-->\n\n##issue\n```ruby\nError Starting Recording\nAt least one target failed to launch; aborting run\n\n\nTarget failed to run. Permisson to debug [app name] was denied. The app must be signed with a development identity (i.e. iOS Developer)\n```\n![http://ww4.sinaimg.cn/large/6e8de9dbgw1eice18vkrej20rs0jmgnq.jpg](http://ww4.sinaimg.cn/large/6e8de9dbgw1eice18vkrej20rs0jmgnq.jpg)\n\n##fix\n```ruby\nProduct-->Scheme-->Edit Scheme,将Profile那栏中的Build Configuration将Release改为Debug\n```\n![http://ww1.sinaimg.cn/large/6e8de9dbgw1eice66ef74j20jg0d7759.jpg](http://ww1.sinaimg.cn/large/6e8de9dbgw1eice66ef74j20jg0d7759.jpg)\n\n\n##issue\n1.如果发现leaks视图无法监控到任何的内存泄露，说明你开启了Zombie，将Scheme菜单中的`Enable Zombie Objects`勾去就可以了\n2.检查你是否启用了环境变量，变量中是否开启了zombie设置\n\n![http://ww4.sinaimg.cn/large/6e8de9dbgw1eiceaztirjj20ee0arq3q.jpg](http://ww4.sinaimg.cn/large/6e8de9dbgw1eiceaztirjj20ee0arq3q.jpg)\n","slug":"instrument-start-fail","published":1,"updated":"2020-01-01T02:23:42.000Z","photos":[],"link":"","_id":"clb0uhkce0010o63k2vvcrpde","content":"<p>最近在iOS7的系统上使用Instrument想检查内存的leaks，启动时候总是提示失败，花了些时间，解决了这个问题，做下笔记。</p>\n<a id=\"more\"></a>\n<p>##issue<br><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Error Starting Recording</span><br><span class=\"line\">At least one target failed to launch; aborting run</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">Target failed to run. Permisson to debug [app name] was denied. The app must be signed with a development identity (i.e. iOS Developer)</span><br></pre></td></tr></table></figure></p>\n<p><img src=\"http://ww4.sinaimg.cn/large/6e8de9dbgw1eice18vkrej20rs0jmgnq.jpg\" alt=\"http://ww4.sinaimg.cn/large/6e8de9dbgw1eice18vkrej20rs0jmgnq.jpg\"></p>\n<p>##fix<br><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Product--&gt;Scheme--&gt;Edit Scheme,将Profile那栏中的Build Configuration将Release改为Debug</span><br></pre></td></tr></table></figure></p>\n<p><img src=\"http://ww1.sinaimg.cn/large/6e8de9dbgw1eice66ef74j20jg0d7759.jpg\" alt=\"http://ww1.sinaimg.cn/large/6e8de9dbgw1eice66ef74j20jg0d7759.jpg\"></p>\n<p>##issue<br>1.如果发现leaks视图无法监控到任何的内存泄露，说明你开启了Zombie，将Scheme菜单中的<code>Enable Zombie Objects</code>勾去就可以了<br>2.检查你是否启用了环境变量，变量中是否开启了zombie设置</p>\n<p><img src=\"http://ww4.sinaimg.cn/large/6e8de9dbgw1eiceaztirjj20ee0arq3q.jpg\" alt=\"http://ww4.sinaimg.cn/large/6e8de9dbgw1eiceaztirjj20ee0arq3q.jpg\"></p>\n","site":{"data":{}},"excerpt":"<p>最近在iOS7的系统上使用Instrument想检查内存的leaks，启动时候总是提示失败，花了些时间，解决了这个问题，做下笔记。</p>","more":"<p>##issue<br><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Error Starting Recording</span><br><span class=\"line\">At least one target failed to launch; aborting run</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">Target failed to run. Permisson to debug [app name] was denied. The app must be signed with a development identity (i.e. iOS Developer)</span><br></pre></td></tr></table></figure></p>\n<p><img src=\"http://ww4.sinaimg.cn/large/6e8de9dbgw1eice18vkrej20rs0jmgnq.jpg\" alt=\"http://ww4.sinaimg.cn/large/6e8de9dbgw1eice18vkrej20rs0jmgnq.jpg\"></p>\n<p>##fix<br><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Product--&gt;Scheme--&gt;Edit Scheme,将Profile那栏中的Build Configuration将Release改为Debug</span><br></pre></td></tr></table></figure></p>\n<p><img src=\"http://ww1.sinaimg.cn/large/6e8de9dbgw1eice66ef74j20jg0d7759.jpg\" alt=\"http://ww1.sinaimg.cn/large/6e8de9dbgw1eice66ef74j20jg0d7759.jpg\"></p>\n<p>##issue<br>1.如果发现leaks视图无法监控到任何的内存泄露，说明你开启了Zombie，将Scheme菜单中的<code>Enable Zombie Objects</code>勾去就可以了<br>2.检查你是否启用了环境变量，变量中是否开启了zombie设置</p>\n<p><img src=\"http://ww4.sinaimg.cn/large/6e8de9dbgw1eiceaztirjj20ee0arq3q.jpg\" alt=\"http://ww4.sinaimg.cn/large/6e8de9dbgw1eiceaztirjj20ee0arq3q.jpg\"></p>"},{"layout":"post","title":"Xcode5 install command line tools","date":"2014-07-14T08:56:00.000Z","comments":1,"_content":"\n\n之前遇到过，一直没做笔记，导致每次都要现查\n\n```ruby\nxcode-select --install\n```","source":"_posts/2014-07-14-xcode5-install-command-line-tools.markdown","raw":"---\nlayout: post\ntitle: \"Xcode5 install command line tools\"\ndate: 2014-07-14 16:56\ncomments: true\ncategories: iOS\n---\n\n\n之前遇到过，一直没做笔记，导致每次都要现查\n\n```ruby\nxcode-select --install\n```","slug":"xcode5-install-command-line-tools","published":1,"updated":"2020-01-01T02:23:42.000Z","photos":[],"link":"","_id":"clb0uhkcj0013o63kpub5lwlk","content":"<p>之前遇到过，一直没做笔记，导致每次都要现查</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xcode-select --install</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>之前遇到过，一直没做笔记，导致每次都要现查</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xcode-select --install</span><br></pre></td></tr></table></figure>"},{"layout":"post","title":"Mac Mini开箱","date":"2014-11-22T15:24:00.000Z","comments":1,"_content":"\n###背景\n从3月份换了新工作，就一直在使用自己的电脑，每天背着上下班，后来自己又买了显示器和新的机械键盘。想想这时候如果上Mac mini的话，外设都已经齐全了。\n一直在等9月份的Mini新版，无奈对新版确实有些失望，一直摇摆不定，恰巧双十一的前一天，发现京东的MD387已经降价到了3588，果断决定入手了。\n\n<!--more-->\n\n###开箱\n11.11日下午收到了京东的货，用的京东白条，可以到12.10日进行还款，这个给京东点赞\n\n![Mini](http://ww2.sinaimg.cn/large/6e8de9dbgw1emk7661ob8j21kw23u7wh.jpg =500x)\n\n####正面照\n![mini front](http://ww2.sinaimg.cn/large/6e8de9dbjw1emk8q9x5caj21kw23u7sd.jpg =500x)\n\n####背后有丰富的插口，再也不用担心USB口不够用了\n![Mini back](http://ww2.sinaimg.cn/large/6e8de9dbgw1emk78er4izj21kw23u7sd.jpg =500x)\n\n####配件是有一个HDMI转DVI的口\n![Mini support](http://ww1.sinaimg.cn/large/6e8de9dbgw1emk7a8ffzjj21kw23unj2.jpg  =500x)\n\n\n###升级\n如果要换内存的话，是不用拧一颗螺丝的，旋转后壳，就能取下底部的壳,内部结构太美了\n![Mini inside](http://ww4.sinaimg.cn/large/6e8de9dbgw1emk7crpjh4j21kw16oqmn.jpg =400x)\n\n###使用\n#####显示特别模糊\n\n当我接上显示器的那一刻，我感觉眼睛都要瞎了，一定是我打开方式不对，屏幕为什么这么模糊，后来上网搜了一下，很多人都有这个问题。\n有人说线的问题，我换了几条线，显示效果都是一样糟糕\n后来终于找到了问题，并且感谢大神给的解决方案。[Mac OSX 顯示模糊問題，完全解決辦法](http://adolfzer.blogspot.com/2013/05/mac-osx.html)\n\n```ruby\nmac的電腦如果搭配自家螢幕可能不會有這問題，\n\n不過如果不是用Apple的螢幕，然後又是跟我一樣是用HDMI輸出的話，\n\n那畫面就一定很難好了，\n```\n\n我把这个脚本放到了[gist](https://gist.github.com/welsonla/e43ba2ba039c7ecd475d)上面，你复制保存到本地，命名为`patch-edid.rb`\n将这个patch放到你的文档下，然后运行,会生成一套显示器配置\n```ruby\nruby patch-edid.rb\n```\n\n将这套配置，放到系统`/System/Library/Displays/Overrides`,重启后就会生效了。\n\n#####打开trim，支持10.10\n鉴于网上脚本众多，而trim enabler又让很多电脑出现了问题，现在终于发现一款10.10下完美的打开Trim的工具(free)\n\n[Chameleon](http://chameleon.alessandroboschini.com/)\n\n![Chameleon](http://ww2.sinaimg.cn/large/6e8de9dbjw1emk7zcot3oj20880d9t95.jpg)\n\n\n###总结\n使用中，将MC700上的8G内存换到了Mini上面，现在的配置是\n```\n1. Mac Mini : DDR3 1333 8G\n2. MC700 : 4G DDR3 1600, Sandisk SSD 128\n```\n由于近期开销比较大，这样对两台机器进行了一个互补，发现都还可以进行正常的开发，但Mini还是要比我的MC700要快很多，不知道这台MC700还能陪伴我多久。\n\n感谢老婆，让我这次败家，有了一个一直以来梦寐以求的工作套装\n","source":"_posts/2014-11-22-mac-mini-show.markdown","raw":"---\nlayout: post\ntitle: \"Mac Mini开箱\"\ndate: 2014-11-22 23:24\ncomments: true\ncategories: life\n---\n\n###背景\n从3月份换了新工作，就一直在使用自己的电脑，每天背着上下班，后来自己又买了显示器和新的机械键盘。想想这时候如果上Mac mini的话，外设都已经齐全了。\n一直在等9月份的Mini新版，无奈对新版确实有些失望，一直摇摆不定，恰巧双十一的前一天，发现京东的MD387已经降价到了3588，果断决定入手了。\n\n<!--more-->\n\n###开箱\n11.11日下午收到了京东的货，用的京东白条，可以到12.10日进行还款，这个给京东点赞\n\n![Mini](http://ww2.sinaimg.cn/large/6e8de9dbgw1emk7661ob8j21kw23u7wh.jpg =500x)\n\n####正面照\n![mini front](http://ww2.sinaimg.cn/large/6e8de9dbjw1emk8q9x5caj21kw23u7sd.jpg =500x)\n\n####背后有丰富的插口，再也不用担心USB口不够用了\n![Mini back](http://ww2.sinaimg.cn/large/6e8de9dbgw1emk78er4izj21kw23u7sd.jpg =500x)\n\n####配件是有一个HDMI转DVI的口\n![Mini support](http://ww1.sinaimg.cn/large/6e8de9dbgw1emk7a8ffzjj21kw23unj2.jpg  =500x)\n\n\n###升级\n如果要换内存的话，是不用拧一颗螺丝的，旋转后壳，就能取下底部的壳,内部结构太美了\n![Mini inside](http://ww4.sinaimg.cn/large/6e8de9dbgw1emk7crpjh4j21kw16oqmn.jpg =400x)\n\n###使用\n#####显示特别模糊\n\n当我接上显示器的那一刻，我感觉眼睛都要瞎了，一定是我打开方式不对，屏幕为什么这么模糊，后来上网搜了一下，很多人都有这个问题。\n有人说线的问题，我换了几条线，显示效果都是一样糟糕\n后来终于找到了问题，并且感谢大神给的解决方案。[Mac OSX 顯示模糊問題，完全解決辦法](http://adolfzer.blogspot.com/2013/05/mac-osx.html)\n\n```ruby\nmac的電腦如果搭配自家螢幕可能不會有這問題，\n\n不過如果不是用Apple的螢幕，然後又是跟我一樣是用HDMI輸出的話，\n\n那畫面就一定很難好了，\n```\n\n我把这个脚本放到了[gist](https://gist.github.com/welsonla/e43ba2ba039c7ecd475d)上面，你复制保存到本地，命名为`patch-edid.rb`\n将这个patch放到你的文档下，然后运行,会生成一套显示器配置\n```ruby\nruby patch-edid.rb\n```\n\n将这套配置，放到系统`/System/Library/Displays/Overrides`,重启后就会生效了。\n\n#####打开trim，支持10.10\n鉴于网上脚本众多，而trim enabler又让很多电脑出现了问题，现在终于发现一款10.10下完美的打开Trim的工具(free)\n\n[Chameleon](http://chameleon.alessandroboschini.com/)\n\n![Chameleon](http://ww2.sinaimg.cn/large/6e8de9dbjw1emk7zcot3oj20880d9t95.jpg)\n\n\n###总结\n使用中，将MC700上的8G内存换到了Mini上面，现在的配置是\n```\n1. Mac Mini : DDR3 1333 8G\n2. MC700 : 4G DDR3 1600, Sandisk SSD 128\n```\n由于近期开销比较大，这样对两台机器进行了一个互补，发现都还可以进行正常的开发，但Mini还是要比我的MC700要快很多，不知道这台MC700还能陪伴我多久。\n\n感谢老婆，让我这次败家，有了一个一直以来梦寐以求的工作套装\n","slug":"mac-mini-show","published":1,"updated":"2020-01-01T02:23:42.000Z","photos":[],"link":"","_id":"clb0uhkcl0015o63kl2dstdo6","content":"<p>###背景<br>从3月份换了新工作，就一直在使用自己的电脑，每天背着上下班，后来自己又买了显示器和新的机械键盘。想想这时候如果上Mac mini的话，外设都已经齐全了。<br>一直在等9月份的Mini新版，无奈对新版确实有些失望，一直摇摆不定，恰巧双十一的前一天，发现京东的MD387已经降价到了3588，果断决定入手了。</p>\n<a id=\"more\"></a>\n<p>###开箱<br>11.11日下午收到了京东的货，用的京东白条，可以到12.10日进行还款，这个给京东点赞</p>\n<p><img src=\"http://ww2.sinaimg.cn/large/6e8de9dbgw1emk7661ob8j21kw23u7wh.jpg =500x\" alt=\"Mini\"></p>\n<p>####正面照<br><img src=\"http://ww2.sinaimg.cn/large/6e8de9dbjw1emk8q9x5caj21kw23u7sd.jpg =500x\" alt=\"mini front\"></p>\n<p>####背后有丰富的插口，再也不用担心USB口不够用了<br><img src=\"http://ww2.sinaimg.cn/large/6e8de9dbgw1emk78er4izj21kw23u7sd.jpg =500x\" alt=\"Mini back\"></p>\n<p>####配件是有一个HDMI转DVI的口<br><img src=\"http://ww1.sinaimg.cn/large/6e8de9dbgw1emk7a8ffzjj21kw23unj2.jpg  =500x\" alt=\"Mini support\"></p>\n<p>###升级<br>如果要换内存的话，是不用拧一颗螺丝的，旋转后壳，就能取下底部的壳,内部结构太美了<br><img src=\"http://ww4.sinaimg.cn/large/6e8de9dbgw1emk7crpjh4j21kw16oqmn.jpg =400x\" alt=\"Mini inside\"></p>\n<p>###使用</p>\n<p>#####显示特别模糊</p>\n<p>当我接上显示器的那一刻，我感觉眼睛都要瞎了，一定是我打开方式不对，屏幕为什么这么模糊，后来上网搜了一下，很多人都有这个问题。<br>有人说线的问题，我换了几条线，显示效果都是一样糟糕<br>后来终于找到了问题，并且感谢大神给的解决方案。<a href=\"http://adolfzer.blogspot.com/2013/05/mac-osx.html\" target=\"_blank\" rel=\"noopener\">Mac OSX 顯示模糊問題，完全解決辦法</a></p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mac的電腦如果搭配自家螢幕可能不會有這問題，</span><br><span class=\"line\"></span><br><span class=\"line\">不過如果不是用Apple的螢幕，然後又是跟我一樣是用HDMI輸出的話，</span><br><span class=\"line\"></span><br><span class=\"line\">那畫面就一定很難好了，</span><br></pre></td></tr></table></figure>\n<p>我把这个脚本放到了<a href=\"https://gist.github.com/welsonla/e43ba2ba039c7ecd475d\" target=\"_blank\" rel=\"noopener\">gist</a>上面，你复制保存到本地，命名为<code>patch-edid.rb</code><br>将这个patch放到你的文档下，然后运行,会生成一套显示器配置<br><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ruby patch-edid.rb</span><br></pre></td></tr></table></figure></p>\n<p>将这套配置，放到系统<code>/System/Library/Displays/Overrides</code>,重启后就会生效了。</p>\n<p>#####打开trim，支持10.10<br>鉴于网上脚本众多，而trim enabler又让很多电脑出现了问题，现在终于发现一款10.10下完美的打开Trim的工具(free)</p>\n<p><a href=\"http://chameleon.alessandroboschini.com/\" target=\"_blank\" rel=\"noopener\">Chameleon</a></p>\n<p><img src=\"http://ww2.sinaimg.cn/large/6e8de9dbjw1emk7zcot3oj20880d9t95.jpg\" alt=\"Chameleon\"></p>\n<p>###总结<br>使用中，将MC700上的8G内存换到了Mini上面，现在的配置是<br><figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1.</span> Mac Mini : DDR3 <span class=\"number\">1333</span> <span class=\"number\">8</span>G</span><br><span class=\"line\"><span class=\"number\">2.</span> MC700 : <span class=\"number\">4</span>G DDR3 <span class=\"number\">1600</span>, Sandisk SSD <span class=\"number\">128</span></span><br></pre></td></tr></table></figure></p>\n<p>由于近期开销比较大，这样对两台机器进行了一个互补，发现都还可以进行正常的开发，但Mini还是要比我的MC700要快很多，不知道这台MC700还能陪伴我多久。</p>\n<p>感谢老婆，让我这次败家，有了一个一直以来梦寐以求的工作套装</p>\n","site":{"data":{}},"excerpt":"<p>###背景<br>从3月份换了新工作，就一直在使用自己的电脑，每天背着上下班，后来自己又买了显示器和新的机械键盘。想想这时候如果上Mac mini的话，外设都已经齐全了。<br>一直在等9月份的Mini新版，无奈对新版确实有些失望，一直摇摆不定，恰巧双十一的前一天，发现京东的MD387已经降价到了3588，果断决定入手了。</p>","more":"<p>###开箱<br>11.11日下午收到了京东的货，用的京东白条，可以到12.10日进行还款，这个给京东点赞</p>\n<p><img src=\"http://ww2.sinaimg.cn/large/6e8de9dbgw1emk7661ob8j21kw23u7wh.jpg =500x\" alt=\"Mini\"></p>\n<p>####正面照<br><img src=\"http://ww2.sinaimg.cn/large/6e8de9dbjw1emk8q9x5caj21kw23u7sd.jpg =500x\" alt=\"mini front\"></p>\n<p>####背后有丰富的插口，再也不用担心USB口不够用了<br><img src=\"http://ww2.sinaimg.cn/large/6e8de9dbgw1emk78er4izj21kw23u7sd.jpg =500x\" alt=\"Mini back\"></p>\n<p>####配件是有一个HDMI转DVI的口<br><img src=\"http://ww1.sinaimg.cn/large/6e8de9dbgw1emk7a8ffzjj21kw23unj2.jpg  =500x\" alt=\"Mini support\"></p>\n<p>###升级<br>如果要换内存的话，是不用拧一颗螺丝的，旋转后壳，就能取下底部的壳,内部结构太美了<br><img src=\"http://ww4.sinaimg.cn/large/6e8de9dbgw1emk7crpjh4j21kw16oqmn.jpg =400x\" alt=\"Mini inside\"></p>\n<p>###使用</p>\n<p>#####显示特别模糊</p>\n<p>当我接上显示器的那一刻，我感觉眼睛都要瞎了，一定是我打开方式不对，屏幕为什么这么模糊，后来上网搜了一下，很多人都有这个问题。<br>有人说线的问题，我换了几条线，显示效果都是一样糟糕<br>后来终于找到了问题，并且感谢大神给的解决方案。<a href=\"http://adolfzer.blogspot.com/2013/05/mac-osx.html\" target=\"_blank\" rel=\"noopener\">Mac OSX 顯示模糊問題，完全解決辦法</a></p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mac的電腦如果搭配自家螢幕可能不會有這問題，</span><br><span class=\"line\"></span><br><span class=\"line\">不過如果不是用Apple的螢幕，然後又是跟我一樣是用HDMI輸出的話，</span><br><span class=\"line\"></span><br><span class=\"line\">那畫面就一定很難好了，</span><br></pre></td></tr></table></figure>\n<p>我把这个脚本放到了<a href=\"https://gist.github.com/welsonla/e43ba2ba039c7ecd475d\" target=\"_blank\" rel=\"noopener\">gist</a>上面，你复制保存到本地，命名为<code>patch-edid.rb</code><br>将这个patch放到你的文档下，然后运行,会生成一套显示器配置<br><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ruby patch-edid.rb</span><br></pre></td></tr></table></figure></p>\n<p>将这套配置，放到系统<code>/System/Library/Displays/Overrides</code>,重启后就会生效了。</p>\n<p>#####打开trim，支持10.10<br>鉴于网上脚本众多，而trim enabler又让很多电脑出现了问题，现在终于发现一款10.10下完美的打开Trim的工具(free)</p>\n<p><a href=\"http://chameleon.alessandroboschini.com/\" target=\"_blank\" rel=\"noopener\">Chameleon</a></p>\n<p><img src=\"http://ww2.sinaimg.cn/large/6e8de9dbjw1emk7zcot3oj20880d9t95.jpg\" alt=\"Chameleon\"></p>\n<p>###总结<br>使用中，将MC700上的8G内存换到了Mini上面，现在的配置是<br><figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1.</span> Mac Mini : DDR3 <span class=\"number\">1333</span> <span class=\"number\">8</span>G</span><br><span class=\"line\"><span class=\"number\">2.</span> MC700 : <span class=\"number\">4</span>G DDR3 <span class=\"number\">1600</span>, Sandisk SSD <span class=\"number\">128</span></span><br></pre></td></tr></table></figure></p>\n<p>由于近期开销比较大，这样对两台机器进行了一个互补，发现都还可以进行正常的开发，但Mini还是要比我的MC700要快很多，不知道这台MC700还能陪伴我多久。</p>\n<p>感谢老婆，让我这次败家，有了一个一直以来梦寐以求的工作套装</p>"},{"layout":"post","title":"cocoa简洁写法笔记","date":"2014-09-05T05:14:00.000Z","comments":1,"_content":"\n对cocoa的一些语法糖做的笔记\n<!--more-->\n\n### NSNumber\n```ruby\nNSNumber *totalNumber = [NSNumber numberWithInt:1];\nto\nNSNumber *totalNumber = @1;\n\n## 更多拓展\nNSNumber *floatNumber = @2.5f;\nNSNumber *boolNumber = @YES;\nNSNumber *totalNumber = @(5 * 6.5f);\n```\n\n### NSArray\n```ruby\nNSArray *members = [NSArray arrayWithObjects:@\"father\",@\"mother\",@\"Jim\",nil];\nto\nNSArray *members = @[@\"father\",@\"mother\",@\"Jim\"];\n\n# 取值\nNSString *username = [members objectAtIndex:2];\nto\nNSString *username = members[2];\n```\n\n### NSDictionary\n```ruby\nNSDictionary *personData = [NSDictionary dictionaryWithObjectsAndKeys:@\"Jim\",@\"name\",@\"man\",@\"gender\",nil];\nto\nNSDictionary *personData = @{@\"name\":@\"Jim\",\n\t\t\t\t\t\t\t @\"gender\":@\"man\"};\n\n# 取值\nNSString *username = [personData objectForKey:@\"name\"];\nto\nNSString *username = person[@\"name\"];\n\n# 设值和替换\n[personData replaceObjectAtIndex:1 withOjbect:@\"woman\"];\n[personData setObject:@\"address\" forKey:@\"Beijing\"];\nto\nperson[1] = @\"woman\";\nperson[@\"address\"] = @\"Beijing\";\t\t\n\t\t\t\t\t\t\t\n```\n\n","source":"_posts/2014-09-05-cocoa-tidy-write.markdown","raw":"---\nlayout: post\ntitle: \"cocoa简洁写法笔记\"\ndate: 2014-09-05 13:14\ncomments: true\ncategories: \n---\n\n对cocoa的一些语法糖做的笔记\n<!--more-->\n\n### NSNumber\n```ruby\nNSNumber *totalNumber = [NSNumber numberWithInt:1];\nto\nNSNumber *totalNumber = @1;\n\n## 更多拓展\nNSNumber *floatNumber = @2.5f;\nNSNumber *boolNumber = @YES;\nNSNumber *totalNumber = @(5 * 6.5f);\n```\n\n### NSArray\n```ruby\nNSArray *members = [NSArray arrayWithObjects:@\"father\",@\"mother\",@\"Jim\",nil];\nto\nNSArray *members = @[@\"father\",@\"mother\",@\"Jim\"];\n\n# 取值\nNSString *username = [members objectAtIndex:2];\nto\nNSString *username = members[2];\n```\n\n### NSDictionary\n```ruby\nNSDictionary *personData = [NSDictionary dictionaryWithObjectsAndKeys:@\"Jim\",@\"name\",@\"man\",@\"gender\",nil];\nto\nNSDictionary *personData = @{@\"name\":@\"Jim\",\n\t\t\t\t\t\t\t @\"gender\":@\"man\"};\n\n# 取值\nNSString *username = [personData objectForKey:@\"name\"];\nto\nNSString *username = person[@\"name\"];\n\n# 设值和替换\n[personData replaceObjectAtIndex:1 withOjbect:@\"woman\"];\n[personData setObject:@\"address\" forKey:@\"Beijing\"];\nto\nperson[1] = @\"woman\";\nperson[@\"address\"] = @\"Beijing\";\t\t\n\t\t\t\t\t\t\t\n```\n\n","slug":"cocoa-tidy-write","published":1,"updated":"2020-01-01T02:23:42.000Z","photos":[],"link":"","_id":"clb0uhkco0018o63kjx2yzys9","content":"<p>对cocoa的一些语法糖做的笔记<br><a id=\"more\"></a></p>\n<h3 id=\"NSNumber\"><a href=\"#NSNumber\" class=\"headerlink\" title=\"NSNumber\"></a>NSNumber</h3><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">NSNumber *totalNumber = [NSNumber <span class=\"symbol\">numberWithInt:</span><span class=\"number\">1</span>];</span><br><span class=\"line\">to</span><br><span class=\"line\">NSNumber *totalNumber = @1;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 更多拓展</span></span><br><span class=\"line\">NSNumber *floatNumber = @2.<span class=\"number\">5</span>f;</span><br><span class=\"line\">NSNumber *boolNumber = @YES;</span><br><span class=\"line\">NSNumber *totalNumber = @(<span class=\"number\">5</span> * <span class=\"number\">6.5</span>f);</span><br></pre></td></tr></table></figure>\n<h3 id=\"NSArray\"><a href=\"#NSArray\" class=\"headerlink\" title=\"NSArray\"></a>NSArray</h3><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">NSArray *members = [NSArray <span class=\"symbol\">arrayWithObjects:</span>@<span class=\"string\">\"father\"</span>,@<span class=\"string\">\"mother\"</span>,@<span class=\"string\">\"Jim\"</span>,<span class=\"literal\">nil</span>];</span><br><span class=\"line\">to</span><br><span class=\"line\">NSArray *members = @[@<span class=\"string\">\"father\"</span>,@<span class=\"string\">\"mother\"</span>,@<span class=\"string\">\"Jim\"</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 取值</span></span><br><span class=\"line\">NSString *username = [members <span class=\"symbol\">objectAtIndex:</span><span class=\"number\">2</span>];</span><br><span class=\"line\">to</span><br><span class=\"line\">NSString *username = members[<span class=\"number\">2</span>];</span><br></pre></td></tr></table></figure>\n<h3 id=\"NSDictionary\"><a href=\"#NSDictionary\" class=\"headerlink\" title=\"NSDictionary\"></a>NSDictionary</h3><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">NSDictionary *personData = [NSDictionary <span class=\"symbol\">dictionaryWithObjectsAndKeys:</span>@<span class=\"string\">\"Jim\"</span>,@<span class=\"string\">\"name\"</span>,@<span class=\"string\">\"man\"</span>,@<span class=\"string\">\"gender\"</span>,<span class=\"literal\">nil</span>];</span><br><span class=\"line\">to</span><br><span class=\"line\">NSDictionary *personData = @&#123;@<span class=\"string\">\"name\"</span><span class=\"symbol\">:</span>@<span class=\"string\">\"Jim\"</span>,</span><br><span class=\"line\">\t\t\t\t\t\t\t @<span class=\"string\">\"gender\"</span><span class=\"symbol\">:</span>@<span class=\"string\">\"man\"</span>&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 取值</span></span><br><span class=\"line\">NSString *username = [personData <span class=\"symbol\">objectForKey:</span>@<span class=\"string\">\"name\"</span>];</span><br><span class=\"line\">to</span><br><span class=\"line\">NSString *username = person[@<span class=\"string\">\"name\"</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 设值和替换</span></span><br><span class=\"line\">[personData <span class=\"symbol\">replaceObjectAtIndex:</span><span class=\"number\">1</span> <span class=\"symbol\">withOjbect:</span>@<span class=\"string\">\"woman\"</span>];</span><br><span class=\"line\">[personData <span class=\"symbol\">setObject:</span>@<span class=\"string\">\"address\"</span> <span class=\"symbol\">forKey:</span>@<span class=\"string\">\"Beijing\"</span>];</span><br><span class=\"line\">to</span><br><span class=\"line\">person[<span class=\"number\">1</span>] = @<span class=\"string\">\"woman\"</span>;</span><br><span class=\"line\">person[@<span class=\"string\">\"address\"</span>] = @<span class=\"string\">\"Beijing\"</span>;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<p>对cocoa的一些语法糖做的笔记<br>","more":"</p>\n<h3 id=\"NSNumber\"><a href=\"#NSNumber\" class=\"headerlink\" title=\"NSNumber\"></a>NSNumber</h3><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">NSNumber *totalNumber = [NSNumber <span class=\"symbol\">numberWithInt:</span><span class=\"number\">1</span>];</span><br><span class=\"line\">to</span><br><span class=\"line\">NSNumber *totalNumber = @1;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 更多拓展</span></span><br><span class=\"line\">NSNumber *floatNumber = @2.<span class=\"number\">5</span>f;</span><br><span class=\"line\">NSNumber *boolNumber = @YES;</span><br><span class=\"line\">NSNumber *totalNumber = @(<span class=\"number\">5</span> * <span class=\"number\">6.5</span>f);</span><br></pre></td></tr></table></figure>\n<h3 id=\"NSArray\"><a href=\"#NSArray\" class=\"headerlink\" title=\"NSArray\"></a>NSArray</h3><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">NSArray *members = [NSArray <span class=\"symbol\">arrayWithObjects:</span>@<span class=\"string\">\"father\"</span>,@<span class=\"string\">\"mother\"</span>,@<span class=\"string\">\"Jim\"</span>,<span class=\"literal\">nil</span>];</span><br><span class=\"line\">to</span><br><span class=\"line\">NSArray *members = @[@<span class=\"string\">\"father\"</span>,@<span class=\"string\">\"mother\"</span>,@<span class=\"string\">\"Jim\"</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 取值</span></span><br><span class=\"line\">NSString *username = [members <span class=\"symbol\">objectAtIndex:</span><span class=\"number\">2</span>];</span><br><span class=\"line\">to</span><br><span class=\"line\">NSString *username = members[<span class=\"number\">2</span>];</span><br></pre></td></tr></table></figure>\n<h3 id=\"NSDictionary\"><a href=\"#NSDictionary\" class=\"headerlink\" title=\"NSDictionary\"></a>NSDictionary</h3><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">NSDictionary *personData = [NSDictionary <span class=\"symbol\">dictionaryWithObjectsAndKeys:</span>@<span class=\"string\">\"Jim\"</span>,@<span class=\"string\">\"name\"</span>,@<span class=\"string\">\"man\"</span>,@<span class=\"string\">\"gender\"</span>,<span class=\"literal\">nil</span>];</span><br><span class=\"line\">to</span><br><span class=\"line\">NSDictionary *personData = @&#123;@<span class=\"string\">\"name\"</span><span class=\"symbol\">:</span>@<span class=\"string\">\"Jim\"</span>,</span><br><span class=\"line\">\t\t\t\t\t\t\t @<span class=\"string\">\"gender\"</span><span class=\"symbol\">:</span>@<span class=\"string\">\"man\"</span>&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 取值</span></span><br><span class=\"line\">NSString *username = [personData <span class=\"symbol\">objectForKey:</span>@<span class=\"string\">\"name\"</span>];</span><br><span class=\"line\">to</span><br><span class=\"line\">NSString *username = person[@<span class=\"string\">\"name\"</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 设值和替换</span></span><br><span class=\"line\">[personData <span class=\"symbol\">replaceObjectAtIndex:</span><span class=\"number\">1</span> <span class=\"symbol\">withOjbect:</span>@<span class=\"string\">\"woman\"</span>];</span><br><span class=\"line\">[personData <span class=\"symbol\">setObject:</span>@<span class=\"string\">\"address\"</span> <span class=\"symbol\">forKey:</span>@<span class=\"string\">\"Beijing\"</span>];</span><br><span class=\"line\">to</span><br><span class=\"line\">person[<span class=\"number\">1</span>] = @<span class=\"string\">\"woman\"</span>;</span><br><span class=\"line\">person[@<span class=\"string\">\"address\"</span>] = @<span class=\"string\">\"Beijing\"</span>;</span><br></pre></td></tr></table></figure>"},{"title":"我的2014","comment":true,"date":"2015-02-01T13:51:11.000Z","_content":"\n## 生活\n\n今年完成了几件大事: \n三月，订婚\n五月，买房，成为了房奴\n八月，拍婚纱照\n九月，结婚\n\n今年生活上发生了很大的变化，与小关关组建了新的家庭，也让我肩负起了一个男人的责任，为了我们新的生活而奋斗。希望我能为家人和老婆创造更好的生活条件。\n\n感谢小关同志的陪伴与理解，七年长跑，我们终于走到了一起\n\n\n## 工作\n\n今年工作发生了变动，离开了工作三年的老东家，加入了新公司，在各方面都对自己的提升非常大，技术上有了比较明显的提升，由于产品是直接面对用户的，在各方面的细节的要求也比较高，尤其是用户体验方面。\n\n跨部门沟通上，由于团队非常大，涉及的业务部门也比较多，这一年有了不少机会与别的部门进行工作上的沟通协作，与人沟通上，也让我不再对人际交往有恐惧感。\n\n工作方式上，拆分复杂业务，从最小的点逐步分析整个复杂的功能系统，在功能的实现上有了更明确的思路，对时间节点也有了更好的控制。抽离与重用，减少重复代码，精简了项目代码，提高了可扩展性。\n\n通过龙哥的处理问题的方式跟思路，也让我积累到了很多宝贵的编程经验：\n\n- 清晰的调试思路与正确的分析，在一些棘手的问题上，不再是猜和逃避，而要找到出错的地方进行修复；\n- 对公共资源的全局封装，自定义的Color使用Category方法封装，比用宏定义更优雅；\n- 对业务的不同状态进行枚举化，使用起来更可读\n- 对Notification的name常量化，更易查找\n- 接口都继承自同一基类，公共的处理由基类完成，在较大变动的情况下，只需要在基类做出理，就能兼容新需求\n- 特定符号写成常量，如接口返回值，在接口变动时只需要修改下常量即可  \n\n\n## 推荐的书\n- 《我编程，我快乐》\n- 《大教堂与集市》\n- 《重来》\n\nbye, 2014","source":"_posts/2015-02-01-my-2014.md","raw":"title: 我的2014\ncomment: true\ndate: 2015-02-01 21:51:11\ncategories: life\n---\n\n## 生活\n\n今年完成了几件大事: \n三月，订婚\n五月，买房，成为了房奴\n八月，拍婚纱照\n九月，结婚\n\n今年生活上发生了很大的变化，与小关关组建了新的家庭，也让我肩负起了一个男人的责任，为了我们新的生活而奋斗。希望我能为家人和老婆创造更好的生活条件。\n\n感谢小关同志的陪伴与理解，七年长跑，我们终于走到了一起\n\n\n## 工作\n\n今年工作发生了变动，离开了工作三年的老东家，加入了新公司，在各方面都对自己的提升非常大，技术上有了比较明显的提升，由于产品是直接面对用户的，在各方面的细节的要求也比较高，尤其是用户体验方面。\n\n跨部门沟通上，由于团队非常大，涉及的业务部门也比较多，这一年有了不少机会与别的部门进行工作上的沟通协作，与人沟通上，也让我不再对人际交往有恐惧感。\n\n工作方式上，拆分复杂业务，从最小的点逐步分析整个复杂的功能系统，在功能的实现上有了更明确的思路，对时间节点也有了更好的控制。抽离与重用，减少重复代码，精简了项目代码，提高了可扩展性。\n\n通过龙哥的处理问题的方式跟思路，也让我积累到了很多宝贵的编程经验：\n\n- 清晰的调试思路与正确的分析，在一些棘手的问题上，不再是猜和逃避，而要找到出错的地方进行修复；\n- 对公共资源的全局封装，自定义的Color使用Category方法封装，比用宏定义更优雅；\n- 对业务的不同状态进行枚举化，使用起来更可读\n- 对Notification的name常量化，更易查找\n- 接口都继承自同一基类，公共的处理由基类完成，在较大变动的情况下，只需要在基类做出理，就能兼容新需求\n- 特定符号写成常量，如接口返回值，在接口变动时只需要修改下常量即可  \n\n\n## 推荐的书\n- 《我编程，我快乐》\n- 《大教堂与集市》\n- 《重来》\n\nbye, 2014","slug":"my-2014","published":1,"updated":"2020-01-01T02:23:42.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clb0uhkcp001ao63kxz51mjj3","content":"<h2 id=\"生活\"><a href=\"#生活\" class=\"headerlink\" title=\"生活\"></a>生活</h2><p>今年完成了几件大事:<br>三月，订婚<br>五月，买房，成为了房奴<br>八月，拍婚纱照<br>九月，结婚</p>\n<p>今年生活上发生了很大的变化，与小关关组建了新的家庭，也让我肩负起了一个男人的责任，为了我们新的生活而奋斗。希望我能为家人和老婆创造更好的生活条件。</p>\n<p>感谢小关同志的陪伴与理解，七年长跑，我们终于走到了一起</p>\n<h2 id=\"工作\"><a href=\"#工作\" class=\"headerlink\" title=\"工作\"></a>工作</h2><p>今年工作发生了变动，离开了工作三年的老东家，加入了新公司，在各方面都对自己的提升非常大，技术上有了比较明显的提升，由于产品是直接面对用户的，在各方面的细节的要求也比较高，尤其是用户体验方面。</p>\n<p>跨部门沟通上，由于团队非常大，涉及的业务部门也比较多，这一年有了不少机会与别的部门进行工作上的沟通协作，与人沟通上，也让我不再对人际交往有恐惧感。</p>\n<p>工作方式上，拆分复杂业务，从最小的点逐步分析整个复杂的功能系统，在功能的实现上有了更明确的思路，对时间节点也有了更好的控制。抽离与重用，减少重复代码，精简了项目代码，提高了可扩展性。</p>\n<p>通过龙哥的处理问题的方式跟思路，也让我积累到了很多宝贵的编程经验：</p>\n<ul>\n<li>清晰的调试思路与正确的分析，在一些棘手的问题上，不再是猜和逃避，而要找到出错的地方进行修复；</li>\n<li>对公共资源的全局封装，自定义的Color使用Category方法封装，比用宏定义更优雅；</li>\n<li>对业务的不同状态进行枚举化，使用起来更可读</li>\n<li>对Notification的name常量化，更易查找</li>\n<li>接口都继承自同一基类，公共的处理由基类完成，在较大变动的情况下，只需要在基类做出理，就能兼容新需求</li>\n<li>特定符号写成常量，如接口返回值，在接口变动时只需要修改下常量即可  </li>\n</ul>\n<h2 id=\"推荐的书\"><a href=\"#推荐的书\" class=\"headerlink\" title=\"推荐的书\"></a>推荐的书</h2><ul>\n<li>《我编程，我快乐》</li>\n<li>《大教堂与集市》</li>\n<li>《重来》</li>\n</ul>\n<p>bye, 2014</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"生活\"><a href=\"#生活\" class=\"headerlink\" title=\"生活\"></a>生活</h2><p>今年完成了几件大事:<br>三月，订婚<br>五月，买房，成为了房奴<br>八月，拍婚纱照<br>九月，结婚</p>\n<p>今年生活上发生了很大的变化，与小关关组建了新的家庭，也让我肩负起了一个男人的责任，为了我们新的生活而奋斗。希望我能为家人和老婆创造更好的生活条件。</p>\n<p>感谢小关同志的陪伴与理解，七年长跑，我们终于走到了一起</p>\n<h2 id=\"工作\"><a href=\"#工作\" class=\"headerlink\" title=\"工作\"></a>工作</h2><p>今年工作发生了变动，离开了工作三年的老东家，加入了新公司，在各方面都对自己的提升非常大，技术上有了比较明显的提升，由于产品是直接面对用户的，在各方面的细节的要求也比较高，尤其是用户体验方面。</p>\n<p>跨部门沟通上，由于团队非常大，涉及的业务部门也比较多，这一年有了不少机会与别的部门进行工作上的沟通协作，与人沟通上，也让我不再对人际交往有恐惧感。</p>\n<p>工作方式上，拆分复杂业务，从最小的点逐步分析整个复杂的功能系统，在功能的实现上有了更明确的思路，对时间节点也有了更好的控制。抽离与重用，减少重复代码，精简了项目代码，提高了可扩展性。</p>\n<p>通过龙哥的处理问题的方式跟思路，也让我积累到了很多宝贵的编程经验：</p>\n<ul>\n<li>清晰的调试思路与正确的分析，在一些棘手的问题上，不再是猜和逃避，而要找到出错的地方进行修复；</li>\n<li>对公共资源的全局封装，自定义的Color使用Category方法封装，比用宏定义更优雅；</li>\n<li>对业务的不同状态进行枚举化，使用起来更可读</li>\n<li>对Notification的name常量化，更易查找</li>\n<li>接口都继承自同一基类，公共的处理由基类完成，在较大变动的情况下，只需要在基类做出理，就能兼容新需求</li>\n<li>特定符号写成常量，如接口返回值，在接口变动时只需要修改下常量即可  </li>\n</ul>\n<h2 id=\"推荐的书\"><a href=\"#推荐的书\" class=\"headerlink\" title=\"推荐的书\"></a>推荐的书</h2><ul>\n<li>《我编程，我快乐》</li>\n<li>《大教堂与集市》</li>\n<li>《重来》</li>\n</ul>\n<p>bye, 2014</p>\n"},{"layout":"post","title":"Rails code snippets","date":"2015-04-12T04:55:48.000Z","comments":1,"_content":"(摘录来自: persie. “Ruby on Rails 教程”)\n\n### short key\n```ruby\ng   generate\nd   destory\ns   server\n```\n\n\n### 脚手架以及一些常用的变量类型\n```ruby\nrails g scaffold user name:string age:int email:string description:text cash:float\n```\n\n### 删除脚手架生成的代码\n```ruby\nrails d scaffold Users\n```\n\n### 生成Controller与action\n```ruby\nrails g controller TodoList list delete index\n```\n\n### 删除Controller\n```ruby\nrails d controller TodoList list delete index\n```\n\n\n### 生成Model\n```ruby\nrails g model User name:string email:string\n```\n\n### 删除Model\n```ruby\nrails d model User name:string email:string\n```\n\n\n### 添加字段到表\n```ruby\n“rails generate migration add_password_digest_to_users password_digest:string”\n```\n\n### 根据Model生成数据库表\n```ruby\nrake db:migrate\n```\n","source":"_posts/2015-04-12-rails-code-snippets.markdown","raw":"---\nlayout: post\ntitle: \"Rails code snippets\"\ndate: 2015-04-12 12:55:48 +0800\ncomments: true\ncategories: ruby\n---\n(摘录来自: persie. “Ruby on Rails 教程”)\n\n### short key\n```ruby\ng   generate\nd   destory\ns   server\n```\n\n\n### 脚手架以及一些常用的变量类型\n```ruby\nrails g scaffold user name:string age:int email:string description:text cash:float\n```\n\n### 删除脚手架生成的代码\n```ruby\nrails d scaffold Users\n```\n\n### 生成Controller与action\n```ruby\nrails g controller TodoList list delete index\n```\n\n### 删除Controller\n```ruby\nrails d controller TodoList list delete index\n```\n\n\n### 生成Model\n```ruby\nrails g model User name:string email:string\n```\n\n### 删除Model\n```ruby\nrails d model User name:string email:string\n```\n\n\n### 添加字段到表\n```ruby\n“rails generate migration add_password_digest_to_users password_digest:string”\n```\n\n### 根据Model生成数据库表\n```ruby\nrake db:migrate\n```\n","slug":"rails-code-snippets","published":1,"updated":"2020-01-01T02:23:42.000Z","photos":[],"link":"","_id":"clb0uhkcs001co63kvr6elcg5","content":"<p>(摘录来自: persie. “Ruby on Rails 教程”)</p>\n<h3 id=\"short-key\"><a href=\"#short-key\" class=\"headerlink\" title=\"short key\"></a>short key</h3><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">g   generate</span><br><span class=\"line\">d   destory</span><br><span class=\"line\">s   server</span><br></pre></td></tr></table></figure>\n<h3 id=\"脚手架以及一些常用的变量类型\"><a href=\"#脚手架以及一些常用的变量类型\" class=\"headerlink\" title=\"脚手架以及一些常用的变量类型\"></a>脚手架以及一些常用的变量类型</h3><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rails g scaffold user <span class=\"symbol\">name:</span>string <span class=\"symbol\">age:</span>int <span class=\"symbol\">email:</span>string <span class=\"symbol\">description:</span>text <span class=\"symbol\">cash:</span>float</span><br></pre></td></tr></table></figure>\n<h3 id=\"删除脚手架生成的代码\"><a href=\"#删除脚手架生成的代码\" class=\"headerlink\" title=\"删除脚手架生成的代码\"></a>删除脚手架生成的代码</h3><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rails d scaffold Users</span><br></pre></td></tr></table></figure>\n<h3 id=\"生成Controller与action\"><a href=\"#生成Controller与action\" class=\"headerlink\" title=\"生成Controller与action\"></a>生成Controller与action</h3><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rails g controller TodoList list delete index</span><br></pre></td></tr></table></figure>\n<h3 id=\"删除Controller\"><a href=\"#删除Controller\" class=\"headerlink\" title=\"删除Controller\"></a>删除Controller</h3><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rails d controller TodoList list delete index</span><br></pre></td></tr></table></figure>\n<h3 id=\"生成Model\"><a href=\"#生成Model\" class=\"headerlink\" title=\"生成Model\"></a>生成Model</h3><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rails g model User <span class=\"symbol\">name:</span>string <span class=\"symbol\">email:</span>string</span><br></pre></td></tr></table></figure>\n<h3 id=\"删除Model\"><a href=\"#删除Model\" class=\"headerlink\" title=\"删除Model\"></a>删除Model</h3><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rails d model User <span class=\"symbol\">name:</span>string <span class=\"symbol\">email:</span>string</span><br></pre></td></tr></table></figure>\n<h3 id=\"添加字段到表\"><a href=\"#添加字段到表\" class=\"headerlink\" title=\"添加字段到表\"></a>添加字段到表</h3><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">“rails generate migration add_password_digest_to_users <span class=\"symbol\">password_digest:</span>string”</span><br></pre></td></tr></table></figure>\n<h3 id=\"根据Model生成数据库表\"><a href=\"#根据Model生成数据库表\" class=\"headerlink\" title=\"根据Model生成数据库表\"></a>根据Model生成数据库表</h3><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rake <span class=\"symbol\">db:</span>migrate</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p>(摘录来自: persie. “Ruby on Rails 教程”)</p>\n<h3 id=\"short-key\"><a href=\"#short-key\" class=\"headerlink\" title=\"short key\"></a>short key</h3><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">g   generate</span><br><span class=\"line\">d   destory</span><br><span class=\"line\">s   server</span><br></pre></td></tr></table></figure>\n<h3 id=\"脚手架以及一些常用的变量类型\"><a href=\"#脚手架以及一些常用的变量类型\" class=\"headerlink\" title=\"脚手架以及一些常用的变量类型\"></a>脚手架以及一些常用的变量类型</h3><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rails g scaffold user <span class=\"symbol\">name:</span>string <span class=\"symbol\">age:</span>int <span class=\"symbol\">email:</span>string <span class=\"symbol\">description:</span>text <span class=\"symbol\">cash:</span>float</span><br></pre></td></tr></table></figure>\n<h3 id=\"删除脚手架生成的代码\"><a href=\"#删除脚手架生成的代码\" class=\"headerlink\" title=\"删除脚手架生成的代码\"></a>删除脚手架生成的代码</h3><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rails d scaffold Users</span><br></pre></td></tr></table></figure>\n<h3 id=\"生成Controller与action\"><a href=\"#生成Controller与action\" class=\"headerlink\" title=\"生成Controller与action\"></a>生成Controller与action</h3><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rails g controller TodoList list delete index</span><br></pre></td></tr></table></figure>\n<h3 id=\"删除Controller\"><a href=\"#删除Controller\" class=\"headerlink\" title=\"删除Controller\"></a>删除Controller</h3><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rails d controller TodoList list delete index</span><br></pre></td></tr></table></figure>\n<h3 id=\"生成Model\"><a href=\"#生成Model\" class=\"headerlink\" title=\"生成Model\"></a>生成Model</h3><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rails g model User <span class=\"symbol\">name:</span>string <span class=\"symbol\">email:</span>string</span><br></pre></td></tr></table></figure>\n<h3 id=\"删除Model\"><a href=\"#删除Model\" class=\"headerlink\" title=\"删除Model\"></a>删除Model</h3><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rails d model User <span class=\"symbol\">name:</span>string <span class=\"symbol\">email:</span>string</span><br></pre></td></tr></table></figure>\n<h3 id=\"添加字段到表\"><a href=\"#添加字段到表\" class=\"headerlink\" title=\"添加字段到表\"></a>添加字段到表</h3><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">“rails generate migration add_password_digest_to_users <span class=\"symbol\">password_digest:</span>string”</span><br></pre></td></tr></table></figure>\n<h3 id=\"根据Model生成数据库表\"><a href=\"#根据Model生成数据库表\" class=\"headerlink\" title=\"根据Model生成数据库表\"></a>根据Model生成数据库表</h3><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rake <span class=\"symbol\">db:</span>migrate</span><br></pre></td></tr></table></figure>\n"},{"title":"关于Xcode单元测试(XCTest)的一些总结","date":"2015-05-04T02:58:17.000Z","_content":"\n单元测试可以让我们快速检测项目接口与一些功能的可用性，这次编写了大量的单元测试，让我对之前的一些疑惑有了一个透彻的理解\n\n- 单元测试中，可以直接import我们项目中的类\n- 想要执行的方法，必须使用test开头，testLogin会被执行，userLogin这样的方法名不会被执行\n- 单元测试没有头文件，一些变量声明，写在interface里面\n- 对于一些变量的初始化，放到setup里面进行\n\n<!--more-->\n\n## 一个简单的单元测试类\n##### 创建单元测试类\n![](http://ww1.sinaimg.cn/large/6e8de9dbgw1ers0n47wtrj20ka0bygnf.jpg)\n\n#### 一个简单的类\n```ruby\n#import <UIKit/UIKit.h>\n#import <XCTest/XCTest.h>\n#import \"LoginService.h\" //引入自定义的类\n\n@interface HelloTest : XCTestCase\n{\n\t//变量声明\t\t\n    NSInteger count;\n    LoginService *loginService;\n}\n\n@end\n\n@implementation HelloTest\n\n- (void)setUp {\n    [super setUp];\n\n    //初始化\n    count = 5;\n\n    loginService = [[LoginService alloc] init];\n\n}\n\n- (void)tearDown {\n\n    [super tearDown];\n}\n\n- (void)testCount\n{\n    XCTAssertEqual(count, 6,@\"count不等于6,count的值为:%ld\",(long)count);\n}\n\n- (void)testExample {\n\n    XCTAssert(YES, @\"Pass\");\n}\n\n- (void)testPerformanceExample {\n\n    [self measureBlock:^{\n\n    }];\n}\n\n@end\n```\n\n**cmd+U** 进行执行后会提示我们如下错误,测试通过的方法，会有绿色对号，失败的方法会显示我们写的错误提示\n![](http://ww1.sinaimg.cn/large/6e8de9dbgw1ers0vuinl5j20p405jq49.jpg)\n\n## XCTest的测试方法大都类似\n\n#### XCTAssertGreaterThan\n```ruby\n#判断count是否大于8\nXCTAssertGreaterThan(count, 8,@\"count is not greater than 8\");\n```\n#### XCTAssertNotEqual\n```ruby\n#判断是否不相等\nXCTAssertNotEqual(count, 5,@\"they are equal\");\n```\n\n#### XCTAssertTrue\n```ruby\n#判断某个表达式是否成立\nXCTAssertTrue(count>3,@\"count greater than 3\");\n```\n运行结果\n![](http://ww4.sinaimg.cn/large/6e8de9dbgw1ers16kf52bj210v04jn03.jpg)\n\n\n## 对于异步方法的测试(Asynchronous Testing)\n对于block等异步方式执行的方法，在测试的时候，我们要使用，一般的做法都是延迟，**等待block执行完毕再进行检查**\n\n##### 主要步骤\n- 声明一个XCTestExpectation\n- 在block中使用fulfill抛出错误\n- waitForExpectationsWithTimeout进行一个延迟时间设定\n\n\n```ruby\n#import <XCTest/XCTestCase+AsynchronousTesting.h>\n```\n\n比如上面的loginService\n\n```ruby   \n- (void)testLogin\n{\n\t##声明一个Exception\n    XCTestExpectation *loginException = [self expectationWithDescription:@\"loginError\"];\n\n    [loginService sendLoginWithMobile:TEST_MOBILE andCode:TEST_CODE onComplete:^(NSDictionary *jsonDict, NSString *jsonString) {\n        MStatus *status = [loginService convertToMStatus:jsonDict];\n        XCTAssertEqual(status.returncode, 0, @\"login error\");\n\n        //抛出错误\n        [loginException fulfill];\n    } onFailure:^(NSString *msg) {\n        XCTFail(@\"login error:%@\",msg);\n\n        //抛出错误\n        [loginException fulfill];\n    }];\n\n    //延迟两秒执行\n    [self waitForExpectationsWithTimeout:2 handler:^(NSError *error) {\n        XCTFail(@\"time out:%@\",error);\n    }];\n}\n```\n","source":"_posts/2015-05-04-something-about-xctest.markdown","raw":"title: 关于Xcode单元测试(XCTest)的一些总结\ndate: 2015-05-04 10:58:17\ncategories: iOS\n---\n\n单元测试可以让我们快速检测项目接口与一些功能的可用性，这次编写了大量的单元测试，让我对之前的一些疑惑有了一个透彻的理解\n\n- 单元测试中，可以直接import我们项目中的类\n- 想要执行的方法，必须使用test开头，testLogin会被执行，userLogin这样的方法名不会被执行\n- 单元测试没有头文件，一些变量声明，写在interface里面\n- 对于一些变量的初始化，放到setup里面进行\n\n<!--more-->\n\n## 一个简单的单元测试类\n##### 创建单元测试类\n![](http://ww1.sinaimg.cn/large/6e8de9dbgw1ers0n47wtrj20ka0bygnf.jpg)\n\n#### 一个简单的类\n```ruby\n#import <UIKit/UIKit.h>\n#import <XCTest/XCTest.h>\n#import \"LoginService.h\" //引入自定义的类\n\n@interface HelloTest : XCTestCase\n{\n\t//变量声明\t\t\n    NSInteger count;\n    LoginService *loginService;\n}\n\n@end\n\n@implementation HelloTest\n\n- (void)setUp {\n    [super setUp];\n\n    //初始化\n    count = 5;\n\n    loginService = [[LoginService alloc] init];\n\n}\n\n- (void)tearDown {\n\n    [super tearDown];\n}\n\n- (void)testCount\n{\n    XCTAssertEqual(count, 6,@\"count不等于6,count的值为:%ld\",(long)count);\n}\n\n- (void)testExample {\n\n    XCTAssert(YES, @\"Pass\");\n}\n\n- (void)testPerformanceExample {\n\n    [self measureBlock:^{\n\n    }];\n}\n\n@end\n```\n\n**cmd+U** 进行执行后会提示我们如下错误,测试通过的方法，会有绿色对号，失败的方法会显示我们写的错误提示\n![](http://ww1.sinaimg.cn/large/6e8de9dbgw1ers0vuinl5j20p405jq49.jpg)\n\n## XCTest的测试方法大都类似\n\n#### XCTAssertGreaterThan\n```ruby\n#判断count是否大于8\nXCTAssertGreaterThan(count, 8,@\"count is not greater than 8\");\n```\n#### XCTAssertNotEqual\n```ruby\n#判断是否不相等\nXCTAssertNotEqual(count, 5,@\"they are equal\");\n```\n\n#### XCTAssertTrue\n```ruby\n#判断某个表达式是否成立\nXCTAssertTrue(count>3,@\"count greater than 3\");\n```\n运行结果\n![](http://ww4.sinaimg.cn/large/6e8de9dbgw1ers16kf52bj210v04jn03.jpg)\n\n\n## 对于异步方法的测试(Asynchronous Testing)\n对于block等异步方式执行的方法，在测试的时候，我们要使用，一般的做法都是延迟，**等待block执行完毕再进行检查**\n\n##### 主要步骤\n- 声明一个XCTestExpectation\n- 在block中使用fulfill抛出错误\n- waitForExpectationsWithTimeout进行一个延迟时间设定\n\n\n```ruby\n#import <XCTest/XCTestCase+AsynchronousTesting.h>\n```\n\n比如上面的loginService\n\n```ruby   \n- (void)testLogin\n{\n\t##声明一个Exception\n    XCTestExpectation *loginException = [self expectationWithDescription:@\"loginError\"];\n\n    [loginService sendLoginWithMobile:TEST_MOBILE andCode:TEST_CODE onComplete:^(NSDictionary *jsonDict, NSString *jsonString) {\n        MStatus *status = [loginService convertToMStatus:jsonDict];\n        XCTAssertEqual(status.returncode, 0, @\"login error\");\n\n        //抛出错误\n        [loginException fulfill];\n    } onFailure:^(NSString *msg) {\n        XCTFail(@\"login error:%@\",msg);\n\n        //抛出错误\n        [loginException fulfill];\n    }];\n\n    //延迟两秒执行\n    [self waitForExpectationsWithTimeout:2 handler:^(NSError *error) {\n        XCTFail(@\"time out:%@\",error);\n    }];\n}\n```\n","slug":"something-about-xctest","published":1,"updated":"2020-01-01T02:23:42.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clb0uhkcu001fo63k7sf780vv","content":"<p>单元测试可以让我们快速检测项目接口与一些功能的可用性，这次编写了大量的单元测试，让我对之前的一些疑惑有了一个透彻的理解</p>\n<ul>\n<li>单元测试中，可以直接import我们项目中的类</li>\n<li>想要执行的方法，必须使用test开头，testLogin会被执行，userLogin这样的方法名不会被执行</li>\n<li>单元测试没有头文件，一些变量声明，写在interface里面</li>\n<li>对于一些变量的初始化，放到setup里面进行</li>\n</ul>\n<a id=\"more\"></a>\n<h2 id=\"一个简单的单元测试类\"><a href=\"#一个简单的单元测试类\" class=\"headerlink\" title=\"一个简单的单元测试类\"></a>一个简单的单元测试类</h2><h5 id=\"创建单元测试类\"><a href=\"#创建单元测试类\" class=\"headerlink\" title=\"创建单元测试类\"></a>创建单元测试类</h5><p><img src=\"http://ww1.sinaimg.cn/large/6e8de9dbgw1ers0n47wtrj20ka0bygnf.jpg\" alt></p>\n<h4 id=\"一个简单的类\"><a href=\"#一个简单的类\" class=\"headerlink\" title=\"一个简单的类\"></a>一个简单的类</h4><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#import &lt;UIKit/UIKit.h&gt;</span></span><br><span class=\"line\"><span class=\"comment\">#import &lt;XCTest/XCTest.h&gt;</span></span><br><span class=\"line\"><span class=\"comment\">#import \"LoginService.h\" //引入自定义的类</span></span><br><span class=\"line\"></span><br><span class=\"line\">@interface HelloTest : XCTestCase</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t/<span class=\"regexp\">/变量声明\t\t</span></span><br><span class=\"line\"><span class=\"regexp\">    NSInteger count;</span></span><br><span class=\"line\"><span class=\"regexp\">    LoginService *loginService;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">@end</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">@implementation HelloTest</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">- (void)setUp &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">    [super setUp];</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">    /</span><span class=\"regexp\">/初始化</span></span><br><span class=\"line\"><span class=\"regexp\">    count = 5;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">    loginService = [[LoginService alloc] init];</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">- (void)tearDown &#123;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">    [super tearDown];</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">- (void)testCount</span></span><br><span class=\"line\"><span class=\"regexp\">&#123;</span></span><br><span class=\"line\"><span class=\"regexp\">    XCTAssertEqual(count, 6,@\"count不等于6,count的值为:%ld\",(long)count);</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">- (void)testExample &#123;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">    XCTAssert(YES, @\"Pass\");</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">- (void)testPerformanceExample &#123;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">    [self measureBlock:^&#123;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;];</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">@end</span></span><br></pre></td></tr></table></figure>\n<p><strong>cmd+U</strong> 进行执行后会提示我们如下错误,测试通过的方法，会有绿色对号，失败的方法会显示我们写的错误提示<br><img src=\"http://ww1.sinaimg.cn/large/6e8de9dbgw1ers0vuinl5j20p405jq49.jpg\" alt></p>\n<h2 id=\"XCTest的测试方法大都类似\"><a href=\"#XCTest的测试方法大都类似\" class=\"headerlink\" title=\"XCTest的测试方法大都类似\"></a>XCTest的测试方法大都类似</h2><h4 id=\"XCTAssertGreaterThan\"><a href=\"#XCTAssertGreaterThan\" class=\"headerlink\" title=\"XCTAssertGreaterThan\"></a>XCTAssertGreaterThan</h4><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#判断count是否大于8</span></span><br><span class=\"line\">XCTAssertGreaterThan(count, <span class=\"number\">8</span>,@<span class=\"string\">\"count is not greater than 8\"</span>);</span><br></pre></td></tr></table></figure>\n<h4 id=\"XCTAssertNotEqual\"><a href=\"#XCTAssertNotEqual\" class=\"headerlink\" title=\"XCTAssertNotEqual\"></a>XCTAssertNotEqual</h4><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#判断是否不相等</span></span><br><span class=\"line\">XCTAssertNotEqual(count, <span class=\"number\">5</span>,@<span class=\"string\">\"they are equal\"</span>);</span><br></pre></td></tr></table></figure>\n<h4 id=\"XCTAssertTrue\"><a href=\"#XCTAssertTrue\" class=\"headerlink\" title=\"XCTAssertTrue\"></a>XCTAssertTrue</h4><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#判断某个表达式是否成立</span></span><br><span class=\"line\">XCTAssertTrue(count&gt;<span class=\"number\">3</span>,@<span class=\"string\">\"count greater than 3\"</span>);</span><br></pre></td></tr></table></figure>\n<p>运行结果<br><img src=\"http://ww4.sinaimg.cn/large/6e8de9dbgw1ers16kf52bj210v04jn03.jpg\" alt></p>\n<h2 id=\"对于异步方法的测试-Asynchronous-Testing\"><a href=\"#对于异步方法的测试-Asynchronous-Testing\" class=\"headerlink\" title=\"对于异步方法的测试(Asynchronous Testing)\"></a>对于异步方法的测试(Asynchronous Testing)</h2><p>对于block等异步方式执行的方法，在测试的时候，我们要使用，一般的做法都是延迟，<strong>等待block执行完毕再进行检查</strong></p>\n<h5 id=\"主要步骤\"><a href=\"#主要步骤\" class=\"headerlink\" title=\"主要步骤\"></a>主要步骤</h5><ul>\n<li>声明一个XCTestExpectation</li>\n<li>在block中使用fulfill抛出错误</li>\n<li>waitForExpectationsWithTimeout进行一个延迟时间设定</li>\n</ul>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#import &lt;XCTest/XCTestCase+AsynchronousTesting.h&gt;</span></span><br></pre></td></tr></table></figure>\n<p>比如上面的loginService</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- (void)testLogin</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"comment\">##声明一个Exception</span></span><br><span class=\"line\">    XCTestExpectation *loginException = [<span class=\"keyword\">self</span> <span class=\"symbol\">expectationWithDescription:</span>@<span class=\"string\">\"loginError\"</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">    [loginService <span class=\"symbol\">sendLoginWithMobile:</span>TEST_MOBILE <span class=\"symbol\">andCode:</span>TEST_CODE <span class=\"symbol\">onComplete:</span>^(NSDictionary *jsonDict, NSString *jsonString) &#123;</span><br><span class=\"line\">        MStatus *status = [loginService <span class=\"symbol\">convertToMStatus:</span>jsonDict];</span><br><span class=\"line\">        XCTAssertEqual(status.returncode, <span class=\"number\">0</span>, @<span class=\"string\">\"login error\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        /<span class=\"regexp\">/抛出错误</span></span><br><span class=\"line\"><span class=\"regexp\">        [loginException fulfill];</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125; onFailure:^(NSString *msg) &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">        XCTFail(@\"login error:%@\",msg);</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">        /</span><span class=\"regexp\">/抛出错误</span></span><br><span class=\"line\"><span class=\"regexp\">        [loginException fulfill];</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;];</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">    /</span><span class=\"regexp\">/延迟两秒执行</span></span><br><span class=\"line\"><span class=\"regexp\">    [self waitForExpectationsWithTimeout:2 handler:^(NSError *error) &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">        XCTFail(@\"time out:%@\",error);</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;];</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<p>单元测试可以让我们快速检测项目接口与一些功能的可用性，这次编写了大量的单元测试，让我对之前的一些疑惑有了一个透彻的理解</p>\n<ul>\n<li>单元测试中，可以直接import我们项目中的类</li>\n<li>想要执行的方法，必须使用test开头，testLogin会被执行，userLogin这样的方法名不会被执行</li>\n<li>单元测试没有头文件，一些变量声明，写在interface里面</li>\n<li>对于一些变量的初始化，放到setup里面进行</li>\n</ul>","more":"<h2 id=\"一个简单的单元测试类\"><a href=\"#一个简单的单元测试类\" class=\"headerlink\" title=\"一个简单的单元测试类\"></a>一个简单的单元测试类</h2><h5 id=\"创建单元测试类\"><a href=\"#创建单元测试类\" class=\"headerlink\" title=\"创建单元测试类\"></a>创建单元测试类</h5><p><img src=\"http://ww1.sinaimg.cn/large/6e8de9dbgw1ers0n47wtrj20ka0bygnf.jpg\" alt></p>\n<h4 id=\"一个简单的类\"><a href=\"#一个简单的类\" class=\"headerlink\" title=\"一个简单的类\"></a>一个简单的类</h4><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#import &lt;UIKit/UIKit.h&gt;</span></span><br><span class=\"line\"><span class=\"comment\">#import &lt;XCTest/XCTest.h&gt;</span></span><br><span class=\"line\"><span class=\"comment\">#import \"LoginService.h\" //引入自定义的类</span></span><br><span class=\"line\"></span><br><span class=\"line\">@interface HelloTest : XCTestCase</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t/<span class=\"regexp\">/变量声明\t\t</span></span><br><span class=\"line\"><span class=\"regexp\">    NSInteger count;</span></span><br><span class=\"line\"><span class=\"regexp\">    LoginService *loginService;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">@end</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">@implementation HelloTest</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">- (void)setUp &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">    [super setUp];</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">    /</span><span class=\"regexp\">/初始化</span></span><br><span class=\"line\"><span class=\"regexp\">    count = 5;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">    loginService = [[LoginService alloc] init];</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">- (void)tearDown &#123;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">    [super tearDown];</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">- (void)testCount</span></span><br><span class=\"line\"><span class=\"regexp\">&#123;</span></span><br><span class=\"line\"><span class=\"regexp\">    XCTAssertEqual(count, 6,@\"count不等于6,count的值为:%ld\",(long)count);</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">- (void)testExample &#123;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">    XCTAssert(YES, @\"Pass\");</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">- (void)testPerformanceExample &#123;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">    [self measureBlock:^&#123;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;];</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">@end</span></span><br></pre></td></tr></table></figure>\n<p><strong>cmd+U</strong> 进行执行后会提示我们如下错误,测试通过的方法，会有绿色对号，失败的方法会显示我们写的错误提示<br><img src=\"http://ww1.sinaimg.cn/large/6e8de9dbgw1ers0vuinl5j20p405jq49.jpg\" alt></p>\n<h2 id=\"XCTest的测试方法大都类似\"><a href=\"#XCTest的测试方法大都类似\" class=\"headerlink\" title=\"XCTest的测试方法大都类似\"></a>XCTest的测试方法大都类似</h2><h4 id=\"XCTAssertGreaterThan\"><a href=\"#XCTAssertGreaterThan\" class=\"headerlink\" title=\"XCTAssertGreaterThan\"></a>XCTAssertGreaterThan</h4><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#判断count是否大于8</span></span><br><span class=\"line\">XCTAssertGreaterThan(count, <span class=\"number\">8</span>,@<span class=\"string\">\"count is not greater than 8\"</span>);</span><br></pre></td></tr></table></figure>\n<h4 id=\"XCTAssertNotEqual\"><a href=\"#XCTAssertNotEqual\" class=\"headerlink\" title=\"XCTAssertNotEqual\"></a>XCTAssertNotEqual</h4><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#判断是否不相等</span></span><br><span class=\"line\">XCTAssertNotEqual(count, <span class=\"number\">5</span>,@<span class=\"string\">\"they are equal\"</span>);</span><br></pre></td></tr></table></figure>\n<h4 id=\"XCTAssertTrue\"><a href=\"#XCTAssertTrue\" class=\"headerlink\" title=\"XCTAssertTrue\"></a>XCTAssertTrue</h4><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#判断某个表达式是否成立</span></span><br><span class=\"line\">XCTAssertTrue(count&gt;<span class=\"number\">3</span>,@<span class=\"string\">\"count greater than 3\"</span>);</span><br></pre></td></tr></table></figure>\n<p>运行结果<br><img src=\"http://ww4.sinaimg.cn/large/6e8de9dbgw1ers16kf52bj210v04jn03.jpg\" alt></p>\n<h2 id=\"对于异步方法的测试-Asynchronous-Testing\"><a href=\"#对于异步方法的测试-Asynchronous-Testing\" class=\"headerlink\" title=\"对于异步方法的测试(Asynchronous Testing)\"></a>对于异步方法的测试(Asynchronous Testing)</h2><p>对于block等异步方式执行的方法，在测试的时候，我们要使用，一般的做法都是延迟，<strong>等待block执行完毕再进行检查</strong></p>\n<h5 id=\"主要步骤\"><a href=\"#主要步骤\" class=\"headerlink\" title=\"主要步骤\"></a>主要步骤</h5><ul>\n<li>声明一个XCTestExpectation</li>\n<li>在block中使用fulfill抛出错误</li>\n<li>waitForExpectationsWithTimeout进行一个延迟时间设定</li>\n</ul>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#import &lt;XCTest/XCTestCase+AsynchronousTesting.h&gt;</span></span><br></pre></td></tr></table></figure>\n<p>比如上面的loginService</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- (void)testLogin</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"comment\">##声明一个Exception</span></span><br><span class=\"line\">    XCTestExpectation *loginException = [<span class=\"keyword\">self</span> <span class=\"symbol\">expectationWithDescription:</span>@<span class=\"string\">\"loginError\"</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">    [loginService <span class=\"symbol\">sendLoginWithMobile:</span>TEST_MOBILE <span class=\"symbol\">andCode:</span>TEST_CODE <span class=\"symbol\">onComplete:</span>^(NSDictionary *jsonDict, NSString *jsonString) &#123;</span><br><span class=\"line\">        MStatus *status = [loginService <span class=\"symbol\">convertToMStatus:</span>jsonDict];</span><br><span class=\"line\">        XCTAssertEqual(status.returncode, <span class=\"number\">0</span>, @<span class=\"string\">\"login error\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        /<span class=\"regexp\">/抛出错误</span></span><br><span class=\"line\"><span class=\"regexp\">        [loginException fulfill];</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125; onFailure:^(NSString *msg) &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">        XCTFail(@\"login error:%@\",msg);</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">        /</span><span class=\"regexp\">/抛出错误</span></span><br><span class=\"line\"><span class=\"regexp\">        [loginException fulfill];</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;];</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">    /</span><span class=\"regexp\">/延迟两秒执行</span></span><br><span class=\"line\"><span class=\"regexp\">    [self waitForExpectationsWithTimeout:2 handler:^(NSError *error) &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">        XCTFail(@\"time out:%@\",error);</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;];</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br></pre></td></tr></table></figure>"},{"layout":"post","title":"Application Transport Security","date":"2015-07-13T01:09:45.000Z","comments":1,"_content":"In Xcode7 You should add follow keys in `Info.plist` to allow the http request\nA detail discuss could fond here\n[https://forums.developer.apple.com/thread/3544](https://forums.developer.apple.com/thread/3544)\n\n```ruby\n<key>NSAppTransportSecurity</key>  \n     <dict>  \n          <key>NSAllowsArbitraryLoads</key><true/>  \n     </dict>  \n```","source":"_posts/2015-07-13-application-transport-security-in-ios9.markdown","raw":"---\nlayout: post\ntitle: \"Application Transport Security\"\ndate: 2015-07-13 09:09:45 +0800\ncomments: true\ncategories: \n---\nIn Xcode7 You should add follow keys in `Info.plist` to allow the http request\nA detail discuss could fond here\n[https://forums.developer.apple.com/thread/3544](https://forums.developer.apple.com/thread/3544)\n\n```ruby\n<key>NSAppTransportSecurity</key>  \n     <dict>  \n          <key>NSAllowsArbitraryLoads</key><true/>  \n     </dict>  \n```","slug":"application-transport-security-in-ios9","published":1,"updated":"2020-01-01T02:23:42.000Z","photos":[],"link":"","_id":"clb0uhkcw001ho63kxzuctq64","content":"<p>In Xcode7 You should add follow keys in <code>Info.plist</code> to allow the http request<br>A detail discuss could fond here<br><a href=\"https://forums.developer.apple.com/thread/3544\" target=\"_blank\" rel=\"noopener\">https://forums.developer.apple.com/thread/3544</a></p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;key&gt;NSAppTransportSecurity&lt;<span class=\"regexp\">/key&gt;  </span></span><br><span class=\"line\"><span class=\"regexp\">     &lt;dict&gt;  </span></span><br><span class=\"line\"><span class=\"regexp\">          &lt;key&gt;NSAllowsArbitraryLoads&lt;/key</span>&gt;&lt;<span class=\"literal\">true</span>/&gt;  </span><br><span class=\"line\">     &lt;<span class=\"regexp\">/dict&gt;</span></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>In Xcode7 You should add follow keys in <code>Info.plist</code> to allow the http request<br>A detail discuss could fond here<br><a href=\"https://forums.developer.apple.com/thread/3544\" target=\"_blank\" rel=\"noopener\">https://forums.developer.apple.com/thread/3544</a></p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;key&gt;NSAppTransportSecurity&lt;<span class=\"regexp\">/key&gt;  </span></span><br><span class=\"line\"><span class=\"regexp\">     &lt;dict&gt;  </span></span><br><span class=\"line\"><span class=\"regexp\">          &lt;key&gt;NSAllowsArbitraryLoads&lt;/key</span>&gt;&lt;<span class=\"literal\">true</span>/&gt;  </span><br><span class=\"line\">     &lt;<span class=\"regexp\">/dict&gt;</span></span><br></pre></td></tr></table></figure>"},{"title":"为什么使用Mantle","date":"2015-10-08T08:06:07.000Z","_content":"\n项目地址: [https://github.com/Mantle/Mantle](https://github.com/Mantle/Mantle)\n\n今年上半年在两个项目中都将Model层替换为Mantle，大大减少了开发中实体转换的时间;选择mantle的初衷是因为看到了大神的blog,里面的应用场景也是在开发中我们经常遇到的情况:\n[iWangKe.me - 为什么唱吧iOS 6.0选择了Mantle](http://www.iwangke.me/2014/10/13/Why-Changba-iOS-choose-Mantle/)\n\n\n## 对比一下\n```json\n# http://bubbler.labs.douban.com/j/user/wheats\n\n{\n  \"homepage\": \"http://www.douban.com/people/wheats\",\n  \"icon\": \"http://img3.douban.com/icon/u46721592-5.jpg\",\n  \"userid\": \"46721592\",\n  \"r\": 0,\n  \"stats\": {\n    \"board\": 0,\n    \"bub\": 0,\n    \"collect\": 0\n  },\n  \"title\": \"welsonla\",\n  \"uid\": \"wheats\"\n}\n\n```\n\n<!--more-->\n\n![](http://ww1.sinaimg.cn/large/6e8de9dbjw1ewtvrr4eyjj20gp0eqjvh.jpg)\n\n![](http://ww1.sinaimg.cn/large/6e8de9dbjw1ewtvsjo0s6j20go0f7whk.jpg)\n\n\n## You should know:\n\n- 使用Mantle需要继承MTLModel\n- 如果需要将实体中的某个字段映射成一个实体或者实体的数组，需要继承MTLJSONSerializing\n- Mantle需要一个字典来讲字典中的字段与实体的字段进行匹配\n\n## 将JSON转换为制定的Model\n\n```ruby\nMDoubanUser *allModel = [MTLJSONAdapter modelOfClass:[MDoubanUser class] fromJSONDictionary:rstlDict] error:nil]\n```\n\n## 将JSON中的数组转换为Model的数组\n\n```ruby\nNSArray *users = [MTLJSONAdapter modelsOfClass:[MDoubanUser class] fromJSONArray:userArray error:nil];\n```\n\n\n## 将某个字段对应到某个实体\n```ruby\n+(NSValueTransformer *)JSONTransformerForKey:(NSString *)key{\n\n  if ([key isEqualToString:@\"stats\"]) {\n      #假设上诉到json中的stats创建了一个单独的实体类为MStats,\n      return [MTLJSONAdapter dictionaryTransformerWithModelClass:[MStats class]];\n  }else if([key isEqualToString:@\"books\"]){\n      #假设中json中有一个books数组，并有对应的实体MBook\n      return return [MTLJSONAdapter arrayTransformerWithModelClass:[MBook class]];;\n  }\n  return nil;\n}\n```\n\n## 自定义转换\n自定义转换只要定义一个字段名+JSONTransformer结尾的方法，就会执行我们自定义的转换,比如时间格式化，对某些字符进行一些操作处理\n\n```ruby\n# 将uid前面加上\"Author\"\n+ (NSValueTransformer *)uidJSONTransformer{\n    return [MTLValueTransformer transformerUsingForwardBlock:^id(NSString *uid, BOOL *success, NSError *__autoreleasing *error) {\n        return [@\"Author: \" stringByAppendingString:uid];\n    }];\n}\n```\n\n## 多个字段对应\n在项目中，经常遇到，接口A返回的用户id字段说uid,接口B返回的用户字段是ID，这种情况我们只需要中Model中将两个字段存到一个数组绑定到同一个属性上就可以了\n\n```ruby\n+ (NSDictionary *)JSONKeyPathsByPropertyKey\n{\n    return @{\n\t\t@\"uid\":@[@\"uid\",@\"ID\"],\n\t\t@\"userid\":@\"userid\",\n\t\t@\"stats\":@\"stats\",\n\t\t@\"title\":@\"title\",\n\t\t@\"r\":@\"r\",\n\t\t@\"homepage\":@\"homepage\",\n\t\t@\"icon\":@\"icon\"\n    };\n}\n```\n\n\n## 将实体中的值封装成一个dictionary，方便接口传输\n\n```ruby\n#使用全部的字段\nNSDictionary *params = [user dictionaryValue];\n\n#使用部分的字段\nNSDictionary *params = [address dictionaryWithValuesForKeys:@[@\"uid\",@\"stats\",@\"homepage\"]];\n```\n\n## 最后\n\n在项目的开发过程中，我抽时间做了一个小工具，可以方便的将JSON转换为Mantle支持的Model类，希望对你们有帮助\n\nSource: https://github.com/TimeBots/ModelBot\nDownload: [ModelBot Download](https://github.com/TimeBots/ModelBot/releases/download/0.3.0/ModelBot.0.3.0.zip)\n","source":"_posts/2015-10-09-why-mantle.markdown","raw":"title: \"为什么使用Mantle\"\ndate: 2015-10-08 16:06:07\ncategories: iOS\n---\n\n项目地址: [https://github.com/Mantle/Mantle](https://github.com/Mantle/Mantle)\n\n今年上半年在两个项目中都将Model层替换为Mantle，大大减少了开发中实体转换的时间;选择mantle的初衷是因为看到了大神的blog,里面的应用场景也是在开发中我们经常遇到的情况:\n[iWangKe.me - 为什么唱吧iOS 6.0选择了Mantle](http://www.iwangke.me/2014/10/13/Why-Changba-iOS-choose-Mantle/)\n\n\n## 对比一下\n```json\n# http://bubbler.labs.douban.com/j/user/wheats\n\n{\n  \"homepage\": \"http://www.douban.com/people/wheats\",\n  \"icon\": \"http://img3.douban.com/icon/u46721592-5.jpg\",\n  \"userid\": \"46721592\",\n  \"r\": 0,\n  \"stats\": {\n    \"board\": 0,\n    \"bub\": 0,\n    \"collect\": 0\n  },\n  \"title\": \"welsonla\",\n  \"uid\": \"wheats\"\n}\n\n```\n\n<!--more-->\n\n![](http://ww1.sinaimg.cn/large/6e8de9dbjw1ewtvrr4eyjj20gp0eqjvh.jpg)\n\n![](http://ww1.sinaimg.cn/large/6e8de9dbjw1ewtvsjo0s6j20go0f7whk.jpg)\n\n\n## You should know:\n\n- 使用Mantle需要继承MTLModel\n- 如果需要将实体中的某个字段映射成一个实体或者实体的数组，需要继承MTLJSONSerializing\n- Mantle需要一个字典来讲字典中的字段与实体的字段进行匹配\n\n## 将JSON转换为制定的Model\n\n```ruby\nMDoubanUser *allModel = [MTLJSONAdapter modelOfClass:[MDoubanUser class] fromJSONDictionary:rstlDict] error:nil]\n```\n\n## 将JSON中的数组转换为Model的数组\n\n```ruby\nNSArray *users = [MTLJSONAdapter modelsOfClass:[MDoubanUser class] fromJSONArray:userArray error:nil];\n```\n\n\n## 将某个字段对应到某个实体\n```ruby\n+(NSValueTransformer *)JSONTransformerForKey:(NSString *)key{\n\n  if ([key isEqualToString:@\"stats\"]) {\n      #假设上诉到json中的stats创建了一个单独的实体类为MStats,\n      return [MTLJSONAdapter dictionaryTransformerWithModelClass:[MStats class]];\n  }else if([key isEqualToString:@\"books\"]){\n      #假设中json中有一个books数组，并有对应的实体MBook\n      return return [MTLJSONAdapter arrayTransformerWithModelClass:[MBook class]];;\n  }\n  return nil;\n}\n```\n\n## 自定义转换\n自定义转换只要定义一个字段名+JSONTransformer结尾的方法，就会执行我们自定义的转换,比如时间格式化，对某些字符进行一些操作处理\n\n```ruby\n# 将uid前面加上\"Author\"\n+ (NSValueTransformer *)uidJSONTransformer{\n    return [MTLValueTransformer transformerUsingForwardBlock:^id(NSString *uid, BOOL *success, NSError *__autoreleasing *error) {\n        return [@\"Author: \" stringByAppendingString:uid];\n    }];\n}\n```\n\n## 多个字段对应\n在项目中，经常遇到，接口A返回的用户id字段说uid,接口B返回的用户字段是ID，这种情况我们只需要中Model中将两个字段存到一个数组绑定到同一个属性上就可以了\n\n```ruby\n+ (NSDictionary *)JSONKeyPathsByPropertyKey\n{\n    return @{\n\t\t@\"uid\":@[@\"uid\",@\"ID\"],\n\t\t@\"userid\":@\"userid\",\n\t\t@\"stats\":@\"stats\",\n\t\t@\"title\":@\"title\",\n\t\t@\"r\":@\"r\",\n\t\t@\"homepage\":@\"homepage\",\n\t\t@\"icon\":@\"icon\"\n    };\n}\n```\n\n\n## 将实体中的值封装成一个dictionary，方便接口传输\n\n```ruby\n#使用全部的字段\nNSDictionary *params = [user dictionaryValue];\n\n#使用部分的字段\nNSDictionary *params = [address dictionaryWithValuesForKeys:@[@\"uid\",@\"stats\",@\"homepage\"]];\n```\n\n## 最后\n\n在项目的开发过程中，我抽时间做了一个小工具，可以方便的将JSON转换为Mantle支持的Model类，希望对你们有帮助\n\nSource: https://github.com/TimeBots/ModelBot\nDownload: [ModelBot Download](https://github.com/TimeBots/ModelBot/releases/download/0.3.0/ModelBot.0.3.0.zip)\n","slug":"why-mantle","published":1,"updated":"2020-01-01T02:23:42.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clb0uhkcy001ko63kuoisni4u","content":"<p>项目地址: <a href=\"https://github.com/Mantle/Mantle\" target=\"_blank\" rel=\"noopener\">https://github.com/Mantle/Mantle</a></p>\n<p>今年上半年在两个项目中都将Model层替换为Mantle，大大减少了开发中实体转换的时间;选择mantle的初衷是因为看到了大神的blog,里面的应用场景也是在开发中我们经常遇到的情况:<br><a href=\"http://www.iwangke.me/2014/10/13/Why-Changba-iOS-choose-Mantle/\" target=\"_blank\" rel=\"noopener\">iWangKe.me - 为什么唱吧iOS 6.0选择了Mantle</a></p>\n<h2 id=\"对比一下\"><a href=\"#对比一下\" class=\"headerlink\" title=\"对比一下\"></a>对比一下</h2><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># http://bubbler.labs.douban.com/j/user/wheats</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">\"homepage\"</span>: <span class=\"string\">\"http://www.douban.com/people/wheats\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"icon\"</span>: <span class=\"string\">\"http://img3.douban.com/icon/u46721592-5.jpg\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"userid\"</span>: <span class=\"string\">\"46721592\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"r\"</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"stats\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"board\"</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"bub\"</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"collect\"</span>: <span class=\"number\">0</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">\"title\"</span>: <span class=\"string\">\"welsonla\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"uid\"</span>: <span class=\"string\">\"wheats\"</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<p><img src=\"http://ww1.sinaimg.cn/large/6e8de9dbjw1ewtvrr4eyjj20gp0eqjvh.jpg\" alt></p>\n<p><img src=\"http://ww1.sinaimg.cn/large/6e8de9dbjw1ewtvsjo0s6j20go0f7whk.jpg\" alt></p>\n<h2 id=\"You-should-know\"><a href=\"#You-should-know\" class=\"headerlink\" title=\"You should know:\"></a>You should know:</h2><ul>\n<li>使用Mantle需要继承MTLModel</li>\n<li>如果需要将实体中的某个字段映射成一个实体或者实体的数组，需要继承MTLJSONSerializing</li>\n<li>Mantle需要一个字典来讲字典中的字段与实体的字段进行匹配</li>\n</ul>\n<h2 id=\"将JSON转换为制定的Model\"><a href=\"#将JSON转换为制定的Model\" class=\"headerlink\" title=\"将JSON转换为制定的Model\"></a>将JSON转换为制定的Model</h2><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MDoubanUser *allModel = [MTLJSONAdapter <span class=\"symbol\">modelOfClass:</span>[MDoubanUser <span class=\"class\"><span class=\"keyword\">class</span>] <span class=\"title\">fromJSONDictionary</span>:<span class=\"title\">rstlDict</span>] <span class=\"title\">error</span>:<span class=\"title\">nil</span>]</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"将JSON中的数组转换为Model的数组\"><a href=\"#将JSON中的数组转换为Model的数组\" class=\"headerlink\" title=\"将JSON中的数组转换为Model的数组\"></a>将JSON中的数组转换为Model的数组</h2><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">NSArray *users = [MTLJSONAdapter <span class=\"symbol\">modelsOfClass:</span>[MDoubanUser <span class=\"class\"><span class=\"keyword\">class</span>] <span class=\"title\">fromJSONArray</span>:<span class=\"title\">userArray</span> <span class=\"title\">error</span>:<span class=\"title\">nil</span>];</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"将某个字段对应到某个实体\"><a href=\"#将某个字段对应到某个实体\" class=\"headerlink\" title=\"将某个字段对应到某个实体\"></a>将某个字段对应到某个实体</h2><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">+(NSValueTransformer *)<span class=\"symbol\">JSONTransformerForKey:</span>(NSString *)key&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> ([key <span class=\"symbol\">isEqualToString:</span>@<span class=\"string\">\"stats\"</span>]) &#123;</span><br><span class=\"line\">      <span class=\"comment\">#假设上诉到json中的stats创建了一个单独的实体类为MStats,</span></span><br><span class=\"line\">      <span class=\"keyword\">return</span> [MTLJSONAdapter <span class=\"symbol\">dictionaryTransformerWithModelClass:</span>[MStats <span class=\"class\"><span class=\"keyword\">class</span>]];</span></span><br><span class=\"line\">  &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>([key <span class=\"symbol\">isEqualToString:</span>@<span class=\"string\">\"books\"</span>])&#123;</span><br><span class=\"line\">      <span class=\"comment\">#假设中json中有一个books数组，并有对应的实体MBook</span></span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">return</span> [MTLJSONAdapter <span class=\"symbol\">arrayTransformerWithModelClass:</span>[MBook <span class=\"class\"><span class=\"keyword\">class</span>]];</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">nil</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"自定义转换\"><a href=\"#自定义转换\" class=\"headerlink\" title=\"自定义转换\"></a>自定义转换</h2><p>自定义转换只要定义一个字段名+JSONTransformer结尾的方法，就会执行我们自定义的转换,比如时间格式化，对某些字符进行一些操作处理</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 将uid前面加上\"Author\"</span></span><br><span class=\"line\">+ (NSValueTransformer *)uidJSONTransformer&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> [MTLValueTransformer <span class=\"symbol\">transformerUsingForwardBlock:</span>^id(NSString *uid, BOOL *success, NSError *__autoreleasing *error) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> [@<span class=\"string\">\"Author: \"</span> <span class=\"symbol\">stringByAppendingString:</span>uid];</span><br><span class=\"line\">    &#125;];</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"多个字段对应\"><a href=\"#多个字段对应\" class=\"headerlink\" title=\"多个字段对应\"></a>多个字段对应</h2><p>在项目中，经常遇到，接口A返回的用户id字段说uid,接口B返回的用户字段是ID，这种情况我们只需要中Model中将两个字段存到一个数组绑定到同一个属性上就可以了</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">+ (NSDictionary *)JSONKeyPathsByPropertyKey</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> @&#123;</span><br><span class=\"line\">\t\t@<span class=\"string\">\"uid\"</span><span class=\"symbol\">:</span>@[@<span class=\"string\">\"uid\"</span>,@<span class=\"string\">\"ID\"</span>],</span><br><span class=\"line\">\t\t@<span class=\"string\">\"userid\"</span><span class=\"symbol\">:</span>@<span class=\"string\">\"userid\"</span>,</span><br><span class=\"line\">\t\t@<span class=\"string\">\"stats\"</span><span class=\"symbol\">:</span>@<span class=\"string\">\"stats\"</span>,</span><br><span class=\"line\">\t\t@<span class=\"string\">\"title\"</span><span class=\"symbol\">:</span>@<span class=\"string\">\"title\"</span>,</span><br><span class=\"line\">\t\t@<span class=\"string\">\"r\"</span><span class=\"symbol\">:</span>@<span class=\"string\">\"r\"</span>,</span><br><span class=\"line\">\t\t@<span class=\"string\">\"homepage\"</span><span class=\"symbol\">:</span>@<span class=\"string\">\"homepage\"</span>,</span><br><span class=\"line\">\t\t@<span class=\"string\">\"icon\"</span><span class=\"symbol\">:</span>@<span class=\"string\">\"icon\"</span></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"将实体中的值封装成一个dictionary，方便接口传输\"><a href=\"#将实体中的值封装成一个dictionary，方便接口传输\" class=\"headerlink\" title=\"将实体中的值封装成一个dictionary，方便接口传输\"></a>将实体中的值封装成一个dictionary，方便接口传输</h2><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#使用全部的字段</span></span><br><span class=\"line\">NSDictionary *params = [user dictionaryValue];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#使用部分的字段</span></span><br><span class=\"line\">NSDictionary *params = [address <span class=\"symbol\">dictionaryWithValuesForKeys:</span>@[@<span class=\"string\">\"uid\"</span>,@<span class=\"string\">\"stats\"</span>,@<span class=\"string\">\"homepage\"</span>]];</span><br></pre></td></tr></table></figure>\n<h2 id=\"最后\"><a href=\"#最后\" class=\"headerlink\" title=\"最后\"></a>最后</h2><p>在项目的开发过程中，我抽时间做了一个小工具，可以方便的将JSON转换为Mantle支持的Model类，希望对你们有帮助</p>\n<p>Source: <a href=\"https://github.com/TimeBots/ModelBot\" target=\"_blank\" rel=\"noopener\">https://github.com/TimeBots/ModelBot</a><br>Download: <a href=\"https://github.com/TimeBots/ModelBot/releases/download/0.3.0/ModelBot.0.3.0.zip\" target=\"_blank\" rel=\"noopener\">ModelBot Download</a></p>\n","site":{"data":{}},"excerpt":"<p>项目地址: <a href=\"https://github.com/Mantle/Mantle\" target=\"_blank\" rel=\"noopener\">https://github.com/Mantle/Mantle</a></p>\n<p>今年上半年在两个项目中都将Model层替换为Mantle，大大减少了开发中实体转换的时间;选择mantle的初衷是因为看到了大神的blog,里面的应用场景也是在开发中我们经常遇到的情况:<br><a href=\"http://www.iwangke.me/2014/10/13/Why-Changba-iOS-choose-Mantle/\" target=\"_blank\" rel=\"noopener\">iWangKe.me - 为什么唱吧iOS 6.0选择了Mantle</a></p>\n<h2 id=\"对比一下\"><a href=\"#对比一下\" class=\"headerlink\" title=\"对比一下\"></a>对比一下</h2><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># http://bubbler.labs.douban.com/j/user/wheats</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">\"homepage\"</span>: <span class=\"string\">\"http://www.douban.com/people/wheats\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"icon\"</span>: <span class=\"string\">\"http://img3.douban.com/icon/u46721592-5.jpg\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"userid\"</span>: <span class=\"string\">\"46721592\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"r\"</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"stats\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"board\"</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"bub\"</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"collect\"</span>: <span class=\"number\">0</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">\"title\"</span>: <span class=\"string\">\"welsonla\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"uid\"</span>: <span class=\"string\">\"wheats\"</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","more":"<p><img src=\"http://ww1.sinaimg.cn/large/6e8de9dbjw1ewtvrr4eyjj20gp0eqjvh.jpg\" alt></p>\n<p><img src=\"http://ww1.sinaimg.cn/large/6e8de9dbjw1ewtvsjo0s6j20go0f7whk.jpg\" alt></p>\n<h2 id=\"You-should-know\"><a href=\"#You-should-know\" class=\"headerlink\" title=\"You should know:\"></a>You should know:</h2><ul>\n<li>使用Mantle需要继承MTLModel</li>\n<li>如果需要将实体中的某个字段映射成一个实体或者实体的数组，需要继承MTLJSONSerializing</li>\n<li>Mantle需要一个字典来讲字典中的字段与实体的字段进行匹配</li>\n</ul>\n<h2 id=\"将JSON转换为制定的Model\"><a href=\"#将JSON转换为制定的Model\" class=\"headerlink\" title=\"将JSON转换为制定的Model\"></a>将JSON转换为制定的Model</h2><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MDoubanUser *allModel = [MTLJSONAdapter <span class=\"symbol\">modelOfClass:</span>[MDoubanUser <span class=\"class\"><span class=\"keyword\">class</span>] <span class=\"title\">fromJSONDictionary</span>:<span class=\"title\">rstlDict</span>] <span class=\"title\">error</span>:<span class=\"title\">nil</span>]</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"将JSON中的数组转换为Model的数组\"><a href=\"#将JSON中的数组转换为Model的数组\" class=\"headerlink\" title=\"将JSON中的数组转换为Model的数组\"></a>将JSON中的数组转换为Model的数组</h2><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">NSArray *users = [MTLJSONAdapter <span class=\"symbol\">modelsOfClass:</span>[MDoubanUser <span class=\"class\"><span class=\"keyword\">class</span>] <span class=\"title\">fromJSONArray</span>:<span class=\"title\">userArray</span> <span class=\"title\">error</span>:<span class=\"title\">nil</span>];</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"将某个字段对应到某个实体\"><a href=\"#将某个字段对应到某个实体\" class=\"headerlink\" title=\"将某个字段对应到某个实体\"></a>将某个字段对应到某个实体</h2><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">+(NSValueTransformer *)<span class=\"symbol\">JSONTransformerForKey:</span>(NSString *)key&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> ([key <span class=\"symbol\">isEqualToString:</span>@<span class=\"string\">\"stats\"</span>]) &#123;</span><br><span class=\"line\">      <span class=\"comment\">#假设上诉到json中的stats创建了一个单独的实体类为MStats,</span></span><br><span class=\"line\">      <span class=\"keyword\">return</span> [MTLJSONAdapter <span class=\"symbol\">dictionaryTransformerWithModelClass:</span>[MStats <span class=\"class\"><span class=\"keyword\">class</span>]];</span></span><br><span class=\"line\">  &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>([key <span class=\"symbol\">isEqualToString:</span>@<span class=\"string\">\"books\"</span>])&#123;</span><br><span class=\"line\">      <span class=\"comment\">#假设中json中有一个books数组，并有对应的实体MBook</span></span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">return</span> [MTLJSONAdapter <span class=\"symbol\">arrayTransformerWithModelClass:</span>[MBook <span class=\"class\"><span class=\"keyword\">class</span>]];</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">nil</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"自定义转换\"><a href=\"#自定义转换\" class=\"headerlink\" title=\"自定义转换\"></a>自定义转换</h2><p>自定义转换只要定义一个字段名+JSONTransformer结尾的方法，就会执行我们自定义的转换,比如时间格式化，对某些字符进行一些操作处理</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 将uid前面加上\"Author\"</span></span><br><span class=\"line\">+ (NSValueTransformer *)uidJSONTransformer&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> [MTLValueTransformer <span class=\"symbol\">transformerUsingForwardBlock:</span>^id(NSString *uid, BOOL *success, NSError *__autoreleasing *error) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> [@<span class=\"string\">\"Author: \"</span> <span class=\"symbol\">stringByAppendingString:</span>uid];</span><br><span class=\"line\">    &#125;];</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"多个字段对应\"><a href=\"#多个字段对应\" class=\"headerlink\" title=\"多个字段对应\"></a>多个字段对应</h2><p>在项目中，经常遇到，接口A返回的用户id字段说uid,接口B返回的用户字段是ID，这种情况我们只需要中Model中将两个字段存到一个数组绑定到同一个属性上就可以了</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">+ (NSDictionary *)JSONKeyPathsByPropertyKey</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> @&#123;</span><br><span class=\"line\">\t\t@<span class=\"string\">\"uid\"</span><span class=\"symbol\">:</span>@[@<span class=\"string\">\"uid\"</span>,@<span class=\"string\">\"ID\"</span>],</span><br><span class=\"line\">\t\t@<span class=\"string\">\"userid\"</span><span class=\"symbol\">:</span>@<span class=\"string\">\"userid\"</span>,</span><br><span class=\"line\">\t\t@<span class=\"string\">\"stats\"</span><span class=\"symbol\">:</span>@<span class=\"string\">\"stats\"</span>,</span><br><span class=\"line\">\t\t@<span class=\"string\">\"title\"</span><span class=\"symbol\">:</span>@<span class=\"string\">\"title\"</span>,</span><br><span class=\"line\">\t\t@<span class=\"string\">\"r\"</span><span class=\"symbol\">:</span>@<span class=\"string\">\"r\"</span>,</span><br><span class=\"line\">\t\t@<span class=\"string\">\"homepage\"</span><span class=\"symbol\">:</span>@<span class=\"string\">\"homepage\"</span>,</span><br><span class=\"line\">\t\t@<span class=\"string\">\"icon\"</span><span class=\"symbol\">:</span>@<span class=\"string\">\"icon\"</span></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"将实体中的值封装成一个dictionary，方便接口传输\"><a href=\"#将实体中的值封装成一个dictionary，方便接口传输\" class=\"headerlink\" title=\"将实体中的值封装成一个dictionary，方便接口传输\"></a>将实体中的值封装成一个dictionary，方便接口传输</h2><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#使用全部的字段</span></span><br><span class=\"line\">NSDictionary *params = [user dictionaryValue];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#使用部分的字段</span></span><br><span class=\"line\">NSDictionary *params = [address <span class=\"symbol\">dictionaryWithValuesForKeys:</span>@[@<span class=\"string\">\"uid\"</span>,@<span class=\"string\">\"stats\"</span>,@<span class=\"string\">\"homepage\"</span>]];</span><br></pre></td></tr></table></figure>\n<h2 id=\"最后\"><a href=\"#最后\" class=\"headerlink\" title=\"最后\"></a>最后</h2><p>在项目的开发过程中，我抽时间做了一个小工具，可以方便的将JSON转换为Mantle支持的Model类，希望对你们有帮助</p>\n<p>Source: <a href=\"https://github.com/TimeBots/ModelBot\" target=\"_blank\" rel=\"noopener\">https://github.com/TimeBots/ModelBot</a><br>Download: <a href=\"https://github.com/TimeBots/ModelBot/releases/download/0.3.0/ModelBot.0.3.0.zip\" target=\"_blank\" rel=\"noopener\">ModelBot Download</a></p>"},{"title":"从Objective-c迁移到Swift的一些坑","comment":true,"date":"2016-01-27T07:08:49.000Z","_content":"\n### NSString to String\n```swift\n#ObjC\nNSString *notice\n\n#Swift\nvar notice:String?\n```\n\n### NSArray,NSMutableArray to Array\n\n```swift\n#1. 声明\n#ObjC\nNSMutableArray *listArray = [NSMutableArray array];\n\n#Swift\nvar listArray:[String] = Array() //必须带参数类型\nvar listArray:[AnyObject] = Array()\n\n#2. 增加元素\n#ObjC\n[listArray addObject:@\"foo\"];\n\n#Swift\nlistArray.append(\"foo\")\n```\n\n### NSRange->Range\n```swift\n#ObjC\nNSRange range = NSMakeRange(0,10)\n\n#Swift\nRange(start: 0, end: 10)\n\n```\n\n# NSDictionary,NSmutableDictionary  to Dictionary\n```swift\n#ObjC\nNSMutableDictionary *score = [NSMutableDictionary dictionary];\n\n#Swift\nvar score0:[String:String]?\nvar score1 = [String:String]()\nvar score2 = Dictionary<String,String>()\nvar score3 = [:]\n\n#ObjC\nNSDictionary *person = @{@\"name\":@\"Single Dog\",@\"Skill\":@\"Swift\"};\nperson[@“age”] = @“28”;\n\n#Swift\nvar person = [\"name\":\"Single Dog\",\"Skill\":\"Swift\"]\nperson[\"age\"] = \"28\"\n```\n\n### Random\n\n```swift\n#ObjC\narc4random%255\n\n#Swift\narc4random_uniform(255)\nrandom() % 255\n```\n\n### Selector\n感觉Selector的方式不如ObjC那样有方法提示，容易写错，效率反而不如之前\n```swift\n#ObjC\nSEL callback = @selector(uploadCallback:)\n\n#Swift\nSelector(\"uploadCallback:\")\n```\n\n### id to AnyObject\n```swift\n#ObjC\nid sender\n\n#Swift\nvar sender:Anyobject?\n```  \n### 三元运算缩写\n```swift\n#ObjC\na ? : b\n\n#Swift\na ?? b\n```\n\n### 枚举\n```swift\n#ObjC\ntypedef NS_ENUM(NSInteger,LocationState){\n    LocationStateStart,\n    LocationStateFinish,\n    LocationStateFail\n};\n\n#Swift\nenum LocationState {\n    case LocationStart, LocationFinish, LocationFail\n}\n```\n\n# Todo List\n1. Block to Closure\n2. DateFormatter\n3. nil value check\n……\n\n遇到继续添加,未完待续……\n","source":"_posts/2016-01-27-Objective-c-to-Swift.md","raw":"title: 从Objective-c迁移到Swift的一些坑\ncomment: true\ndate: 2016-01-27 15:08:49\ncategories:\n---\n\n### NSString to String\n```swift\n#ObjC\nNSString *notice\n\n#Swift\nvar notice:String?\n```\n\n### NSArray,NSMutableArray to Array\n\n```swift\n#1. 声明\n#ObjC\nNSMutableArray *listArray = [NSMutableArray array];\n\n#Swift\nvar listArray:[String] = Array() //必须带参数类型\nvar listArray:[AnyObject] = Array()\n\n#2. 增加元素\n#ObjC\n[listArray addObject:@\"foo\"];\n\n#Swift\nlistArray.append(\"foo\")\n```\n\n### NSRange->Range\n```swift\n#ObjC\nNSRange range = NSMakeRange(0,10)\n\n#Swift\nRange(start: 0, end: 10)\n\n```\n\n# NSDictionary,NSmutableDictionary  to Dictionary\n```swift\n#ObjC\nNSMutableDictionary *score = [NSMutableDictionary dictionary];\n\n#Swift\nvar score0:[String:String]?\nvar score1 = [String:String]()\nvar score2 = Dictionary<String,String>()\nvar score3 = [:]\n\n#ObjC\nNSDictionary *person = @{@\"name\":@\"Single Dog\",@\"Skill\":@\"Swift\"};\nperson[@“age”] = @“28”;\n\n#Swift\nvar person = [\"name\":\"Single Dog\",\"Skill\":\"Swift\"]\nperson[\"age\"] = \"28\"\n```\n\n### Random\n\n```swift\n#ObjC\narc4random%255\n\n#Swift\narc4random_uniform(255)\nrandom() % 255\n```\n\n### Selector\n感觉Selector的方式不如ObjC那样有方法提示，容易写错，效率反而不如之前\n```swift\n#ObjC\nSEL callback = @selector(uploadCallback:)\n\n#Swift\nSelector(\"uploadCallback:\")\n```\n\n### id to AnyObject\n```swift\n#ObjC\nid sender\n\n#Swift\nvar sender:Anyobject?\n```  \n### 三元运算缩写\n```swift\n#ObjC\na ? : b\n\n#Swift\na ?? b\n```\n\n### 枚举\n```swift\n#ObjC\ntypedef NS_ENUM(NSInteger,LocationState){\n    LocationStateStart,\n    LocationStateFinish,\n    LocationStateFail\n};\n\n#Swift\nenum LocationState {\n    case LocationStart, LocationFinish, LocationFail\n}\n```\n\n# Todo List\n1. Block to Closure\n2. DateFormatter\n3. nil value check\n……\n\n遇到继续添加,未完待续……\n","slug":"Objective-c-to-Swift","published":1,"updated":"2020-01-01T02:23:42.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clb0uhkd0001mo63k889go6uw","content":"<h3 id=\"NSString-to-String\"><a href=\"#NSString-to-String\" class=\"headerlink\" title=\"NSString to String\"></a>NSString to String</h3><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#<span class=\"type\">ObjC</span></span><br><span class=\"line\"><span class=\"type\">NSString</span> *notice</span><br><span class=\"line\"></span><br><span class=\"line\">#<span class=\"type\">Swift</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> notice:<span class=\"type\">String?</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"NSArray-NSMutableArray-to-Array\"><a href=\"#NSArray-NSMutableArray-to-Array\" class=\"headerlink\" title=\"NSArray,NSMutableArray to Array\"></a>NSArray,NSMutableArray to Array</h3><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#<span class=\"number\">1</span>. 声明</span><br><span class=\"line\">#<span class=\"type\">ObjC</span></span><br><span class=\"line\"><span class=\"type\">NSMutableArray</span> *listArray = [<span class=\"type\">NSMutableArray</span> array];</span><br><span class=\"line\"></span><br><span class=\"line\">#<span class=\"type\">Swift</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> listArray:[<span class=\"type\">String</span>] = <span class=\"type\">Array</span>() <span class=\"comment\">//必须带参数类型</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> listArray:[<span class=\"type\">AnyObject</span>] = <span class=\"type\">Array</span>()</span><br><span class=\"line\"></span><br><span class=\"line\">#<span class=\"number\">2</span>. 增加元素</span><br><span class=\"line\">#<span class=\"type\">ObjC</span></span><br><span class=\"line\">[listArray addObject:@<span class=\"string\">\"foo\"</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">#<span class=\"type\">Swift</span></span><br><span class=\"line\">listArray.append(<span class=\"string\">\"foo\"</span>)</span><br></pre></td></tr></table></figure>\n<h3 id=\"NSRange-gt-Range\"><a href=\"#NSRange-gt-Range\" class=\"headerlink\" title=\"NSRange-&gt;Range\"></a>NSRange-&gt;Range</h3><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#<span class=\"type\">ObjC</span></span><br><span class=\"line\"><span class=\"type\">NSRange</span> range = <span class=\"type\">NSMakeRange</span>(<span class=\"number\">0</span>,<span class=\"number\">10</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">#<span class=\"type\">Swift</span></span><br><span class=\"line\"><span class=\"type\">Range</span>(start: <span class=\"number\">0</span>, end: <span class=\"number\">10</span>)</span><br></pre></td></tr></table></figure>\n<h1 id=\"NSDictionary-NSmutableDictionary-to-Dictionary\"><a href=\"#NSDictionary-NSmutableDictionary-to-Dictionary\" class=\"headerlink\" title=\"NSDictionary,NSmutableDictionary  to Dictionary\"></a>NSDictionary,NSmutableDictionary  to Dictionary</h1><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#<span class=\"type\">ObjC</span></span><br><span class=\"line\"><span class=\"type\">NSMutableDictionary</span> *score = [<span class=\"type\">NSMutableDictionary</span> dictionary];</span><br><span class=\"line\"></span><br><span class=\"line\">#<span class=\"type\">Swift</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> score0:[<span class=\"type\">String</span>:<span class=\"type\">String</span>]?</span><br><span class=\"line\"><span class=\"keyword\">var</span> score1 = [<span class=\"type\">String</span>:<span class=\"type\">String</span>]()</span><br><span class=\"line\"><span class=\"keyword\">var</span> score2 = <span class=\"type\">Dictionary</span>&lt;<span class=\"type\">String</span>,<span class=\"type\">String</span>&gt;()</span><br><span class=\"line\"><span class=\"keyword\">var</span> score3 = [:]</span><br><span class=\"line\"></span><br><span class=\"line\">#<span class=\"type\">ObjC</span></span><br><span class=\"line\"><span class=\"type\">NSDictionary</span> *person = @&#123;@<span class=\"string\">\"name\"</span>:@<span class=\"string\">\"Single Dog\"</span>,@<span class=\"string\">\"Skill\"</span>:@<span class=\"string\">\"Swift\"</span>&#125;;</span><br><span class=\"line\">person[@“age”] = @“<span class=\"number\">28</span>”;</span><br><span class=\"line\"></span><br><span class=\"line\">#<span class=\"type\">Swift</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> person = [<span class=\"string\">\"name\"</span>:<span class=\"string\">\"Single Dog\"</span>,<span class=\"string\">\"Skill\"</span>:<span class=\"string\">\"Swift\"</span>]</span><br><span class=\"line\">person[<span class=\"string\">\"age\"</span>] = <span class=\"string\">\"28\"</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"Random\"><a href=\"#Random\" class=\"headerlink\" title=\"Random\"></a>Random</h3><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#<span class=\"type\">ObjC</span></span><br><span class=\"line\">arc4random%<span class=\"number\">255</span></span><br><span class=\"line\"></span><br><span class=\"line\">#<span class=\"type\">Swift</span></span><br><span class=\"line\">arc4random_uniform(<span class=\"number\">255</span>)</span><br><span class=\"line\">random() % <span class=\"number\">255</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"Selector\"><a href=\"#Selector\" class=\"headerlink\" title=\"Selector\"></a>Selector</h3><p>感觉Selector的方式不如ObjC那样有方法提示，容易写错，效率反而不如之前<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#<span class=\"type\">ObjC</span></span><br><span class=\"line\"><span class=\"type\">SEL</span> callback = @selector(uploadCallback:)</span><br><span class=\"line\"></span><br><span class=\"line\">#<span class=\"type\">Swift</span></span><br><span class=\"line\"><span class=\"type\">Selector</span>(<span class=\"string\">\"uploadCallback:\"</span>)</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"id-to-AnyObject\"><a href=\"#id-to-AnyObject\" class=\"headerlink\" title=\"id to AnyObject\"></a>id to AnyObject</h3><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#<span class=\"type\">ObjC</span></span><br><span class=\"line\">id sender</span><br><span class=\"line\"></span><br><span class=\"line\">#<span class=\"type\">Swift</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> sender:<span class=\"type\">Anyobject?</span></span><br><span class=\"line\">```  </span><br><span class=\"line\">### 三元运算缩写</span><br><span class=\"line\">```swift</span><br><span class=\"line\">#<span class=\"type\">ObjC</span></span><br><span class=\"line\">a ? : b</span><br><span class=\"line\"></span><br><span class=\"line\">#<span class=\"type\">Swift</span></span><br><span class=\"line\">a ?? b</span><br></pre></td></tr></table></figure>\n<h3 id=\"枚举\"><a href=\"#枚举\" class=\"headerlink\" title=\"枚举\"></a>枚举</h3><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#<span class=\"type\">ObjC</span></span><br><span class=\"line\">typedef <span class=\"type\">NS_ENUM</span>(<span class=\"type\">NSInteger</span>,<span class=\"type\">LocationState</span>)&#123;</span><br><span class=\"line\">    <span class=\"type\">LocationStateStart</span>,</span><br><span class=\"line\">    <span class=\"type\">LocationStateFinish</span>,</span><br><span class=\"line\">    <span class=\"type\">LocationStateFail</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">#<span class=\"type\">Swift</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">enum</span> <span class=\"title\">LocationState</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"type\">LocationStart</span>, <span class=\"type\">LocationFinish</span>, <span class=\"type\">LocationFail</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"Todo-List\"><a href=\"#Todo-List\" class=\"headerlink\" title=\"Todo List\"></a>Todo List</h1><ol>\n<li>Block to Closure</li>\n<li>DateFormatter</li>\n<li>nil value check<br>……</li>\n</ol>\n<p>遇到继续添加,未完待续……</p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"NSString-to-String\"><a href=\"#NSString-to-String\" class=\"headerlink\" title=\"NSString to String\"></a>NSString to String</h3><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#<span class=\"type\">ObjC</span></span><br><span class=\"line\"><span class=\"type\">NSString</span> *notice</span><br><span class=\"line\"></span><br><span class=\"line\">#<span class=\"type\">Swift</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> notice:<span class=\"type\">String?</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"NSArray-NSMutableArray-to-Array\"><a href=\"#NSArray-NSMutableArray-to-Array\" class=\"headerlink\" title=\"NSArray,NSMutableArray to Array\"></a>NSArray,NSMutableArray to Array</h3><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#<span class=\"number\">1</span>. 声明</span><br><span class=\"line\">#<span class=\"type\">ObjC</span></span><br><span class=\"line\"><span class=\"type\">NSMutableArray</span> *listArray = [<span class=\"type\">NSMutableArray</span> array];</span><br><span class=\"line\"></span><br><span class=\"line\">#<span class=\"type\">Swift</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> listArray:[<span class=\"type\">String</span>] = <span class=\"type\">Array</span>() <span class=\"comment\">//必须带参数类型</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> listArray:[<span class=\"type\">AnyObject</span>] = <span class=\"type\">Array</span>()</span><br><span class=\"line\"></span><br><span class=\"line\">#<span class=\"number\">2</span>. 增加元素</span><br><span class=\"line\">#<span class=\"type\">ObjC</span></span><br><span class=\"line\">[listArray addObject:@<span class=\"string\">\"foo\"</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">#<span class=\"type\">Swift</span></span><br><span class=\"line\">listArray.append(<span class=\"string\">\"foo\"</span>)</span><br></pre></td></tr></table></figure>\n<h3 id=\"NSRange-gt-Range\"><a href=\"#NSRange-gt-Range\" class=\"headerlink\" title=\"NSRange-&gt;Range\"></a>NSRange-&gt;Range</h3><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#<span class=\"type\">ObjC</span></span><br><span class=\"line\"><span class=\"type\">NSRange</span> range = <span class=\"type\">NSMakeRange</span>(<span class=\"number\">0</span>,<span class=\"number\">10</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">#<span class=\"type\">Swift</span></span><br><span class=\"line\"><span class=\"type\">Range</span>(start: <span class=\"number\">0</span>, end: <span class=\"number\">10</span>)</span><br></pre></td></tr></table></figure>\n<h1 id=\"NSDictionary-NSmutableDictionary-to-Dictionary\"><a href=\"#NSDictionary-NSmutableDictionary-to-Dictionary\" class=\"headerlink\" title=\"NSDictionary,NSmutableDictionary  to Dictionary\"></a>NSDictionary,NSmutableDictionary  to Dictionary</h1><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#<span class=\"type\">ObjC</span></span><br><span class=\"line\"><span class=\"type\">NSMutableDictionary</span> *score = [<span class=\"type\">NSMutableDictionary</span> dictionary];</span><br><span class=\"line\"></span><br><span class=\"line\">#<span class=\"type\">Swift</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> score0:[<span class=\"type\">String</span>:<span class=\"type\">String</span>]?</span><br><span class=\"line\"><span class=\"keyword\">var</span> score1 = [<span class=\"type\">String</span>:<span class=\"type\">String</span>]()</span><br><span class=\"line\"><span class=\"keyword\">var</span> score2 = <span class=\"type\">Dictionary</span>&lt;<span class=\"type\">String</span>,<span class=\"type\">String</span>&gt;()</span><br><span class=\"line\"><span class=\"keyword\">var</span> score3 = [:]</span><br><span class=\"line\"></span><br><span class=\"line\">#<span class=\"type\">ObjC</span></span><br><span class=\"line\"><span class=\"type\">NSDictionary</span> *person = @&#123;@<span class=\"string\">\"name\"</span>:@<span class=\"string\">\"Single Dog\"</span>,@<span class=\"string\">\"Skill\"</span>:@<span class=\"string\">\"Swift\"</span>&#125;;</span><br><span class=\"line\">person[@“age”] = @“<span class=\"number\">28</span>”;</span><br><span class=\"line\"></span><br><span class=\"line\">#<span class=\"type\">Swift</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> person = [<span class=\"string\">\"name\"</span>:<span class=\"string\">\"Single Dog\"</span>,<span class=\"string\">\"Skill\"</span>:<span class=\"string\">\"Swift\"</span>]</span><br><span class=\"line\">person[<span class=\"string\">\"age\"</span>] = <span class=\"string\">\"28\"</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"Random\"><a href=\"#Random\" class=\"headerlink\" title=\"Random\"></a>Random</h3><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#<span class=\"type\">ObjC</span></span><br><span class=\"line\">arc4random%<span class=\"number\">255</span></span><br><span class=\"line\"></span><br><span class=\"line\">#<span class=\"type\">Swift</span></span><br><span class=\"line\">arc4random_uniform(<span class=\"number\">255</span>)</span><br><span class=\"line\">random() % <span class=\"number\">255</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"Selector\"><a href=\"#Selector\" class=\"headerlink\" title=\"Selector\"></a>Selector</h3><p>感觉Selector的方式不如ObjC那样有方法提示，容易写错，效率反而不如之前<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#<span class=\"type\">ObjC</span></span><br><span class=\"line\"><span class=\"type\">SEL</span> callback = @selector(uploadCallback:)</span><br><span class=\"line\"></span><br><span class=\"line\">#<span class=\"type\">Swift</span></span><br><span class=\"line\"><span class=\"type\">Selector</span>(<span class=\"string\">\"uploadCallback:\"</span>)</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"id-to-AnyObject\"><a href=\"#id-to-AnyObject\" class=\"headerlink\" title=\"id to AnyObject\"></a>id to AnyObject</h3><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#<span class=\"type\">ObjC</span></span><br><span class=\"line\">id sender</span><br><span class=\"line\"></span><br><span class=\"line\">#<span class=\"type\">Swift</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> sender:<span class=\"type\">Anyobject?</span></span><br><span class=\"line\">```  </span><br><span class=\"line\">### 三元运算缩写</span><br><span class=\"line\">```swift</span><br><span class=\"line\">#<span class=\"type\">ObjC</span></span><br><span class=\"line\">a ? : b</span><br><span class=\"line\"></span><br><span class=\"line\">#<span class=\"type\">Swift</span></span><br><span class=\"line\">a ?? b</span><br></pre></td></tr></table></figure>\n<h3 id=\"枚举\"><a href=\"#枚举\" class=\"headerlink\" title=\"枚举\"></a>枚举</h3><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#<span class=\"type\">ObjC</span></span><br><span class=\"line\">typedef <span class=\"type\">NS_ENUM</span>(<span class=\"type\">NSInteger</span>,<span class=\"type\">LocationState</span>)&#123;</span><br><span class=\"line\">    <span class=\"type\">LocationStateStart</span>,</span><br><span class=\"line\">    <span class=\"type\">LocationStateFinish</span>,</span><br><span class=\"line\">    <span class=\"type\">LocationStateFail</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">#<span class=\"type\">Swift</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">enum</span> <span class=\"title\">LocationState</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"type\">LocationStart</span>, <span class=\"type\">LocationFinish</span>, <span class=\"type\">LocationFail</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"Todo-List\"><a href=\"#Todo-List\" class=\"headerlink\" title=\"Todo List\"></a>Todo List</h1><ol>\n<li>Block to Closure</li>\n<li>DateFormatter</li>\n<li>nil value check<br>……</li>\n</ol>\n<p>遇到继续添加,未完待续……</p>\n"},{"title":"Mac Tips","comment":true,"date":"2016-03-23T01:32:12.000Z","_content":"\n一些常用的命令备忘\n\n#### 显示隐藏文件\n```js\ndefaults write com.apple.finder AppleShowAllFiles -bool true;killall Finder\n```\n\n#### 不显示隐藏文件\n```js\ndefaults write com.apple.finder AppleShowAllFiles -bool false;killall Finder\n```\n\n#### 10.11后开启第三方硬盘的Trim\n```js\nsudo trimforce enable\n```\n\n\n####  释放不活跃的内存 \n```js\nsudo purge\n```\n\n#### 允许任何来源的软件进行安装\n```js\nsudo spctl --master-disable\n```","source":"_posts/2016-03-23-Mac-Tips.md","raw":"title: Mac Tips\ncomment: true\ndate: 2016-03-23 09:32:12\ncategories: iOS\n---\n\n一些常用的命令备忘\n\n#### 显示隐藏文件\n```js\ndefaults write com.apple.finder AppleShowAllFiles -bool true;killall Finder\n```\n\n#### 不显示隐藏文件\n```js\ndefaults write com.apple.finder AppleShowAllFiles -bool false;killall Finder\n```\n\n#### 10.11后开启第三方硬盘的Trim\n```js\nsudo trimforce enable\n```\n\n\n####  释放不活跃的内存 \n```js\nsudo purge\n```\n\n#### 允许任何来源的软件进行安装\n```js\nsudo spctl --master-disable\n```","slug":"Mac-Tips","published":1,"updated":"2020-01-01T05:30:37.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clb0uhkd2001po63klkj7ljuz","content":"<p>一些常用的命令备忘</p>\n<h4 id=\"显示隐藏文件\"><a href=\"#显示隐藏文件\" class=\"headerlink\" title=\"显示隐藏文件\"></a>显示隐藏文件</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">defaults write com.apple.finder AppleShowAllFiles -bool <span class=\"literal\">true</span>;killall Finder</span><br></pre></td></tr></table></figure>\n<h4 id=\"不显示隐藏文件\"><a href=\"#不显示隐藏文件\" class=\"headerlink\" title=\"不显示隐藏文件\"></a>不显示隐藏文件</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">defaults write com.apple.finder AppleShowAllFiles -bool <span class=\"literal\">false</span>;killall Finder</span><br></pre></td></tr></table></figure>\n<h4 id=\"10-11后开启第三方硬盘的Trim\"><a href=\"#10-11后开启第三方硬盘的Trim\" class=\"headerlink\" title=\"10.11后开启第三方硬盘的Trim\"></a>10.11后开启第三方硬盘的Trim</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo trimforce enable</span><br></pre></td></tr></table></figure>\n<h4 id=\"释放不活跃的内存\"><a href=\"#释放不活跃的内存\" class=\"headerlink\" title=\"释放不活跃的内存\"></a>释放不活跃的内存</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo purge</span><br></pre></td></tr></table></figure>\n<h4 id=\"允许任何来源的软件进行安装\"><a href=\"#允许任何来源的软件进行安装\" class=\"headerlink\" title=\"允许任何来源的软件进行安装\"></a>允许任何来源的软件进行安装</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo spctl --master-disable</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>一些常用的命令备忘</p>\n<h4 id=\"显示隐藏文件\"><a href=\"#显示隐藏文件\" class=\"headerlink\" title=\"显示隐藏文件\"></a>显示隐藏文件</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">defaults write com.apple.finder AppleShowAllFiles -bool <span class=\"literal\">true</span>;killall Finder</span><br></pre></td></tr></table></figure>\n<h4 id=\"不显示隐藏文件\"><a href=\"#不显示隐藏文件\" class=\"headerlink\" title=\"不显示隐藏文件\"></a>不显示隐藏文件</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">defaults write com.apple.finder AppleShowAllFiles -bool <span class=\"literal\">false</span>;killall Finder</span><br></pre></td></tr></table></figure>\n<h4 id=\"10-11后开启第三方硬盘的Trim\"><a href=\"#10-11后开启第三方硬盘的Trim\" class=\"headerlink\" title=\"10.11后开启第三方硬盘的Trim\"></a>10.11后开启第三方硬盘的Trim</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo trimforce enable</span><br></pre></td></tr></table></figure>\n<h4 id=\"释放不活跃的内存\"><a href=\"#释放不活跃的内存\" class=\"headerlink\" title=\"释放不活跃的内存\"></a>释放不活跃的内存</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo purge</span><br></pre></td></tr></table></figure>\n<h4 id=\"允许任何来源的软件进行安装\"><a href=\"#允许任何来源的软件进行安装\" class=\"headerlink\" title=\"允许任何来源的软件进行安装\"></a>允许任何来源的软件进行安装</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo spctl --master-disable</span><br></pre></td></tr></table></figure>"},{"title":"2016年2月29日","comment":true,"date":"2016-02-29T14:04:06.000Z","_content":"\n仅为今天，特意发博一篇","source":"_posts/2016-02-29-the-day-of-2-29.md","raw":"title: 2016年2月29日\ncomment: true\ndate: 2016-02-29 22:04:06\ncategories:\n---\n\n仅为今天，特意发博一篇","slug":"the-day-of-2-29","published":1,"updated":"2020-01-01T02:23:42.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clb0uhkd4001ro63k4n32yu73","content":"<p>仅为今天，特意发博一篇</p>\n","site":{"data":{}},"excerpt":"","more":"<p>仅为今天，特意发博一篇</p>\n"},{"title":"iOS Tips","comment":true,"date":"2016-03-23T01:33:47.000Z","_content":"\nCode Snippets\n\n##### 去除空白TableViewCell的分割线\n```js\nlistTable.tableFooterView = [UIView new];\n```\n\n##### 让header与cell一起滚动，不在顶部悬停\n```js\n设置为UITableViewStyleGrouped\n```\n<!--more-->\n\n##### 在拼音打字的时候，不让textField响应Change\n```js\n//MARK: textfield notification\n- (void)textFieldDidChange:(NSNotification *)notification{\n   UITextRange *selectedRange = [self.searchField markedTextRange];\n   NSString * newText = [self.textField textInRange:selectedRange];\n\n   //获取高亮部分,拼音状态不进行搜索\n   if(newText.length>0){\n       return;\n   }\n……\n}\n```\n\n##### 将数组中的Model的某个字段合并成String\n```js\n#假设listArray中是User实体，有一个Name字段\n[[listArray valueForKey:@“Name”] componentsJoinedByString:@\"\\n\"]\n```\n\n##### 设置NavigationBarItem的Title，可以让其与Tabbar的Title区分开\n```js\nself.navigationItem.title = @“Home”;\n```\n\n\n##### 通过设置Cell的Custom Insets来替代自定义View的分割线\n![](/uploads/cell-insets.png)\n\n### Xcode\n1. 按住Shift可以一次选择多个AutoLayout约束\n2. 按住Ctrl,再点按Alt可以Toggle设置是否添加Margin\n3. Ctrl+Command+↑切换h与m文件（Objective-C使用）\n4. 给类改名，并修改相关引用地方的类名\n![](/uploads/xcode-rename.png)\n\n![](/uploads/xcode-rename-relation.png)\n\n#### 屏蔽Xcode8自带log\n```ruby\n[http://stackoverflow.com/questions/37800790/hide-strange-unwanted-xcode-8-logs](http://stackoverflow.com/questions/37800790/hide-strange-unwanted-xcode-8-logs)\n1- From Xcode menu open: Product > Scheme > Edit Scheme\n\n2- On your Environment Variables set OS_ACTIVITY_MODE = disable\n```\n\n### Xcode8 注释快捷键\n```ruby\nOption+Command+/\n```\n","source":"_posts/2016-03-23-iOS-Tips.md","raw":"title: iOS Tips\ncomment: true\ndate: 2016-03-23 09:33:47\ncategories: iOS\n---\n\nCode Snippets\n\n##### 去除空白TableViewCell的分割线\n```js\nlistTable.tableFooterView = [UIView new];\n```\n\n##### 让header与cell一起滚动，不在顶部悬停\n```js\n设置为UITableViewStyleGrouped\n```\n<!--more-->\n\n##### 在拼音打字的时候，不让textField响应Change\n```js\n//MARK: textfield notification\n- (void)textFieldDidChange:(NSNotification *)notification{\n   UITextRange *selectedRange = [self.searchField markedTextRange];\n   NSString * newText = [self.textField textInRange:selectedRange];\n\n   //获取高亮部分,拼音状态不进行搜索\n   if(newText.length>0){\n       return;\n   }\n……\n}\n```\n\n##### 将数组中的Model的某个字段合并成String\n```js\n#假设listArray中是User实体，有一个Name字段\n[[listArray valueForKey:@“Name”] componentsJoinedByString:@\"\\n\"]\n```\n\n##### 设置NavigationBarItem的Title，可以让其与Tabbar的Title区分开\n```js\nself.navigationItem.title = @“Home”;\n```\n\n\n##### 通过设置Cell的Custom Insets来替代自定义View的分割线\n![](/uploads/cell-insets.png)\n\n### Xcode\n1. 按住Shift可以一次选择多个AutoLayout约束\n2. 按住Ctrl,再点按Alt可以Toggle设置是否添加Margin\n3. Ctrl+Command+↑切换h与m文件（Objective-C使用）\n4. 给类改名，并修改相关引用地方的类名\n![](/uploads/xcode-rename.png)\n\n![](/uploads/xcode-rename-relation.png)\n\n#### 屏蔽Xcode8自带log\n```ruby\n[http://stackoverflow.com/questions/37800790/hide-strange-unwanted-xcode-8-logs](http://stackoverflow.com/questions/37800790/hide-strange-unwanted-xcode-8-logs)\n1- From Xcode menu open: Product > Scheme > Edit Scheme\n\n2- On your Environment Variables set OS_ACTIVITY_MODE = disable\n```\n\n### Xcode8 注释快捷键\n```ruby\nOption+Command+/\n```\n","slug":"iOS-Tips","published":1,"updated":"2020-01-01T05:30:28.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clb0uhkd5001to63k3hu232qo","content":"<p>Code Snippets</p>\n<h5 id=\"去除空白TableViewCell的分割线\"><a href=\"#去除空白TableViewCell的分割线\" class=\"headerlink\" title=\"去除空白TableViewCell的分割线\"></a>去除空白TableViewCell的分割线</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">listTable.tableFooterView = [UIView <span class=\"keyword\">new</span>];</span><br></pre></td></tr></table></figure>\n<h5 id=\"让header与cell一起滚动，不在顶部悬停\"><a href=\"#让header与cell一起滚动，不在顶部悬停\" class=\"headerlink\" title=\"让header与cell一起滚动，不在顶部悬停\"></a>让header与cell一起滚动，不在顶部悬停</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">设置为UITableViewStyleGrouped</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h5 id=\"在拼音打字的时候，不让textField响应Change\"><a href=\"#在拼音打字的时候，不让textField响应Change\" class=\"headerlink\" title=\"在拼音打字的时候，不让textField响应Change\"></a>在拼音打字的时候，不让textField响应Change</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//MARK: textfield notification</span></span><br><span class=\"line\">- (<span class=\"keyword\">void</span>)textFieldDidChange:(NSNotification *)notification&#123;</span><br><span class=\"line\">   UITextRange *selectedRange = [self.searchField markedTextRange];</span><br><span class=\"line\">   NSString * newText = [self.textField textInRange:selectedRange];</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">//获取高亮部分,拼音状态不进行搜索</span></span><br><span class=\"line\">   <span class=\"keyword\">if</span>(newText.length&gt;<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">       <span class=\"keyword\">return</span>;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">……</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"将数组中的Model的某个字段合并成String\"><a href=\"#将数组中的Model的某个字段合并成String\" class=\"headerlink\" title=\"将数组中的Model的某个字段合并成String\"></a>将数组中的Model的某个字段合并成String</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#假设listArray中是User实体，有一个Name字段</span><br><span class=\"line\">[[listArray valueForKey:@“Name”] componentsJoinedByString:@<span class=\"string\">\"\\n\"</span>]</span><br></pre></td></tr></table></figure>\n<h5 id=\"设置NavigationBarItem的Title，可以让其与Tabbar的Title区分开\"><a href=\"#设置NavigationBarItem的Title，可以让其与Tabbar的Title区分开\" class=\"headerlink\" title=\"设置NavigationBarItem的Title，可以让其与Tabbar的Title区分开\"></a>设置NavigationBarItem的Title，可以让其与Tabbar的Title区分开</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">self.navigationItem.title = @“Home”;</span><br></pre></td></tr></table></figure>\n<h5 id=\"通过设置Cell的Custom-Insets来替代自定义View的分割线\"><a href=\"#通过设置Cell的Custom-Insets来替代自定义View的分割线\" class=\"headerlink\" title=\"通过设置Cell的Custom Insets来替代自定义View的分割线\"></a>通过设置Cell的Custom Insets来替代自定义View的分割线</h5><p><img src=\"/uploads/cell-insets.png\" alt></p>\n<h3 id=\"Xcode\"><a href=\"#Xcode\" class=\"headerlink\" title=\"Xcode\"></a>Xcode</h3><ol>\n<li>按住Shift可以一次选择多个AutoLayout约束</li>\n<li>按住Ctrl,再点按Alt可以Toggle设置是否添加Margin</li>\n<li>Ctrl+Command+↑切换h与m文件（Objective-C使用）</li>\n<li>给类改名，并修改相关引用地方的类名<br><img src=\"/uploads/xcode-rename.png\" alt></li>\n</ol>\n<p><img src=\"/uploads/xcode-rename-relation.png\" alt></p>\n<h4 id=\"屏蔽Xcode8自带log\"><a href=\"#屏蔽Xcode8自带log\" class=\"headerlink\" title=\"屏蔽Xcode8自带log\"></a>屏蔽Xcode8自带log</h4><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"symbol\">http:</span>/<span class=\"regexp\">/stackoverflow.com/questions</span><span class=\"regexp\">/37800790/hide</span>-strange-unwanted-xcode-<span class=\"number\">8</span>-logs](<span class=\"symbol\">http:</span>/<span class=\"regexp\">/stackoverflow.com/questions</span><span class=\"regexp\">/37800790/hide</span>-strange-unwanted-xcode-<span class=\"number\">8</span>-logs)</span><br><span class=\"line\"><span class=\"number\">1</span>- From Xcode menu <span class=\"symbol\">open:</span> Product &gt; Scheme &gt; Edit Scheme</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">2</span>- On your Environment Variables set OS_ACTIVITY_MODE = disable</span><br></pre></td></tr></table></figure>\n<h3 id=\"Xcode8-注释快捷键\"><a href=\"#Xcode8-注释快捷键\" class=\"headerlink\" title=\"Xcode8 注释快捷键\"></a>Xcode8 注释快捷键</h3><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Option+Command+<span class=\"regexp\">/</span></span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<p>Code Snippets</p>\n<h5 id=\"去除空白TableViewCell的分割线\"><a href=\"#去除空白TableViewCell的分割线\" class=\"headerlink\" title=\"去除空白TableViewCell的分割线\"></a>去除空白TableViewCell的分割线</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">listTable.tableFooterView = [UIView <span class=\"keyword\">new</span>];</span><br></pre></td></tr></table></figure>\n<h5 id=\"让header与cell一起滚动，不在顶部悬停\"><a href=\"#让header与cell一起滚动，不在顶部悬停\" class=\"headerlink\" title=\"让header与cell一起滚动，不在顶部悬停\"></a>让header与cell一起滚动，不在顶部悬停</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">设置为UITableViewStyleGrouped</span><br></pre></td></tr></table></figure>","more":"<h5 id=\"在拼音打字的时候，不让textField响应Change\"><a href=\"#在拼音打字的时候，不让textField响应Change\" class=\"headerlink\" title=\"在拼音打字的时候，不让textField响应Change\"></a>在拼音打字的时候，不让textField响应Change</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//MARK: textfield notification</span></span><br><span class=\"line\">- (<span class=\"keyword\">void</span>)textFieldDidChange:(NSNotification *)notification&#123;</span><br><span class=\"line\">   UITextRange *selectedRange = [self.searchField markedTextRange];</span><br><span class=\"line\">   NSString * newText = [self.textField textInRange:selectedRange];</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">//获取高亮部分,拼音状态不进行搜索</span></span><br><span class=\"line\">   <span class=\"keyword\">if</span>(newText.length&gt;<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">       <span class=\"keyword\">return</span>;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">……</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"将数组中的Model的某个字段合并成String\"><a href=\"#将数组中的Model的某个字段合并成String\" class=\"headerlink\" title=\"将数组中的Model的某个字段合并成String\"></a>将数组中的Model的某个字段合并成String</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#假设listArray中是User实体，有一个Name字段</span><br><span class=\"line\">[[listArray valueForKey:@“Name”] componentsJoinedByString:@<span class=\"string\">\"\\n\"</span>]</span><br></pre></td></tr></table></figure>\n<h5 id=\"设置NavigationBarItem的Title，可以让其与Tabbar的Title区分开\"><a href=\"#设置NavigationBarItem的Title，可以让其与Tabbar的Title区分开\" class=\"headerlink\" title=\"设置NavigationBarItem的Title，可以让其与Tabbar的Title区分开\"></a>设置NavigationBarItem的Title，可以让其与Tabbar的Title区分开</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">self.navigationItem.title = @“Home”;</span><br></pre></td></tr></table></figure>\n<h5 id=\"通过设置Cell的Custom-Insets来替代自定义View的分割线\"><a href=\"#通过设置Cell的Custom-Insets来替代自定义View的分割线\" class=\"headerlink\" title=\"通过设置Cell的Custom Insets来替代自定义View的分割线\"></a>通过设置Cell的Custom Insets来替代自定义View的分割线</h5><p><img src=\"/uploads/cell-insets.png\" alt></p>\n<h3 id=\"Xcode\"><a href=\"#Xcode\" class=\"headerlink\" title=\"Xcode\"></a>Xcode</h3><ol>\n<li>按住Shift可以一次选择多个AutoLayout约束</li>\n<li>按住Ctrl,再点按Alt可以Toggle设置是否添加Margin</li>\n<li>Ctrl+Command+↑切换h与m文件（Objective-C使用）</li>\n<li>给类改名，并修改相关引用地方的类名<br><img src=\"/uploads/xcode-rename.png\" alt></li>\n</ol>\n<p><img src=\"/uploads/xcode-rename-relation.png\" alt></p>\n<h4 id=\"屏蔽Xcode8自带log\"><a href=\"#屏蔽Xcode8自带log\" class=\"headerlink\" title=\"屏蔽Xcode8自带log\"></a>屏蔽Xcode8自带log</h4><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"symbol\">http:</span>/<span class=\"regexp\">/stackoverflow.com/questions</span><span class=\"regexp\">/37800790/hide</span>-strange-unwanted-xcode-<span class=\"number\">8</span>-logs](<span class=\"symbol\">http:</span>/<span class=\"regexp\">/stackoverflow.com/questions</span><span class=\"regexp\">/37800790/hide</span>-strange-unwanted-xcode-<span class=\"number\">8</span>-logs)</span><br><span class=\"line\"><span class=\"number\">1</span>- From Xcode menu <span class=\"symbol\">open:</span> Product &gt; Scheme &gt; Edit Scheme</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">2</span>- On your Environment Variables set OS_ACTIVITY_MODE = disable</span><br></pre></td></tr></table></figure>\n<h3 id=\"Xcode8-注释快捷键\"><a href=\"#Xcode8-注释快捷键\" class=\"headerlink\" title=\"Xcode8 注释快捷键\"></a>Xcode8 注释快捷键</h3><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Option+Command+<span class=\"regexp\">/</span></span><br></pre></td></tr></table></figure>"},{"title":"配置多个SSH Keygen","comment":true,"date":"2016-12-08T02:16:06.000Z","_content":"\n```ruby\nssh-keygen -t rsa -C \"YourMail@github.com\" -f ~/.ssh/github_rsa\n```\n\n## 添加到私钥列表\n```ruby\nssh-add ~/.ssh/id_rsa\nssh-add ~/.ssh/github_rsa\n```\n\n## 查看私钥列表\n```ruby\n# 可以通过 ssh-add -l 来确私钥列表\nssh-add -l\n\n# 可以通过 ssh-add -D 来清空私钥列表\nssh-add -D\n```\n\n## 添加配置\n```ruby\ncd ~/.ssh\ntouch config\n```\n\n## 添加配置内容\n```ruby\nHost github.com\n    HostName github.com\n    PreferredAuthentications publickey #认证类型为私钥\n    IdentityFile ~/.ssh/github_rsa\n```\n\n## 添加github_rsa.pub内容到github的SSH KEY列表\n```ruby\ncat ~/.ssh/github_rsa.pub\n```\n\n## 测试\n```ruby\n⇒  ssh -T git@github.com\n\n# 会提示， 说明已经配置成功\nHi welsonla! You've successfully authenticated, but GitHub does not provide shell access.\n```\n\n### 参考资料\n[https://my.oschina.net/stefanzhlg/blog/529403](https://my.oschina.net/stefanzhlg/blog/529403)  \n[http://riny.net/2014/git-ssh-key/](http://riny.net/2014/git-ssh-key/)\n","source":"_posts/2016-12-08-multiple-ssh-key-config.md","raw":"title: 配置多个SSH Keygen\ncomment: true\ndate: 2016-12-08 10:16:06\ncategories:\n---\n\n```ruby\nssh-keygen -t rsa -C \"YourMail@github.com\" -f ~/.ssh/github_rsa\n```\n\n## 添加到私钥列表\n```ruby\nssh-add ~/.ssh/id_rsa\nssh-add ~/.ssh/github_rsa\n```\n\n## 查看私钥列表\n```ruby\n# 可以通过 ssh-add -l 来确私钥列表\nssh-add -l\n\n# 可以通过 ssh-add -D 来清空私钥列表\nssh-add -D\n```\n\n## 添加配置\n```ruby\ncd ~/.ssh\ntouch config\n```\n\n## 添加配置内容\n```ruby\nHost github.com\n    HostName github.com\n    PreferredAuthentications publickey #认证类型为私钥\n    IdentityFile ~/.ssh/github_rsa\n```\n\n## 添加github_rsa.pub内容到github的SSH KEY列表\n```ruby\ncat ~/.ssh/github_rsa.pub\n```\n\n## 测试\n```ruby\n⇒  ssh -T git@github.com\n\n# 会提示， 说明已经配置成功\nHi welsonla! You've successfully authenticated, but GitHub does not provide shell access.\n```\n\n### 参考资料\n[https://my.oschina.net/stefanzhlg/blog/529403](https://my.oschina.net/stefanzhlg/blog/529403)  \n[http://riny.net/2014/git-ssh-key/](http://riny.net/2014/git-ssh-key/)\n","slug":"multiple-ssh-key-config","published":1,"updated":"2020-01-01T02:23:42.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clb0uhkd7001vo63khnxorndq","content":"<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa -C <span class=\"string\">\"YourMail@github.com\"</span> -f ~<span class=\"regexp\">/.ssh/github</span>_rsa</span><br></pre></td></tr></table></figure>\n<h2 id=\"添加到私钥列表\"><a href=\"#添加到私钥列表\" class=\"headerlink\" title=\"添加到私钥列表\"></a>添加到私钥列表</h2><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-add ~<span class=\"regexp\">/.ssh/id</span>_rsa</span><br><span class=\"line\">ssh-add ~<span class=\"regexp\">/.ssh/github</span>_rsa</span><br></pre></td></tr></table></figure>\n<h2 id=\"查看私钥列表\"><a href=\"#查看私钥列表\" class=\"headerlink\" title=\"查看私钥列表\"></a>查看私钥列表</h2><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 可以通过 ssh-add -l 来确私钥列表</span></span><br><span class=\"line\">ssh-add -l</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 可以通过 ssh-add -D 来清空私钥列表</span></span><br><span class=\"line\">ssh-add -D</span><br></pre></td></tr></table></figure>\n<h2 id=\"添加配置\"><a href=\"#添加配置\" class=\"headerlink\" title=\"添加配置\"></a>添加配置</h2><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd ~<span class=\"regexp\">/.ssh</span></span><br><span class=\"line\"><span class=\"regexp\">touch config</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"添加配置内容\"><a href=\"#添加配置内容\" class=\"headerlink\" title=\"添加配置内容\"></a>添加配置内容</h2><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Host github.com</span><br><span class=\"line\">    HostName github.com</span><br><span class=\"line\">    PreferredAuthentications publickey <span class=\"comment\">#认证类型为私钥</span></span><br><span class=\"line\">    IdentityFile ~<span class=\"regexp\">/.ssh/github</span>_rsa</span><br></pre></td></tr></table></figure>\n<h2 id=\"添加github-rsa-pub内容到github的SSH-KEY列表\"><a href=\"#添加github-rsa-pub内容到github的SSH-KEY列表\" class=\"headerlink\" title=\"添加github_rsa.pub内容到github的SSH KEY列表\"></a>添加github_rsa.pub内容到github的SSH KEY列表</h2><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat ~<span class=\"regexp\">/.ssh/github</span>_rsa.pub</span><br></pre></td></tr></table></figure>\n<h2 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h2><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">⇒  ssh -T git@github.com</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 会提示， 说明已经配置成功</span></span><br><span class=\"line\">Hi welsonla! You<span class=\"string\">'ve successfully authenticated, but GitHub does not provide shell access.</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h3><p><a href=\"https://my.oschina.net/stefanzhlg/blog/529403\" target=\"_blank\" rel=\"noopener\">https://my.oschina.net/stefanzhlg/blog/529403</a><br><a href=\"http://riny.net/2014/git-ssh-key/\" target=\"_blank\" rel=\"noopener\">http://riny.net/2014/git-ssh-key/</a></p>\n","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa -C <span class=\"string\">\"YourMail@github.com\"</span> -f ~<span class=\"regexp\">/.ssh/github</span>_rsa</span><br></pre></td></tr></table></figure>\n<h2 id=\"添加到私钥列表\"><a href=\"#添加到私钥列表\" class=\"headerlink\" title=\"添加到私钥列表\"></a>添加到私钥列表</h2><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-add ~<span class=\"regexp\">/.ssh/id</span>_rsa</span><br><span class=\"line\">ssh-add ~<span class=\"regexp\">/.ssh/github</span>_rsa</span><br></pre></td></tr></table></figure>\n<h2 id=\"查看私钥列表\"><a href=\"#查看私钥列表\" class=\"headerlink\" title=\"查看私钥列表\"></a>查看私钥列表</h2><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 可以通过 ssh-add -l 来确私钥列表</span></span><br><span class=\"line\">ssh-add -l</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 可以通过 ssh-add -D 来清空私钥列表</span></span><br><span class=\"line\">ssh-add -D</span><br></pre></td></tr></table></figure>\n<h2 id=\"添加配置\"><a href=\"#添加配置\" class=\"headerlink\" title=\"添加配置\"></a>添加配置</h2><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd ~<span class=\"regexp\">/.ssh</span></span><br><span class=\"line\"><span class=\"regexp\">touch config</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"添加配置内容\"><a href=\"#添加配置内容\" class=\"headerlink\" title=\"添加配置内容\"></a>添加配置内容</h2><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Host github.com</span><br><span class=\"line\">    HostName github.com</span><br><span class=\"line\">    PreferredAuthentications publickey <span class=\"comment\">#认证类型为私钥</span></span><br><span class=\"line\">    IdentityFile ~<span class=\"regexp\">/.ssh/github</span>_rsa</span><br></pre></td></tr></table></figure>\n<h2 id=\"添加github-rsa-pub内容到github的SSH-KEY列表\"><a href=\"#添加github-rsa-pub内容到github的SSH-KEY列表\" class=\"headerlink\" title=\"添加github_rsa.pub内容到github的SSH KEY列表\"></a>添加github_rsa.pub内容到github的SSH KEY列表</h2><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat ~<span class=\"regexp\">/.ssh/github</span>_rsa.pub</span><br></pre></td></tr></table></figure>\n<h2 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h2><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">⇒  ssh -T git@github.com</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 会提示， 说明已经配置成功</span></span><br><span class=\"line\">Hi welsonla! You<span class=\"string\">'ve successfully authenticated, but GitHub does not provide shell access.</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h3><p><a href=\"https://my.oschina.net/stefanzhlg/blog/529403\" target=\"_blank\" rel=\"noopener\">https://my.oschina.net/stefanzhlg/blog/529403</a><br><a href=\"http://riny.net/2014/git-ssh-key/\" target=\"_blank\" rel=\"noopener\">http://riny.net/2014/git-ssh-key/</a></p>\n"},{"title":"heroku command","comment":true,"date":"2017-07-13T06:55:36.000Z","_content":"记录一些经常使用到的一些heroku管理命令\n\n# login\n```\nheroku login\n```\n\n# show apps info\n展示你app的一些信息\n```\nheroku apps:info\n```\n\n# deploy\n推送代码并部署\n```\ngit push heroku  master\n```\n\n# ssh \n远程到你app目录项目，可以操作远程的一些文件，相当于ssh登录\n```\nheroku run bash\n```\n\n# log\n查看实时输出的log\n```\nheroku logs -t\n```","source":"_posts/2017-07-13-heroku-command.md","raw":"title: heroku command\ncomment: true\ndate: 2017-07-13 14:55:36\ncategories:  工具控\n---\n记录一些经常使用到的一些heroku管理命令\n\n# login\n```\nheroku login\n```\n\n# show apps info\n展示你app的一些信息\n```\nheroku apps:info\n```\n\n# deploy\n推送代码并部署\n```\ngit push heroku  master\n```\n\n# ssh \n远程到你app目录项目，可以操作远程的一些文件，相当于ssh登录\n```\nheroku run bash\n```\n\n# log\n查看实时输出的log\n```\nheroku logs -t\n```","slug":"heroku-command","published":1,"updated":"2020-01-01T02:23:42.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clb0uhkd9001xo63knqsp102w","content":"<p>记录一些经常使用到的一些heroku管理命令</p>\n<h1 id=\"login\"><a href=\"#login\" class=\"headerlink\" title=\"login\"></a>login</h1><figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">heroku login</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"show-apps-info\"><a href=\"#show-apps-info\" class=\"headerlink\" title=\"show apps info\"></a>show apps info</h1><p>展示你app的一些信息<br><figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">heroku</span> apps:<span class=\"literal\">info</span></span><br></pre></td></tr></table></figure></p>\n<h1 id=\"deploy\"><a href=\"#deploy\" class=\"headerlink\" title=\"deploy\"></a>deploy</h1><p>推送代码并部署<br><figure class=\"highlight armasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">git</span> <span class=\"keyword\">push </span>heroku  master</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"ssh\"><a href=\"#ssh\" class=\"headerlink\" title=\"ssh\"></a>ssh</h1><p>远程到你app目录项目，可以操作远程的一些文件，相当于ssh登录<br><figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">heroku <span class=\"keyword\">run</span><span class=\"bash\"> bash</span></span><br></pre></td></tr></table></figure></p>\n<h1 id=\"log\"><a href=\"#log\" class=\"headerlink\" title=\"log\"></a>log</h1><p>查看实时输出的log<br><figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">heroku logs -t</span></span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>记录一些经常使用到的一些heroku管理命令</p>\n<h1 id=\"login\"><a href=\"#login\" class=\"headerlink\" title=\"login\"></a>login</h1><figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">heroku login</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"show-apps-info\"><a href=\"#show-apps-info\" class=\"headerlink\" title=\"show apps info\"></a>show apps info</h1><p>展示你app的一些信息<br><figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">heroku</span> apps:<span class=\"literal\">info</span></span><br></pre></td></tr></table></figure></p>\n<h1 id=\"deploy\"><a href=\"#deploy\" class=\"headerlink\" title=\"deploy\"></a>deploy</h1><p>推送代码并部署<br><figure class=\"highlight armasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">git</span> <span class=\"keyword\">push </span>heroku  master</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"ssh\"><a href=\"#ssh\" class=\"headerlink\" title=\"ssh\"></a>ssh</h1><p>远程到你app目录项目，可以操作远程的一些文件，相当于ssh登录<br><figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">heroku <span class=\"keyword\">run</span><span class=\"bash\"> bash</span></span><br></pre></td></tr></table></figure></p>\n<h1 id=\"log\"><a href=\"#log\" class=\"headerlink\" title=\"log\"></a>log</h1><p>查看实时输出的log<br><figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">heroku logs -t</span></span><br></pre></td></tr></table></figure></p>\n"},{"title":"使用Fastlane","comment":true,"date":"2017-07-13T05:59:36.000Z","_content":"\n## 相关介绍\nFastlane最初由KrauseFx([Github](https://github.com/KrauseFx), [Twitter](https://twitter.com/krausefx)) 发起，现在已经有百位代码和插件贡献者，丰富的Action与Plugin可以满足众多个性化的需求，目前官方主要的工具如下(来自fastlane项目Github页面), 但不仅限于此。\n\n![](/uploads/WX20170525-112539.png)\n\n## 相关文档\n[Github主页](https://github.com/fastlane/fastlane)\n[Gem主页](https://rubygems.org/gems/fastlane)\n[官方文档](https://docs.fastlane.tools/)\n\n## Install\nFastlane是用ruby写的一套程序，最简单的方式是使用gem的方式来安装\n```\ngem install fastlane\n```\n\n## 初始化你的项目\n创建Gemfile主要是为了让其他人安装的Gem保持统一，Cocoapods之后也可以用Gemfile来做统一的管理\n```\nbundle init\necho 'gem \"fastlane\"' >> Gemfile\nbundle install\n```\n\n## init\ninit期间会让你输入AppleID，如果该应用存在，Fastlane会通过iTunesConnect拉取应用的metadata和所有的App截图，如果不存在，会提示你是否在iTunesConnect中创建一个新的App\n```\nfastlane init\n```\n\n安装完之后，会在项目中产生一个fastlane目录，使用`tree`命令查看结构如下\n```\n├── Appfile\n├── Deliverfile\n├── Fastfile\n├── README.md\n├── metadata\n│   ├── some metadata file ...\n├── report.xml\n└── screenshots\n    └── README.txt\n```\n\n\n**Appfile** 记录了你appid，apple id，team id等信息\n**Deliverfile** 记录了bundle与appleid信息\n**Fastfile** 是我们打包使用到的主要文件，这里面可以自定义你的流程\n**metadata** 是通过iTunesConnect获取到的app的信息文件，包括介绍\n**screenshots** 保存了所有的截图信息\n\n\n## 一个简单的Fastfile流程\n```\nlane :beta do\n  git_pull\n  increment_build_number \t\t\t\t#build number更新\n\tcocoapods \t\t\t\t\t\t\t#安装cocoapods \n     gym(\n       scheme: \"MyScheme\",          #主Target\n       output_directory:\"./build\",  #导出目录\n       export_method: \"development\" #导出方式\n    )\n\t  sh \"./customScript.sh\" \t\t\t#执行你的脚本文件或Shell命令\nend\n```\n\n更多关于gym的配置参数，可以参见 [Actions - fastlane docs](https://docs.fastlane.tools/actions/#gym)\n\n**每个Action下面都有Example和Parameters，默认是收起状态** \n\n![](/uploads/WX20170605-134929.png)\n\n\n\n 通过执行`fastlane beta` 就可以进行打包，并且`dYSM`和`ipa`文件会导出到我们指定的项目下的`build`目录下面\n```\nfastlane beta\n```\n\n### fastlane文件结构\n```\nfastlane_version \"2.44.1\"\n\ndefault_platform :ios\n\nplatform :ios do\n\n  #1. 开始前的一些操作，如代码更新(git_pull)\n  before_all do\n  end\n\n\n  #2. 打包一个测试版本\n  desc \"build a beta version\"\n  lane :beta do\n\n    gym(\n      export_method: \"ad-hoc\",\n      output_directory: \"./build\",\n    ) \n  end\n\n  #3. 打包一个线上版本，并上传\n  lane :release do\n    gym(\n     \texport_method: \"app-store\"\n    )\n    deliver(force: true)\n  end\n\n  #4.打包结束操作\n  after_all do |lane|\n  \t#打开导出目录\n\tsh \"open ./build\"\n  end\n\n  #5. 捕获错误\n  error do |lane, exception|\n  end\nend\n```\n\n## 一些常用命令\n```\n# 列出现有的所有action\nfastlane actions\n\n# 列出所有lane任务\nfastlane list\n\n# 创建一个新的Action\nfastlane new_action\n\n# 打印环境变量，Fastfile中可以`ENV['PWD']`使用这些变量\nfastlane env\n\n# 显示本机Provision文件\nsecurity find-identity -v -p codesigning\n```\n\n## 常见问题可以参见或官方issues\n[https://docs.fastlane.tools/codesigning/troubleshooting/](https://docs.fastlane.tools/codesigning/troubleshooting/)\n[Issues · fastlane/fastlane · GitHub](https://github.com/fastlane/fastlane/issues)\n\n\n## 参考文档\n[Fastlane](https://github.com/fastlane/fastlane)  \n[Fastlane对应的Gem主页](https://rubygems.org/gems/fastlane)  \n[Fastlane官方文档](https://docs.fastlane.tools/)  \n[Fastlane实战（一）：移动开发自动化之道](http://www.jianshu.com/p/1aebb0854c78)   \n[Fastlane实战（二）：Action和Plugin机制](http://www.jianshu.com/p/0520192c9bd7)  \n[Fastlane实战（五）：高级用法](http://www.jianshu.com/p/faae6f95cbd8)  \n[fastlane actions](https://docs.fastlane.tools/actions/#building)  \n[Advanced fastlane](https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Advanced.md)  \n\n\n\n\n","source":"_posts/2017-07-13-using-fastlane.md","raw":"title: 使用Fastlane\ncomment: true\ndate: 2017-07-13 13:59:36\ncategories: 自动化\n---\n\n## 相关介绍\nFastlane最初由KrauseFx([Github](https://github.com/KrauseFx), [Twitter](https://twitter.com/krausefx)) 发起，现在已经有百位代码和插件贡献者，丰富的Action与Plugin可以满足众多个性化的需求，目前官方主要的工具如下(来自fastlane项目Github页面), 但不仅限于此。\n\n![](/uploads/WX20170525-112539.png)\n\n## 相关文档\n[Github主页](https://github.com/fastlane/fastlane)\n[Gem主页](https://rubygems.org/gems/fastlane)\n[官方文档](https://docs.fastlane.tools/)\n\n## Install\nFastlane是用ruby写的一套程序，最简单的方式是使用gem的方式来安装\n```\ngem install fastlane\n```\n\n## 初始化你的项目\n创建Gemfile主要是为了让其他人安装的Gem保持统一，Cocoapods之后也可以用Gemfile来做统一的管理\n```\nbundle init\necho 'gem \"fastlane\"' >> Gemfile\nbundle install\n```\n\n## init\ninit期间会让你输入AppleID，如果该应用存在，Fastlane会通过iTunesConnect拉取应用的metadata和所有的App截图，如果不存在，会提示你是否在iTunesConnect中创建一个新的App\n```\nfastlane init\n```\n\n安装完之后，会在项目中产生一个fastlane目录，使用`tree`命令查看结构如下\n```\n├── Appfile\n├── Deliverfile\n├── Fastfile\n├── README.md\n├── metadata\n│   ├── some metadata file ...\n├── report.xml\n└── screenshots\n    └── README.txt\n```\n\n\n**Appfile** 记录了你appid，apple id，team id等信息\n**Deliverfile** 记录了bundle与appleid信息\n**Fastfile** 是我们打包使用到的主要文件，这里面可以自定义你的流程\n**metadata** 是通过iTunesConnect获取到的app的信息文件，包括介绍\n**screenshots** 保存了所有的截图信息\n\n\n## 一个简单的Fastfile流程\n```\nlane :beta do\n  git_pull\n  increment_build_number \t\t\t\t#build number更新\n\tcocoapods \t\t\t\t\t\t\t#安装cocoapods \n     gym(\n       scheme: \"MyScheme\",          #主Target\n       output_directory:\"./build\",  #导出目录\n       export_method: \"development\" #导出方式\n    )\n\t  sh \"./customScript.sh\" \t\t\t#执行你的脚本文件或Shell命令\nend\n```\n\n更多关于gym的配置参数，可以参见 [Actions - fastlane docs](https://docs.fastlane.tools/actions/#gym)\n\n**每个Action下面都有Example和Parameters，默认是收起状态** \n\n![](/uploads/WX20170605-134929.png)\n\n\n\n 通过执行`fastlane beta` 就可以进行打包，并且`dYSM`和`ipa`文件会导出到我们指定的项目下的`build`目录下面\n```\nfastlane beta\n```\n\n### fastlane文件结构\n```\nfastlane_version \"2.44.1\"\n\ndefault_platform :ios\n\nplatform :ios do\n\n  #1. 开始前的一些操作，如代码更新(git_pull)\n  before_all do\n  end\n\n\n  #2. 打包一个测试版本\n  desc \"build a beta version\"\n  lane :beta do\n\n    gym(\n      export_method: \"ad-hoc\",\n      output_directory: \"./build\",\n    ) \n  end\n\n  #3. 打包一个线上版本，并上传\n  lane :release do\n    gym(\n     \texport_method: \"app-store\"\n    )\n    deliver(force: true)\n  end\n\n  #4.打包结束操作\n  after_all do |lane|\n  \t#打开导出目录\n\tsh \"open ./build\"\n  end\n\n  #5. 捕获错误\n  error do |lane, exception|\n  end\nend\n```\n\n## 一些常用命令\n```\n# 列出现有的所有action\nfastlane actions\n\n# 列出所有lane任务\nfastlane list\n\n# 创建一个新的Action\nfastlane new_action\n\n# 打印环境变量，Fastfile中可以`ENV['PWD']`使用这些变量\nfastlane env\n\n# 显示本机Provision文件\nsecurity find-identity -v -p codesigning\n```\n\n## 常见问题可以参见或官方issues\n[https://docs.fastlane.tools/codesigning/troubleshooting/](https://docs.fastlane.tools/codesigning/troubleshooting/)\n[Issues · fastlane/fastlane · GitHub](https://github.com/fastlane/fastlane/issues)\n\n\n## 参考文档\n[Fastlane](https://github.com/fastlane/fastlane)  \n[Fastlane对应的Gem主页](https://rubygems.org/gems/fastlane)  \n[Fastlane官方文档](https://docs.fastlane.tools/)  \n[Fastlane实战（一）：移动开发自动化之道](http://www.jianshu.com/p/1aebb0854c78)   \n[Fastlane实战（二）：Action和Plugin机制](http://www.jianshu.com/p/0520192c9bd7)  \n[Fastlane实战（五）：高级用法](http://www.jianshu.com/p/faae6f95cbd8)  \n[fastlane actions](https://docs.fastlane.tools/actions/#building)  \n[Advanced fastlane](https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Advanced.md)  \n\n\n\n\n","slug":"using-fastlane","published":1,"updated":"2020-01-01T02:23:42.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clb0uhkda001zo63k87asxi3l","content":"<h2 id=\"相关介绍\"><a href=\"#相关介绍\" class=\"headerlink\" title=\"相关介绍\"></a>相关介绍</h2><p>Fastlane最初由KrauseFx(<a href=\"https://github.com/KrauseFx\" target=\"_blank\" rel=\"noopener\">Github</a>, <a href=\"https://twitter.com/krausefx\" target=\"_blank\" rel=\"noopener\">Twitter</a>) 发起，现在已经有百位代码和插件贡献者，丰富的Action与Plugin可以满足众多个性化的需求，目前官方主要的工具如下(来自fastlane项目Github页面), 但不仅限于此。</p>\n<p><img src=\"/uploads/WX20170525-112539.png\" alt></p>\n<h2 id=\"相关文档\"><a href=\"#相关文档\" class=\"headerlink\" title=\"相关文档\"></a>相关文档</h2><p><a href=\"https://github.com/fastlane/fastlane\" target=\"_blank\" rel=\"noopener\">Github主页</a><br><a href=\"https://rubygems.org/gems/fastlane\" target=\"_blank\" rel=\"noopener\">Gem主页</a><br><a href=\"https://docs.fastlane.tools/\" target=\"_blank\" rel=\"noopener\">官方文档</a></p>\n<h2 id=\"Install\"><a href=\"#Install\" class=\"headerlink\" title=\"Install\"></a>Install</h2><p>Fastlane是用ruby写的一套程序，最简单的方式是使用gem的方式来安装<br><figure class=\"highlight cmake\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gem <span class=\"keyword\">install</span> fastlane</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"初始化你的项目\"><a href=\"#初始化你的项目\" class=\"headerlink\" title=\"初始化你的项目\"></a>初始化你的项目</h2><p>创建Gemfile主要是为了让其他人安装的Gem保持统一，Cocoapods之后也可以用Gemfile来做统一的管理<br><figure class=\"highlight properties\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">bundle</span> <span class=\"string\">init</span></span><br><span class=\"line\"><span class=\"attr\">echo</span> <span class=\"string\">'gem \"fastlane\"' &gt;&gt; Gemfile</span></span><br><span class=\"line\"><span class=\"attr\">bundle</span> <span class=\"string\">install</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"init\"><a href=\"#init\" class=\"headerlink\" title=\"init\"></a>init</h2><p>init期间会让你输入AppleID，如果该应用存在，Fastlane会通过iTunesConnect拉取应用的metadata和所有的App截图，如果不存在，会提示你是否在iTunesConnect中创建一个新的App<br><figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">fastlane init</span></span><br></pre></td></tr></table></figure></p>\n<p>安装完之后，会在项目中产生一个fastlane目录，使用<code>tree</code>命令查看结构如下<br><figure class=\"highlight reasonml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">├── Appfile</span><br><span class=\"line\">├── Deliverfile</span><br><span class=\"line\">├── Fastfile</span><br><span class=\"line\">├── <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">README</span>.</span></span>md</span><br><span class=\"line\">├── metadata</span><br><span class=\"line\">│   ├── some metadata file ...</span><br><span class=\"line\">├── report.xml</span><br><span class=\"line\">└── screenshots</span><br><span class=\"line\">    └── <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">README</span>.</span></span>txt</span><br></pre></td></tr></table></figure></p>\n<p><strong>Appfile</strong> 记录了你appid，apple id，team id等信息<br><strong>Deliverfile</strong> 记录了bundle与appleid信息<br><strong>Fastfile</strong> 是我们打包使用到的主要文件，这里面可以自定义你的流程<br><strong>metadata</strong> 是通过iTunesConnect获取到的app的信息文件，包括介绍<br><strong>screenshots</strong> 保存了所有的截图信息</p>\n<h2 id=\"一个简单的Fastfile流程\"><a href=\"#一个简单的Fastfile流程\" class=\"headerlink\" title=\"一个简单的Fastfile流程\"></a>一个简单的Fastfile流程</h2><figure class=\"highlight dts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">lane :beta do</span><br><span class=\"line\">  git_pull</span><br><span class=\"line\">  increment_build_number \t\t\t\t<span class=\"meta\">#build number更新</span></span><br><span class=\"line\">\tcocoapods \t\t\t\t\t\t\t<span class=\"meta\">#安装cocoapods </span></span><br><span class=\"line\">     gym(</span><br><span class=\"line\"><span class=\"symbol\">       scheme:</span> <span class=\"string\">\"MyScheme\"</span>,          <span class=\"meta\">#主Target</span></span><br><span class=\"line\"><span class=\"symbol\">       output_directory:</span><span class=\"string\">\"./build\"</span>,  <span class=\"meta\">#导出目录</span></span><br><span class=\"line\"><span class=\"symbol\">       export_method:</span> <span class=\"string\">\"development\"</span> <span class=\"meta\">#导出方式</span></span><br><span class=\"line\">    )</span><br><span class=\"line\">\t  sh <span class=\"string\">\"./customScript.sh\"</span> \t\t\t<span class=\"meta\">#执行你的脚本文件或Shell命令</span></span><br><span class=\"line\">end</span><br></pre></td></tr></table></figure>\n<p>更多关于gym的配置参数，可以参见 <a href=\"https://docs.fastlane.tools/actions/#gym\" target=\"_blank\" rel=\"noopener\">Actions - fastlane docs</a></p>\n<p><strong>每个Action下面都有Example和Parameters，默认是收起状态</strong> </p>\n<p><img src=\"/uploads/WX20170605-134929.png\" alt></p>\n<p> 通过执行<code>fastlane beta</code> 就可以进行打包，并且<code>dYSM</code>和<code>ipa</code>文件会导出到我们指定的项目下的<code>build</code>目录下面<br><figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">fastlane beta</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"fastlane文件结构\"><a href=\"#fastlane文件结构\" class=\"headerlink\" title=\"fastlane文件结构\"></a>fastlane文件结构</h3><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fastlane_version <span class=\"string\">\"2.44.1\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">default_platform <span class=\"symbol\">:ios</span></span><br><span class=\"line\"></span><br><span class=\"line\">platform <span class=\"symbol\">:ios</span> <span class=\"keyword\">do</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">#1. 开始前的一些操作，如代码更新(git_pull)</span></span><br><span class=\"line\">  before_all <span class=\"keyword\">do</span></span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">#2. 打包一个测试版本</span></span><br><span class=\"line\">  desc <span class=\"string\">\"build a beta version\"</span></span><br><span class=\"line\">  lane <span class=\"symbol\">:beta</span> <span class=\"keyword\">do</span></span><br><span class=\"line\"></span><br><span class=\"line\">    gym(</span><br><span class=\"line\">      <span class=\"symbol\">export_method:</span> <span class=\"string\">\"ad-hoc\"</span>,</span><br><span class=\"line\">      <span class=\"symbol\">output_directory:</span> <span class=\"string\">\"./build\"</span>,</span><br><span class=\"line\">    ) </span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">#3. 打包一个线上版本，并上传</span></span><br><span class=\"line\">  lane <span class=\"symbol\">:release</span> <span class=\"keyword\">do</span></span><br><span class=\"line\">    gym(</span><br><span class=\"line\">     \t<span class=\"symbol\">export_method:</span> <span class=\"string\">\"app-store\"</span></span><br><span class=\"line\">    )</span><br><span class=\"line\">    deliver(<span class=\"symbol\">force:</span> <span class=\"literal\">true</span>)</span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">#4.打包结束操作</span></span><br><span class=\"line\">  after_all <span class=\"keyword\">do</span> <span class=\"params\">|lane|</span></span><br><span class=\"line\">  \t<span class=\"comment\">#打开导出目录</span></span><br><span class=\"line\">\tsh <span class=\"string\">\"open ./build\"</span></span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">#5. 捕获错误</span></span><br><span class=\"line\">  error <span class=\"keyword\">do</span> <span class=\"params\">|lane, exception|</span></span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"一些常用命令\"><a href=\"#一些常用命令\" class=\"headerlink\" title=\"一些常用命令\"></a>一些常用命令</h2><figure class=\"highlight properties\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 列出现有的所有action</span></span><br><span class=\"line\"><span class=\"attr\">fastlane</span> <span class=\"string\">actions</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 列出所有lane任务</span></span><br><span class=\"line\"><span class=\"attr\">fastlane</span> <span class=\"string\">list</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建一个新的Action</span></span><br><span class=\"line\"><span class=\"attr\">fastlane</span> <span class=\"string\">new_action</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 打印环境变量，Fastfile中可以`ENV['PWD']`使用这些变量</span></span><br><span class=\"line\"><span class=\"attr\">fastlane</span> <span class=\"string\">env</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 显示本机Provision文件</span></span><br><span class=\"line\"><span class=\"attr\">security</span> <span class=\"string\">find-identity -v -p codesigning</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"常见问题可以参见或官方issues\"><a href=\"#常见问题可以参见或官方issues\" class=\"headerlink\" title=\"常见问题可以参见或官方issues\"></a>常见问题可以参见或官方issues</h2><p><a href=\"https://docs.fastlane.tools/codesigning/troubleshooting/\" target=\"_blank\" rel=\"noopener\">https://docs.fastlane.tools/codesigning/troubleshooting/</a><br><a href=\"https://github.com/fastlane/fastlane/issues\" target=\"_blank\" rel=\"noopener\">Issues · fastlane/fastlane · GitHub</a></p>\n<h2 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h2><p><a href=\"https://github.com/fastlane/fastlane\" target=\"_blank\" rel=\"noopener\">Fastlane</a><br><a href=\"https://rubygems.org/gems/fastlane\" target=\"_blank\" rel=\"noopener\">Fastlane对应的Gem主页</a><br><a href=\"https://docs.fastlane.tools/\" target=\"_blank\" rel=\"noopener\">Fastlane官方文档</a><br><a href=\"http://www.jianshu.com/p/1aebb0854c78\" target=\"_blank\" rel=\"noopener\">Fastlane实战（一）：移动开发自动化之道</a><br><a href=\"http://www.jianshu.com/p/0520192c9bd7\" target=\"_blank\" rel=\"noopener\">Fastlane实战（二）：Action和Plugin机制</a><br><a href=\"http://www.jianshu.com/p/faae6f95cbd8\" target=\"_blank\" rel=\"noopener\">Fastlane实战（五）：高级用法</a><br><a href=\"https://docs.fastlane.tools/actions/#building\" target=\"_blank\" rel=\"noopener\">fastlane actions</a><br><a href=\"https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Advanced.md\" target=\"_blank\" rel=\"noopener\">Advanced fastlane</a>  </p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"相关介绍\"><a href=\"#相关介绍\" class=\"headerlink\" title=\"相关介绍\"></a>相关介绍</h2><p>Fastlane最初由KrauseFx(<a href=\"https://github.com/KrauseFx\" target=\"_blank\" rel=\"noopener\">Github</a>, <a href=\"https://twitter.com/krausefx\" target=\"_blank\" rel=\"noopener\">Twitter</a>) 发起，现在已经有百位代码和插件贡献者，丰富的Action与Plugin可以满足众多个性化的需求，目前官方主要的工具如下(来自fastlane项目Github页面), 但不仅限于此。</p>\n<p><img src=\"/uploads/WX20170525-112539.png\" alt></p>\n<h2 id=\"相关文档\"><a href=\"#相关文档\" class=\"headerlink\" title=\"相关文档\"></a>相关文档</h2><p><a href=\"https://github.com/fastlane/fastlane\" target=\"_blank\" rel=\"noopener\">Github主页</a><br><a href=\"https://rubygems.org/gems/fastlane\" target=\"_blank\" rel=\"noopener\">Gem主页</a><br><a href=\"https://docs.fastlane.tools/\" target=\"_blank\" rel=\"noopener\">官方文档</a></p>\n<h2 id=\"Install\"><a href=\"#Install\" class=\"headerlink\" title=\"Install\"></a>Install</h2><p>Fastlane是用ruby写的一套程序，最简单的方式是使用gem的方式来安装<br><figure class=\"highlight cmake\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gem <span class=\"keyword\">install</span> fastlane</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"初始化你的项目\"><a href=\"#初始化你的项目\" class=\"headerlink\" title=\"初始化你的项目\"></a>初始化你的项目</h2><p>创建Gemfile主要是为了让其他人安装的Gem保持统一，Cocoapods之后也可以用Gemfile来做统一的管理<br><figure class=\"highlight properties\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">bundle</span> <span class=\"string\">init</span></span><br><span class=\"line\"><span class=\"attr\">echo</span> <span class=\"string\">'gem \"fastlane\"' &gt;&gt; Gemfile</span></span><br><span class=\"line\"><span class=\"attr\">bundle</span> <span class=\"string\">install</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"init\"><a href=\"#init\" class=\"headerlink\" title=\"init\"></a>init</h2><p>init期间会让你输入AppleID，如果该应用存在，Fastlane会通过iTunesConnect拉取应用的metadata和所有的App截图，如果不存在，会提示你是否在iTunesConnect中创建一个新的App<br><figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">fastlane init</span></span><br></pre></td></tr></table></figure></p>\n<p>安装完之后，会在项目中产生一个fastlane目录，使用<code>tree</code>命令查看结构如下<br><figure class=\"highlight reasonml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">├── Appfile</span><br><span class=\"line\">├── Deliverfile</span><br><span class=\"line\">├── Fastfile</span><br><span class=\"line\">├── <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">README</span>.</span></span>md</span><br><span class=\"line\">├── metadata</span><br><span class=\"line\">│   ├── some metadata file ...</span><br><span class=\"line\">├── report.xml</span><br><span class=\"line\">└── screenshots</span><br><span class=\"line\">    └── <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">README</span>.</span></span>txt</span><br></pre></td></tr></table></figure></p>\n<p><strong>Appfile</strong> 记录了你appid，apple id，team id等信息<br><strong>Deliverfile</strong> 记录了bundle与appleid信息<br><strong>Fastfile</strong> 是我们打包使用到的主要文件，这里面可以自定义你的流程<br><strong>metadata</strong> 是通过iTunesConnect获取到的app的信息文件，包括介绍<br><strong>screenshots</strong> 保存了所有的截图信息</p>\n<h2 id=\"一个简单的Fastfile流程\"><a href=\"#一个简单的Fastfile流程\" class=\"headerlink\" title=\"一个简单的Fastfile流程\"></a>一个简单的Fastfile流程</h2><figure class=\"highlight dts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">lane :beta do</span><br><span class=\"line\">  git_pull</span><br><span class=\"line\">  increment_build_number \t\t\t\t<span class=\"meta\">#build number更新</span></span><br><span class=\"line\">\tcocoapods \t\t\t\t\t\t\t<span class=\"meta\">#安装cocoapods </span></span><br><span class=\"line\">     gym(</span><br><span class=\"line\"><span class=\"symbol\">       scheme:</span> <span class=\"string\">\"MyScheme\"</span>,          <span class=\"meta\">#主Target</span></span><br><span class=\"line\"><span class=\"symbol\">       output_directory:</span><span class=\"string\">\"./build\"</span>,  <span class=\"meta\">#导出目录</span></span><br><span class=\"line\"><span class=\"symbol\">       export_method:</span> <span class=\"string\">\"development\"</span> <span class=\"meta\">#导出方式</span></span><br><span class=\"line\">    )</span><br><span class=\"line\">\t  sh <span class=\"string\">\"./customScript.sh\"</span> \t\t\t<span class=\"meta\">#执行你的脚本文件或Shell命令</span></span><br><span class=\"line\">end</span><br></pre></td></tr></table></figure>\n<p>更多关于gym的配置参数，可以参见 <a href=\"https://docs.fastlane.tools/actions/#gym\" target=\"_blank\" rel=\"noopener\">Actions - fastlane docs</a></p>\n<p><strong>每个Action下面都有Example和Parameters，默认是收起状态</strong> </p>\n<p><img src=\"/uploads/WX20170605-134929.png\" alt></p>\n<p> 通过执行<code>fastlane beta</code> 就可以进行打包，并且<code>dYSM</code>和<code>ipa</code>文件会导出到我们指定的项目下的<code>build</code>目录下面<br><figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">fastlane beta</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"fastlane文件结构\"><a href=\"#fastlane文件结构\" class=\"headerlink\" title=\"fastlane文件结构\"></a>fastlane文件结构</h3><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fastlane_version <span class=\"string\">\"2.44.1\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">default_platform <span class=\"symbol\">:ios</span></span><br><span class=\"line\"></span><br><span class=\"line\">platform <span class=\"symbol\">:ios</span> <span class=\"keyword\">do</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">#1. 开始前的一些操作，如代码更新(git_pull)</span></span><br><span class=\"line\">  before_all <span class=\"keyword\">do</span></span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">#2. 打包一个测试版本</span></span><br><span class=\"line\">  desc <span class=\"string\">\"build a beta version\"</span></span><br><span class=\"line\">  lane <span class=\"symbol\">:beta</span> <span class=\"keyword\">do</span></span><br><span class=\"line\"></span><br><span class=\"line\">    gym(</span><br><span class=\"line\">      <span class=\"symbol\">export_method:</span> <span class=\"string\">\"ad-hoc\"</span>,</span><br><span class=\"line\">      <span class=\"symbol\">output_directory:</span> <span class=\"string\">\"./build\"</span>,</span><br><span class=\"line\">    ) </span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">#3. 打包一个线上版本，并上传</span></span><br><span class=\"line\">  lane <span class=\"symbol\">:release</span> <span class=\"keyword\">do</span></span><br><span class=\"line\">    gym(</span><br><span class=\"line\">     \t<span class=\"symbol\">export_method:</span> <span class=\"string\">\"app-store\"</span></span><br><span class=\"line\">    )</span><br><span class=\"line\">    deliver(<span class=\"symbol\">force:</span> <span class=\"literal\">true</span>)</span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">#4.打包结束操作</span></span><br><span class=\"line\">  after_all <span class=\"keyword\">do</span> <span class=\"params\">|lane|</span></span><br><span class=\"line\">  \t<span class=\"comment\">#打开导出目录</span></span><br><span class=\"line\">\tsh <span class=\"string\">\"open ./build\"</span></span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">#5. 捕获错误</span></span><br><span class=\"line\">  error <span class=\"keyword\">do</span> <span class=\"params\">|lane, exception|</span></span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"一些常用命令\"><a href=\"#一些常用命令\" class=\"headerlink\" title=\"一些常用命令\"></a>一些常用命令</h2><figure class=\"highlight properties\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 列出现有的所有action</span></span><br><span class=\"line\"><span class=\"attr\">fastlane</span> <span class=\"string\">actions</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 列出所有lane任务</span></span><br><span class=\"line\"><span class=\"attr\">fastlane</span> <span class=\"string\">list</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建一个新的Action</span></span><br><span class=\"line\"><span class=\"attr\">fastlane</span> <span class=\"string\">new_action</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 打印环境变量，Fastfile中可以`ENV['PWD']`使用这些变量</span></span><br><span class=\"line\"><span class=\"attr\">fastlane</span> <span class=\"string\">env</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 显示本机Provision文件</span></span><br><span class=\"line\"><span class=\"attr\">security</span> <span class=\"string\">find-identity -v -p codesigning</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"常见问题可以参见或官方issues\"><a href=\"#常见问题可以参见或官方issues\" class=\"headerlink\" title=\"常见问题可以参见或官方issues\"></a>常见问题可以参见或官方issues</h2><p><a href=\"https://docs.fastlane.tools/codesigning/troubleshooting/\" target=\"_blank\" rel=\"noopener\">https://docs.fastlane.tools/codesigning/troubleshooting/</a><br><a href=\"https://github.com/fastlane/fastlane/issues\" target=\"_blank\" rel=\"noopener\">Issues · fastlane/fastlane · GitHub</a></p>\n<h2 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h2><p><a href=\"https://github.com/fastlane/fastlane\" target=\"_blank\" rel=\"noopener\">Fastlane</a><br><a href=\"https://rubygems.org/gems/fastlane\" target=\"_blank\" rel=\"noopener\">Fastlane对应的Gem主页</a><br><a href=\"https://docs.fastlane.tools/\" target=\"_blank\" rel=\"noopener\">Fastlane官方文档</a><br><a href=\"http://www.jianshu.com/p/1aebb0854c78\" target=\"_blank\" rel=\"noopener\">Fastlane实战（一）：移动开发自动化之道</a><br><a href=\"http://www.jianshu.com/p/0520192c9bd7\" target=\"_blank\" rel=\"noopener\">Fastlane实战（二）：Action和Plugin机制</a><br><a href=\"http://www.jianshu.com/p/faae6f95cbd8\" target=\"_blank\" rel=\"noopener\">Fastlane实战（五）：高级用法</a><br><a href=\"https://docs.fastlane.tools/actions/#building\" target=\"_blank\" rel=\"noopener\">fastlane actions</a><br><a href=\"https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Advanced.md\" target=\"_blank\" rel=\"noopener\">Advanced fastlane</a>  </p>\n"},{"title":"Xcode BuildNumber 自动更新","comment":true,"date":"2017-08-10T08:16:29.000Z","_content":"\n最近为了区分发包的id，从晚上找了一段代码\n原理就是，先用PlistBuddy获取当前的buildid，之后+1，然后再更新plist文件\n```ruby\nbuildNumber=$(/usr/libexec/PlistBuddy -c \"Print CFBundleVersion\" \"${PROJECT_DIR}/${INFOPLIST_FILE}\")\nbuildNumber=$(($buildNumber + 1))\n/usr/libexec/PlistBuddy -c \"Set :CFBundleVersion $buildNumber\" \"${PROJECT_DIR}/${INFOPLIST_FILE}\"\n```\n\nFrom: [https://gist.github.com/sekati/3172554](https://gist.github.com/sekati/3172554)","source":"_posts/2017-08-10-Xcode-buildid-autoincrement.md","raw":"title: Xcode BuildNumber 自动更新\ncomment: true\ndate: 2017-08-10 16:16:29\ncategories: iOS\n---\n\n最近为了区分发包的id，从晚上找了一段代码\n原理就是，先用PlistBuddy获取当前的buildid，之后+1，然后再更新plist文件\n```ruby\nbuildNumber=$(/usr/libexec/PlistBuddy -c \"Print CFBundleVersion\" \"${PROJECT_DIR}/${INFOPLIST_FILE}\")\nbuildNumber=$(($buildNumber + 1))\n/usr/libexec/PlistBuddy -c \"Set :CFBundleVersion $buildNumber\" \"${PROJECT_DIR}/${INFOPLIST_FILE}\"\n```\n\nFrom: [https://gist.github.com/sekati/3172554](https://gist.github.com/sekati/3172554)","slug":"Xcode-buildid-autoincrement","published":1,"updated":"2020-01-01T02:23:42.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clb0uhkdb0021o63k60b12dx3","content":"<p>最近为了区分发包的id，从晚上找了一段代码<br>原理就是，先用PlistBuddy获取当前的buildid，之后+1，然后再更新plist文件<br><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">buildNumber=$(/usr/libexec/PlistBuddy -c <span class=\"string\">\"Print CFBundleVersion\"</span> <span class=\"string\">\"$&#123;PROJECT_DIR&#125;/$&#123;INFOPLIST_FILE&#125;\"</span>)</span><br><span class=\"line\">buildNumber=$(($buildNumber + <span class=\"number\">1</span>))</span><br><span class=\"line\">/usr/libexec/PlistBuddy -c <span class=\"string\">\"Set :CFBundleVersion $buildNumber\"</span> <span class=\"string\">\"$&#123;PROJECT_DIR&#125;/$&#123;INFOPLIST_FILE&#125;\"</span></span><br></pre></td></tr></table></figure></p>\n<p>From: <a href=\"https://gist.github.com/sekati/3172554\" target=\"_blank\" rel=\"noopener\">https://gist.github.com/sekati/3172554</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>最近为了区分发包的id，从晚上找了一段代码<br>原理就是，先用PlistBuddy获取当前的buildid，之后+1，然后再更新plist文件<br><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">buildNumber=$(/usr/libexec/PlistBuddy -c <span class=\"string\">\"Print CFBundleVersion\"</span> <span class=\"string\">\"$&#123;PROJECT_DIR&#125;/$&#123;INFOPLIST_FILE&#125;\"</span>)</span><br><span class=\"line\">buildNumber=$(($buildNumber + <span class=\"number\">1</span>))</span><br><span class=\"line\">/usr/libexec/PlistBuddy -c <span class=\"string\">\"Set :CFBundleVersion $buildNumber\"</span> <span class=\"string\">\"$&#123;PROJECT_DIR&#125;/$&#123;INFOPLIST_FILE&#125;\"</span></span><br></pre></td></tr></table></figure></p>\n<p>From: <a href=\"https://gist.github.com/sekati/3172554\" target=\"_blank\" rel=\"noopener\">https://gist.github.com/sekati/3172554</a></p>\n"},{"title":"iTerm2 with powerline theme","comment":true,"date":"2019-06-13T06:01:03.000Z","_content":"### 确保已经安装了oh-my-zsh\n[https://github.com/robbyrussell/oh-my-zsh](https://github.com/robbyrussell/oh-my-zsh)\n\n### 安装 oh-my-zsh-powerline-theme\n[https://github.com/jeremyFreeAgent/oh-my-zsh-powerline-theme](https://github.com/jeremyFreeAgent/oh-my-zsh-powerline-theme)\n\n```shell\ncd ~/.oh-my-zsh/themes\ngit clone git@github.com:jeremyFreeAgent/oh-my-zsh-powerline-theme.git\n\n#更新submodule,进行powerline-fonts安装\ncd oh-my-zsh-powerline-theme\ngit submodule init\ngit submodule update\n\n#安装\n./install_in_omz.sh\n```\n\n### 更改iterm字体\niTerm2 -- Preferences -- Profiles -- Text\n找到Font，点击Change Font，将字体改为`Fira mono for powerline`, 字号14pt\n\n### 修改zsh配置\n打开`~/.zshrc`文件，修改`ZSH_THEME\"`为`powerline`\n\n添加如下配置\n```shell\nPOWERLINE_RIGHT_B=\"\"  \nPOWERLINE_RIGHT_A=\"date\"  \nPOWERLINE_RIGHT_A_COLOR_FRONT=\"black\"  \nPOWERLINE_RIGHT_A_COLOR_BACK=\"red\"  \nPOWERLINE_HIDE_HOST_NAME=\"true\"\nPOWERLINE_PATH=\"short\"\nPOWERLINE_SHORT_HOST_NAME=\"true\"\nPOWERLINE_DETECT_SSH=\"true\"\nPOWERLINE_GIT_CLEAN=\"✔\"\nPOWERLINE_GIT_DIRTY=\"✘\"\nPOWERLINE_GIT_ADDED=\"%F{green}✚%F{black}\"\nPOWERLINE_GIT_MODIFIED=\"%F{blue}✹%F{black}\"\nPOWERLINE_GIT_DELETED=\"%F{red}✖%F{black}\"\nPOWERLINE_GIT_UNTRACKED=\"%F{yellow}✭%F{black}\"\nPOWERLINE_GIT_RENAMED=\"➜\"\nPOWERLINE_GIT_UNMERGED=\"═\"\n```\n\n### 最终效果\n![/uploads/powerline.png](/uploads/powerline.png)\n","source":"_posts/2019-06-13-iterm-with-powerline-theme.md","raw":"title: iTerm2 with powerline theme\ncomment: true\ndate: 2019-06-13 14:01:03\ncategories: 工具控\n---\n### 确保已经安装了oh-my-zsh\n[https://github.com/robbyrussell/oh-my-zsh](https://github.com/robbyrussell/oh-my-zsh)\n\n### 安装 oh-my-zsh-powerline-theme\n[https://github.com/jeremyFreeAgent/oh-my-zsh-powerline-theme](https://github.com/jeremyFreeAgent/oh-my-zsh-powerline-theme)\n\n```shell\ncd ~/.oh-my-zsh/themes\ngit clone git@github.com:jeremyFreeAgent/oh-my-zsh-powerline-theme.git\n\n#更新submodule,进行powerline-fonts安装\ncd oh-my-zsh-powerline-theme\ngit submodule init\ngit submodule update\n\n#安装\n./install_in_omz.sh\n```\n\n### 更改iterm字体\niTerm2 -- Preferences -- Profiles -- Text\n找到Font，点击Change Font，将字体改为`Fira mono for powerline`, 字号14pt\n\n### 修改zsh配置\n打开`~/.zshrc`文件，修改`ZSH_THEME\"`为`powerline`\n\n添加如下配置\n```shell\nPOWERLINE_RIGHT_B=\"\"  \nPOWERLINE_RIGHT_A=\"date\"  \nPOWERLINE_RIGHT_A_COLOR_FRONT=\"black\"  \nPOWERLINE_RIGHT_A_COLOR_BACK=\"red\"  \nPOWERLINE_HIDE_HOST_NAME=\"true\"\nPOWERLINE_PATH=\"short\"\nPOWERLINE_SHORT_HOST_NAME=\"true\"\nPOWERLINE_DETECT_SSH=\"true\"\nPOWERLINE_GIT_CLEAN=\"✔\"\nPOWERLINE_GIT_DIRTY=\"✘\"\nPOWERLINE_GIT_ADDED=\"%F{green}✚%F{black}\"\nPOWERLINE_GIT_MODIFIED=\"%F{blue}✹%F{black}\"\nPOWERLINE_GIT_DELETED=\"%F{red}✖%F{black}\"\nPOWERLINE_GIT_UNTRACKED=\"%F{yellow}✭%F{black}\"\nPOWERLINE_GIT_RENAMED=\"➜\"\nPOWERLINE_GIT_UNMERGED=\"═\"\n```\n\n### 最终效果\n![/uploads/powerline.png](/uploads/powerline.png)\n","slug":"iterm-with-powerline-theme","published":1,"updated":"2020-01-01T02:23:42.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clb0uhkdd0024o63kbapugd8i","content":"<h3 id=\"确保已经安装了oh-my-zsh\"><a href=\"#确保已经安装了oh-my-zsh\" class=\"headerlink\" title=\"确保已经安装了oh-my-zsh\"></a>确保已经安装了oh-my-zsh</h3><p><a href=\"https://github.com/robbyrussell/oh-my-zsh\" target=\"_blank\" rel=\"noopener\">https://github.com/robbyrussell/oh-my-zsh</a></p>\n<h3 id=\"安装-oh-my-zsh-powerline-theme\"><a href=\"#安装-oh-my-zsh-powerline-theme\" class=\"headerlink\" title=\"安装 oh-my-zsh-powerline-theme\"></a>安装 oh-my-zsh-powerline-theme</h3><p><a href=\"https://github.com/jeremyFreeAgent/oh-my-zsh-powerline-theme\" target=\"_blank\" rel=\"noopener\">https://github.com/jeremyFreeAgent/oh-my-zsh-powerline-theme</a></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd ~/.oh-my-zsh/themes</span><br><span class=\"line\">git clone git@github.com:jeremyFreeAgent/oh-my-zsh-powerline-theme.git</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">更新submodule,进行powerline-fonts安装</span></span><br><span class=\"line\">cd oh-my-zsh-powerline-theme</span><br><span class=\"line\">git submodule init</span><br><span class=\"line\">git submodule update</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">安装</span></span><br><span class=\"line\">./install_in_omz.sh</span><br></pre></td></tr></table></figure>\n<h3 id=\"更改iterm字体\"><a href=\"#更改iterm字体\" class=\"headerlink\" title=\"更改iterm字体\"></a>更改iterm字体</h3><p>iTerm2 – Preferences – Profiles – Text<br>找到Font，点击Change Font，将字体改为<code>Fira mono for powerline</code>, 字号14pt</p>\n<h3 id=\"修改zsh配置\"><a href=\"#修改zsh配置\" class=\"headerlink\" title=\"修改zsh配置\"></a>修改zsh配置</h3><p>打开<code>~/.zshrc</code>文件，修改<code>ZSH_THEME&quot;</code>为<code>powerline</code></p>\n<p>添加如下配置<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">POWERLINE_RIGHT_B=\"\"  </span><br><span class=\"line\">POWERLINE_RIGHT_A=\"date\"  </span><br><span class=\"line\">POWERLINE_RIGHT_A_COLOR_FRONT=\"black\"  </span><br><span class=\"line\">POWERLINE_RIGHT_A_COLOR_BACK=\"red\"  </span><br><span class=\"line\">POWERLINE_HIDE_HOST_NAME=\"true\"</span><br><span class=\"line\">POWERLINE_PATH=\"short\"</span><br><span class=\"line\">POWERLINE_SHORT_HOST_NAME=\"true\"</span><br><span class=\"line\">POWERLINE_DETECT_SSH=\"true\"</span><br><span class=\"line\">POWERLINE_GIT_CLEAN=\"✔\"</span><br><span class=\"line\">POWERLINE_GIT_DIRTY=\"✘\"</span><br><span class=\"line\">POWERLINE_GIT_ADDED=\"%F&#123;green&#125;✚%F&#123;black&#125;\"</span><br><span class=\"line\">POWERLINE_GIT_MODIFIED=\"%F&#123;blue&#125;✹%F&#123;black&#125;\"</span><br><span class=\"line\">POWERLINE_GIT_DELETED=\"%F&#123;red&#125;✖%F&#123;black&#125;\"</span><br><span class=\"line\">POWERLINE_GIT_UNTRACKED=\"%F&#123;yellow&#125;✭%F&#123;black&#125;\"</span><br><span class=\"line\">POWERLINE_GIT_RENAMED=\"➜\"</span><br><span class=\"line\">POWERLINE_GIT_UNMERGED=\"═\"</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"最终效果\"><a href=\"#最终效果\" class=\"headerlink\" title=\"最终效果\"></a>最终效果</h3><p><img src=\"/uploads/powerline.png\" alt=\"/uploads/powerline.png\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"确保已经安装了oh-my-zsh\"><a href=\"#确保已经安装了oh-my-zsh\" class=\"headerlink\" title=\"确保已经安装了oh-my-zsh\"></a>确保已经安装了oh-my-zsh</h3><p><a href=\"https://github.com/robbyrussell/oh-my-zsh\" target=\"_blank\" rel=\"noopener\">https://github.com/robbyrussell/oh-my-zsh</a></p>\n<h3 id=\"安装-oh-my-zsh-powerline-theme\"><a href=\"#安装-oh-my-zsh-powerline-theme\" class=\"headerlink\" title=\"安装 oh-my-zsh-powerline-theme\"></a>安装 oh-my-zsh-powerline-theme</h3><p><a href=\"https://github.com/jeremyFreeAgent/oh-my-zsh-powerline-theme\" target=\"_blank\" rel=\"noopener\">https://github.com/jeremyFreeAgent/oh-my-zsh-powerline-theme</a></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd ~/.oh-my-zsh/themes</span><br><span class=\"line\">git clone git@github.com:jeremyFreeAgent/oh-my-zsh-powerline-theme.git</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">更新submodule,进行powerline-fonts安装</span></span><br><span class=\"line\">cd oh-my-zsh-powerline-theme</span><br><span class=\"line\">git submodule init</span><br><span class=\"line\">git submodule update</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">安装</span></span><br><span class=\"line\">./install_in_omz.sh</span><br></pre></td></tr></table></figure>\n<h3 id=\"更改iterm字体\"><a href=\"#更改iterm字体\" class=\"headerlink\" title=\"更改iterm字体\"></a>更改iterm字体</h3><p>iTerm2 – Preferences – Profiles – Text<br>找到Font，点击Change Font，将字体改为<code>Fira mono for powerline</code>, 字号14pt</p>\n<h3 id=\"修改zsh配置\"><a href=\"#修改zsh配置\" class=\"headerlink\" title=\"修改zsh配置\"></a>修改zsh配置</h3><p>打开<code>~/.zshrc</code>文件，修改<code>ZSH_THEME&quot;</code>为<code>powerline</code></p>\n<p>添加如下配置<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">POWERLINE_RIGHT_B=\"\"  </span><br><span class=\"line\">POWERLINE_RIGHT_A=\"date\"  </span><br><span class=\"line\">POWERLINE_RIGHT_A_COLOR_FRONT=\"black\"  </span><br><span class=\"line\">POWERLINE_RIGHT_A_COLOR_BACK=\"red\"  </span><br><span class=\"line\">POWERLINE_HIDE_HOST_NAME=\"true\"</span><br><span class=\"line\">POWERLINE_PATH=\"short\"</span><br><span class=\"line\">POWERLINE_SHORT_HOST_NAME=\"true\"</span><br><span class=\"line\">POWERLINE_DETECT_SSH=\"true\"</span><br><span class=\"line\">POWERLINE_GIT_CLEAN=\"✔\"</span><br><span class=\"line\">POWERLINE_GIT_DIRTY=\"✘\"</span><br><span class=\"line\">POWERLINE_GIT_ADDED=\"%F&#123;green&#125;✚%F&#123;black&#125;\"</span><br><span class=\"line\">POWERLINE_GIT_MODIFIED=\"%F&#123;blue&#125;✹%F&#123;black&#125;\"</span><br><span class=\"line\">POWERLINE_GIT_DELETED=\"%F&#123;red&#125;✖%F&#123;black&#125;\"</span><br><span class=\"line\">POWERLINE_GIT_UNTRACKED=\"%F&#123;yellow&#125;✭%F&#123;black&#125;\"</span><br><span class=\"line\">POWERLINE_GIT_RENAMED=\"➜\"</span><br><span class=\"line\">POWERLINE_GIT_UNMERGED=\"═\"</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"最终效果\"><a href=\"#最终效果\" class=\"headerlink\" title=\"最终效果\"></a>最终效果</h3><p><img src=\"/uploads/powerline.png\" alt=\"/uploads/powerline.png\"></p>\n"},{"title":"将 ReactNative 的默认终端改为 iTerm2","comment":true,"date":"2018-05-30T02:43:17.000Z","_content":"\n自己平时使用iTerm2作为主力的终端，ReactNative的默认打开终端是系统自带的Terminal，这样就会经常存在同时开启两个终端软件的情况，搜索了一下，解决方式很简单\n\n```\nopen node_modules/react-native/scripts\n```\n\n 选中`launchPackager.command`,右键切换它的默认打开工具\n\n ![](/uploads/react-native-open-shell.png)\n\n##### 致谢\n [https://stackoverflow.com/questions/37814803/how-to-get-react-native-run-ios-to-open-in-iterm-instead-of-terminal-on-a-macos](https://stackoverflow.com/questions/37814803/how-to-get-react-native-run-ios-to-open-in-iterm-instead-of-terminal-on-a-macos)\n","source":"_posts/2018-05-30-let-react-native-shell-open-in-iterm.md","raw":"title: 将 ReactNative 的默认终端改为 iTerm2\ncomment: true\ndate: 2018-05-30 10:43:17\ncategories:\n---\n\n自己平时使用iTerm2作为主力的终端，ReactNative的默认打开终端是系统自带的Terminal，这样就会经常存在同时开启两个终端软件的情况，搜索了一下，解决方式很简单\n\n```\nopen node_modules/react-native/scripts\n```\n\n 选中`launchPackager.command`,右键切换它的默认打开工具\n\n ![](/uploads/react-native-open-shell.png)\n\n##### 致谢\n [https://stackoverflow.com/questions/37814803/how-to-get-react-native-run-ios-to-open-in-iterm-instead-of-terminal-on-a-macos](https://stackoverflow.com/questions/37814803/how-to-get-react-native-run-ios-to-open-in-iterm-instead-of-terminal-on-a-macos)\n","slug":"let-react-native-shell-open-in-iterm","published":1,"updated":"2020-01-01T02:23:42.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clb0uhkdf0026o63klpdj5cay","content":"<p>自己平时使用iTerm2作为主力的终端，ReactNative的默认打开终端是系统自带的Terminal，这样就会经常存在同时开启两个终端软件的情况，搜索了一下，解决方式很简单</p>\n<figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">open</span> node_modules/react-<span class=\"keyword\">native</span>/scripts</span><br></pre></td></tr></table></figure>\n<p> 选中<code>launchPackager.command</code>,右键切换它的默认打开工具</p>\n<p> <img src=\"/uploads/react-native-open-shell.png\" alt></p>\n<h5 id=\"致谢\"><a href=\"#致谢\" class=\"headerlink\" title=\"致谢\"></a>致谢</h5><p> <a href=\"https://stackoverflow.com/questions/37814803/how-to-get-react-native-run-ios-to-open-in-iterm-instead-of-terminal-on-a-macos\" target=\"_blank\" rel=\"noopener\">https://stackoverflow.com/questions/37814803/how-to-get-react-native-run-ios-to-open-in-iterm-instead-of-terminal-on-a-macos</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>自己平时使用iTerm2作为主力的终端，ReactNative的默认打开终端是系统自带的Terminal，这样就会经常存在同时开启两个终端软件的情况，搜索了一下，解决方式很简单</p>\n<figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">open</span> node_modules/react-<span class=\"keyword\">native</span>/scripts</span><br></pre></td></tr></table></figure>\n<p> 选中<code>launchPackager.command</code>,右键切换它的默认打开工具</p>\n<p> <img src=\"/uploads/react-native-open-shell.png\" alt></p>\n<h5 id=\"致谢\"><a href=\"#致谢\" class=\"headerlink\" title=\"致谢\"></a>致谢</h5><p> <a href=\"https://stackoverflow.com/questions/37814803/how-to-get-react-native-run-ios-to-open-in-iterm-instead-of-terminal-on-a-macos\" target=\"_blank\" rel=\"noopener\">https://stackoverflow.com/questions/37814803/how-to-get-react-native-run-ios-to-open-in-iterm-instead-of-terminal-on-a-macos</a></p>\n"},{"title":"解决 Mac OS 删除文件后磁盘空间不更新的问题","comment":true,"date":"2020-01-01T07:58:37.000Z","_content":"\n这个问题存在了很久，一直也没有找到解决的办法，今天上网查询后发现，这个问题只存在于使用了Time Machine的用户，原因是因为Time Machine的快照自动生成造成的，于是试着按照解决方法查询了下本地快照\n\n```\nsudo tmutil listlocalsnapshots /\n```\n\n得到如下结果,确实Mac在自动的生成系统的快照\n```\ncom.apple.TimeMachine.2019-12-31-214148.local\ncom.apple.TimeMachine.2019-12-31-223649.local\ncom.apple.TimeMachine.2020-01-01-103649.local\ncom.apple.TimeMachine.2020-01-01-113743.local\ncom.apple.TimeMachine.2020-01-01-124353.local\ncom.apple.TimeMachine.2020-01-01-143927.local\ncom.apple.TimeMachine.2020-01-01-153651.local\n```\n\n试着删除其中的一个快照\n```\ntmutil deletelocalsnapshots 2019-12-31-214148\n```\n\n发现系统的空间立刻就释放了，猜测就是以为Time Machine的快照自动生成导致的，不知道是Mac系统的bug还是因为备份的策略,  试着写了一个Ruby的脚本来自动的删除这些快照，希望对遇到此问题的人有帮助:\n\n```ruby\n#/bin/bash\n\n#diskspace info\nputs \"Current Diskspace info:\" \nputs \"---------\"\nputs %x[df -lh /]\n\n#list localsnapshots\nputs \"\\n\\n---------\"\nlist = %x[tmutil listlocalsnapshots /]\nputs list\n\n#delete snapshots\nputs \"\\n\\n---------\"\nputs \"Start delete snapshots:\"\nmatches = list.scan(/\\d{4}-\\d{2}-\\d{2}-\\d{6}/)\nmatches.each_with_index{|snapshoot,index|\n    puts \"delete the listlocalsnapshots #{snapshoot}\"\n    sh = \"tmutil deletelocalsnapshots #{snapshoot}\"\n    system(sh)\n}\n\n#diskspace info after delete snapshot\nputs puts \"\\n\\n---------\"\nputs \"Diskspace info after delete snapshots:\"\nputs %x[df -lh /]\n```\n\n将上面脚本保存为snapshots_clear.rb,或从我保存的gist上[下载](https://gist.github.com/welsonla/0e4c4a818abfae0400a4087b54e81c43)\n执行. \n\n```shell\nruby snapshots_clear.rb\n```\n\n##### 参考资料\n[Mac瘦身技巧 删除文件后可用空间还变少了？](http://nb.zol.com.cn/671/6715453.html)\n[Solution: Reclaim storage back from \"System\"](https://forums.macrumors.com/threads/solution-reclaim-storage-back-from-system.2073174/)\n","source":"_posts/2020-01-01-Mac-Diskspace-release.md","raw":"title: 解决 Mac OS 删除文件后磁盘空间不更新的问题\ncomment: true\ndate: 2020-01-01 15:58:37\ncategories: Mac\n---\n\n这个问题存在了很久，一直也没有找到解决的办法，今天上网查询后发现，这个问题只存在于使用了Time Machine的用户，原因是因为Time Machine的快照自动生成造成的，于是试着按照解决方法查询了下本地快照\n\n```\nsudo tmutil listlocalsnapshots /\n```\n\n得到如下结果,确实Mac在自动的生成系统的快照\n```\ncom.apple.TimeMachine.2019-12-31-214148.local\ncom.apple.TimeMachine.2019-12-31-223649.local\ncom.apple.TimeMachine.2020-01-01-103649.local\ncom.apple.TimeMachine.2020-01-01-113743.local\ncom.apple.TimeMachine.2020-01-01-124353.local\ncom.apple.TimeMachine.2020-01-01-143927.local\ncom.apple.TimeMachine.2020-01-01-153651.local\n```\n\n试着删除其中的一个快照\n```\ntmutil deletelocalsnapshots 2019-12-31-214148\n```\n\n发现系统的空间立刻就释放了，猜测就是以为Time Machine的快照自动生成导致的，不知道是Mac系统的bug还是因为备份的策略,  试着写了一个Ruby的脚本来自动的删除这些快照，希望对遇到此问题的人有帮助:\n\n```ruby\n#/bin/bash\n\n#diskspace info\nputs \"Current Diskspace info:\" \nputs \"---------\"\nputs %x[df -lh /]\n\n#list localsnapshots\nputs \"\\n\\n---------\"\nlist = %x[tmutil listlocalsnapshots /]\nputs list\n\n#delete snapshots\nputs \"\\n\\n---------\"\nputs \"Start delete snapshots:\"\nmatches = list.scan(/\\d{4}-\\d{2}-\\d{2}-\\d{6}/)\nmatches.each_with_index{|snapshoot,index|\n    puts \"delete the listlocalsnapshots #{snapshoot}\"\n    sh = \"tmutil deletelocalsnapshots #{snapshoot}\"\n    system(sh)\n}\n\n#diskspace info after delete snapshot\nputs puts \"\\n\\n---------\"\nputs \"Diskspace info after delete snapshots:\"\nputs %x[df -lh /]\n```\n\n将上面脚本保存为snapshots_clear.rb,或从我保存的gist上[下载](https://gist.github.com/welsonla/0e4c4a818abfae0400a4087b54e81c43)\n执行. \n\n```shell\nruby snapshots_clear.rb\n```\n\n##### 参考资料\n[Mac瘦身技巧 删除文件后可用空间还变少了？](http://nb.zol.com.cn/671/6715453.html)\n[Solution: Reclaim storage back from \"System\"](https://forums.macrumors.com/threads/solution-reclaim-storage-back-from-system.2073174/)\n","slug":"Mac-Diskspace-release","published":1,"updated":"2020-01-01T08:57:07.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clb0uhkdg0027o63kvtgzkubv","content":"<p>这个问题存在了很久，一直也没有找到解决的办法，今天上网查询后发现，这个问题只存在于使用了Time Machine的用户，原因是因为Time Machine的快照自动生成造成的，于是试着按照解决方法查询了下本地快照</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">sudo</span> tmutil listlocalsnapshots /</span><br></pre></td></tr></table></figure>\n<p>得到如下结果,确实Mac在自动的生成系统的快照<br><figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">com.apple.TimeMachine<span class=\"number\">.2019</span><span class=\"number\">-12</span><span class=\"number\">-31</span><span class=\"number\">-214148.</span>local</span><br><span class=\"line\">com.apple.TimeMachine<span class=\"number\">.2019</span><span class=\"number\">-12</span><span class=\"number\">-31</span><span class=\"number\">-223649.</span>local</span><br><span class=\"line\">com.apple.TimeMachine<span class=\"number\">.2020</span><span class=\"number\">-01</span><span class=\"number\">-01</span><span class=\"number\">-103649.</span>local</span><br><span class=\"line\">com.apple.TimeMachine<span class=\"number\">.2020</span><span class=\"number\">-01</span><span class=\"number\">-01</span><span class=\"number\">-113743.</span>local</span><br><span class=\"line\">com.apple.TimeMachine<span class=\"number\">.2020</span><span class=\"number\">-01</span><span class=\"number\">-01</span><span class=\"number\">-124353.</span>local</span><br><span class=\"line\">com.apple.TimeMachine<span class=\"number\">.2020</span><span class=\"number\">-01</span><span class=\"number\">-01</span><span class=\"number\">-143927.</span>local</span><br><span class=\"line\">com.apple.TimeMachine<span class=\"number\">.2020</span><span class=\"number\">-01</span><span class=\"number\">-01</span><span class=\"number\">-153651.</span>local</span><br></pre></td></tr></table></figure></p>\n<p>试着删除其中的一个快照<br><figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tmutil deletelocalsnapshots <span class=\"number\">2019</span><span class=\"number\">-12</span><span class=\"number\">-31</span><span class=\"number\">-214148</span></span><br></pre></td></tr></table></figure></p>\n<p>发现系统的空间立刻就释放了，猜测就是以为Time Machine的快照自动生成导致的，不知道是Mac系统的bug还是因为备份的策略,  试着写了一个Ruby的脚本来自动的删除这些快照，希望对遇到此问题的人有帮助:</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#/bin/bash</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#diskspace info</span></span><br><span class=\"line\">puts <span class=\"string\">\"Current Diskspace info:\"</span> </span><br><span class=\"line\">puts <span class=\"string\">\"---------\"</span></span><br><span class=\"line\">puts <span class=\"string\">%x[df -lh /]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#list localsnapshots</span></span><br><span class=\"line\">puts <span class=\"string\">\"\\n\\n---------\"</span></span><br><span class=\"line\">list = <span class=\"string\">%x[tmutil listlocalsnapshots /]</span></span><br><span class=\"line\">puts list</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#delete snapshots</span></span><br><span class=\"line\">puts <span class=\"string\">\"\\n\\n---------\"</span></span><br><span class=\"line\">puts <span class=\"string\">\"Start delete snapshots:\"</span></span><br><span class=\"line\">matches = list.scan(<span class=\"regexp\">/\\d&#123;4&#125;-\\d&#123;2&#125;-\\d&#123;2&#125;-\\d&#123;6&#125;/</span>)</span><br><span class=\"line\">matches.each_with_index&#123;<span class=\"params\">|snapshoot,index|</span></span><br><span class=\"line\">    puts <span class=\"string\">\"delete the listlocalsnapshots <span class=\"subst\">#&#123;snapshoot&#125;</span>\"</span></span><br><span class=\"line\">    sh = <span class=\"string\">\"tmutil deletelocalsnapshots <span class=\"subst\">#&#123;snapshoot&#125;</span>\"</span></span><br><span class=\"line\">    system(sh)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#diskspace info after delete snapshot</span></span><br><span class=\"line\">puts puts <span class=\"string\">\"\\n\\n---------\"</span></span><br><span class=\"line\">puts <span class=\"string\">\"Diskspace info after delete snapshots:\"</span></span><br><span class=\"line\">puts <span class=\"string\">%x[df -lh /]</span></span><br></pre></td></tr></table></figure>\n<p>将上面脚本保存为snapshots_clear.rb,或从我保存的gist上<a href=\"https://gist.github.com/welsonla/0e4c4a818abfae0400a4087b54e81c43\" target=\"_blank\" rel=\"noopener\">下载</a><br>执行. </p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ruby snapshots_clear.rb</span><br></pre></td></tr></table></figure>\n<h5 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h5><p><a href=\"http://nb.zol.com.cn/671/6715453.html\" target=\"_blank\" rel=\"noopener\">Mac瘦身技巧 删除文件后可用空间还变少了？</a><br><a href=\"https://forums.macrumors.com/threads/solution-reclaim-storage-back-from-system.2073174/\" target=\"_blank\" rel=\"noopener\">Solution: Reclaim storage back from “System”</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>这个问题存在了很久，一直也没有找到解决的办法，今天上网查询后发现，这个问题只存在于使用了Time Machine的用户，原因是因为Time Machine的快照自动生成造成的，于是试着按照解决方法查询了下本地快照</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">sudo</span> tmutil listlocalsnapshots /</span><br></pre></td></tr></table></figure>\n<p>得到如下结果,确实Mac在自动的生成系统的快照<br><figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">com.apple.TimeMachine<span class=\"number\">.2019</span><span class=\"number\">-12</span><span class=\"number\">-31</span><span class=\"number\">-214148.</span>local</span><br><span class=\"line\">com.apple.TimeMachine<span class=\"number\">.2019</span><span class=\"number\">-12</span><span class=\"number\">-31</span><span class=\"number\">-223649.</span>local</span><br><span class=\"line\">com.apple.TimeMachine<span class=\"number\">.2020</span><span class=\"number\">-01</span><span class=\"number\">-01</span><span class=\"number\">-103649.</span>local</span><br><span class=\"line\">com.apple.TimeMachine<span class=\"number\">.2020</span><span class=\"number\">-01</span><span class=\"number\">-01</span><span class=\"number\">-113743.</span>local</span><br><span class=\"line\">com.apple.TimeMachine<span class=\"number\">.2020</span><span class=\"number\">-01</span><span class=\"number\">-01</span><span class=\"number\">-124353.</span>local</span><br><span class=\"line\">com.apple.TimeMachine<span class=\"number\">.2020</span><span class=\"number\">-01</span><span class=\"number\">-01</span><span class=\"number\">-143927.</span>local</span><br><span class=\"line\">com.apple.TimeMachine<span class=\"number\">.2020</span><span class=\"number\">-01</span><span class=\"number\">-01</span><span class=\"number\">-153651.</span>local</span><br></pre></td></tr></table></figure></p>\n<p>试着删除其中的一个快照<br><figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tmutil deletelocalsnapshots <span class=\"number\">2019</span><span class=\"number\">-12</span><span class=\"number\">-31</span><span class=\"number\">-214148</span></span><br></pre></td></tr></table></figure></p>\n<p>发现系统的空间立刻就释放了，猜测就是以为Time Machine的快照自动生成导致的，不知道是Mac系统的bug还是因为备份的策略,  试着写了一个Ruby的脚本来自动的删除这些快照，希望对遇到此问题的人有帮助:</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#/bin/bash</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#diskspace info</span></span><br><span class=\"line\">puts <span class=\"string\">\"Current Diskspace info:\"</span> </span><br><span class=\"line\">puts <span class=\"string\">\"---------\"</span></span><br><span class=\"line\">puts <span class=\"string\">%x[df -lh /]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#list localsnapshots</span></span><br><span class=\"line\">puts <span class=\"string\">\"\\n\\n---------\"</span></span><br><span class=\"line\">list = <span class=\"string\">%x[tmutil listlocalsnapshots /]</span></span><br><span class=\"line\">puts list</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#delete snapshots</span></span><br><span class=\"line\">puts <span class=\"string\">\"\\n\\n---------\"</span></span><br><span class=\"line\">puts <span class=\"string\">\"Start delete snapshots:\"</span></span><br><span class=\"line\">matches = list.scan(<span class=\"regexp\">/\\d&#123;4&#125;-\\d&#123;2&#125;-\\d&#123;2&#125;-\\d&#123;6&#125;/</span>)</span><br><span class=\"line\">matches.each_with_index&#123;<span class=\"params\">|snapshoot,index|</span></span><br><span class=\"line\">    puts <span class=\"string\">\"delete the listlocalsnapshots <span class=\"subst\">#&#123;snapshoot&#125;</span>\"</span></span><br><span class=\"line\">    sh = <span class=\"string\">\"tmutil deletelocalsnapshots <span class=\"subst\">#&#123;snapshoot&#125;</span>\"</span></span><br><span class=\"line\">    system(sh)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#diskspace info after delete snapshot</span></span><br><span class=\"line\">puts puts <span class=\"string\">\"\\n\\n---------\"</span></span><br><span class=\"line\">puts <span class=\"string\">\"Diskspace info after delete snapshots:\"</span></span><br><span class=\"line\">puts <span class=\"string\">%x[df -lh /]</span></span><br></pre></td></tr></table></figure>\n<p>将上面脚本保存为snapshots_clear.rb,或从我保存的gist上<a href=\"https://gist.github.com/welsonla/0e4c4a818abfae0400a4087b54e81c43\" target=\"_blank\" rel=\"noopener\">下载</a><br>执行. </p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ruby snapshots_clear.rb</span><br></pre></td></tr></table></figure>\n<h5 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h5><p><a href=\"http://nb.zol.com.cn/671/6715453.html\" target=\"_blank\" rel=\"noopener\">Mac瘦身技巧 删除文件后可用空间还变少了？</a><br><a href=\"https://forums.macrumors.com/threads/solution-reclaim-storage-back-from-system.2073174/\" target=\"_blank\" rel=\"noopener\">Solution: Reclaim storage back from “System”</a></p>\n"},{"title":"Mac OS 安装 配置Laravel开发环境","comment":true,"date":"2020-01-01T04:57:25.000Z","_content":"\n\n### 使用Homebrew安装PHP 7.3\n实用brew的好处就是PHP版本可以不被系统升级而改变，从而保证升级系统不会影响PHP环境\n```\nbrew install php@7.3\nbrew link php@7.3\n```\n\n### 安装Composer\n```\nwget https://getcomposer.org/installer\nphp -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\"\nphp -r \"if (hash_file('sha384', 'composer-setup.php') === 'baf1608c33254d00611ac1705c1d9958c817a1a33bce370c0595974b342601bd80b92a3f46067da89e3b06bff421f182') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;\"\nphp composer-setup.php\nphp -r \"unlink('composer-setup.php');\"\n```\n\n### 添加到全局\n```\nmv composer.phar /usr/local/bin/composer\n```\n\n### 设置国内镜像\n```\ncomposer config -g repo.packagist composer https://mirrors.aliyun.com/composer/  \n```\n\n### 安装Composer多线程下载支持\n```\n composer global require hirak/prestissimo\n```\n\n### 安装laravel\n```\ncomposer global require laravel/installer\n```\n","source":"_posts/2020-01-01-composer-and-laravel-setup.md","raw":"title: Mac OS 安装 配置Laravel开发环境\ncomment: true\ndate: 2020-01-01 12:57:25\ncategories: PHP\n---\n\n\n### 使用Homebrew安装PHP 7.3\n实用brew的好处就是PHP版本可以不被系统升级而改变，从而保证升级系统不会影响PHP环境\n```\nbrew install php@7.3\nbrew link php@7.3\n```\n\n### 安装Composer\n```\nwget https://getcomposer.org/installer\nphp -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\"\nphp -r \"if (hash_file('sha384', 'composer-setup.php') === 'baf1608c33254d00611ac1705c1d9958c817a1a33bce370c0595974b342601bd80b92a3f46067da89e3b06bff421f182') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;\"\nphp composer-setup.php\nphp -r \"unlink('composer-setup.php');\"\n```\n\n### 添加到全局\n```\nmv composer.phar /usr/local/bin/composer\n```\n\n### 设置国内镜像\n```\ncomposer config -g repo.packagist composer https://mirrors.aliyun.com/composer/  \n```\n\n### 安装Composer多线程下载支持\n```\n composer global require hirak/prestissimo\n```\n\n### 安装laravel\n```\ncomposer global require laravel/installer\n```\n","slug":"composer-and-laravel-setup","published":1,"updated":"2020-01-01T05:30:09.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clb0uhkdn0029o63ka8ivz9qi","content":"<h3 id=\"使用Homebrew安装PHP-7-3\"><a href=\"#使用Homebrew安装PHP-7-3\" class=\"headerlink\" title=\"使用Homebrew安装PHP 7.3\"></a>使用Homebrew安装PHP 7.3</h3><p>实用brew的好处就是PHP版本可以不被系统升级而改变，从而保证升级系统不会影响PHP环境<br><figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew install <span class=\"symbol\">php@</span><span class=\"number\">7.3</span></span><br><span class=\"line\">brew link <span class=\"symbol\">php@</span><span class=\"number\">7.3</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"安装Composer\"><a href=\"#安装Composer\" class=\"headerlink\" title=\"安装Composer\"></a>安装Composer</h3><figure class=\"highlight scilab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https:<span class=\"comment\">//getcomposer.org/installer</span></span><br><span class=\"line\">php -r <span class=\"string\">\"copy('</span>https:<span class=\"comment\">//getcomposer.org/installer', 'composer-setup.php');\"</span></span><br><span class=\"line\">php -r <span class=\"string\">\"if (hash_file('</span>sha384', <span class=\"string\">'composer-setup.php'</span>) === <span class=\"string\">'baf1608c33254d00611ac1705c1d9958c817a1a33bce370c0595974b342601bd80b92a3f46067da89e3b06bff421f182'</span>) &#123; echo <span class=\"string\">'Installer verified'</span>; &#125; <span class=\"keyword\">else</span> &#123; echo <span class=\"string\">'Installer corrupt'</span>; unlink(<span class=\"string\">'composer-setup.php'</span>); &#125; echo PHP_EOL;<span class=\"string\">\"</span></span><br><span class=\"line\"><span class=\"string\">php composer-setup.php</span></span><br><span class=\"line\"><span class=\"string\">php -r \"</span>unlink(<span class=\"string\">'composer-setup.php'</span>);<span class=\"string\">\"</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"添加到全局\"><a href=\"#添加到全局\" class=\"headerlink\" title=\"添加到全局\"></a>添加到全局</h3><figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mv composer.phar <span class=\"regexp\">/usr/</span>local<span class=\"regexp\">/bin/</span>composer</span><br></pre></td></tr></table></figure>\n<h3 id=\"设置国内镜像\"><a href=\"#设置国内镜像\" class=\"headerlink\" title=\"设置国内镜像\"></a>设置国内镜像</h3><figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">composer <span class=\"built_in\">config</span> -g repo.packagist composer https:<span class=\"comment\">//mirrors.aliyun.com/composer/</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"安装Composer多线程下载支持\"><a href=\"#安装Composer多线程下载支持\" class=\"headerlink\" title=\"安装Composer多线程下载支持\"></a>安装Composer多线程下载支持</h3><figure class=\"highlight armasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">composer</span> <span class=\"meta\">global</span> <span class=\"meta\">require</span> hirak/prestissimo</span><br></pre></td></tr></table></figure>\n<h3 id=\"安装laravel\"><a href=\"#安装laravel\" class=\"headerlink\" title=\"安装laravel\"></a>安装laravel</h3><figure class=\"highlight armasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">composer</span> <span class=\"meta\">global</span> <span class=\"meta\">require</span> laravel/installer</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"使用Homebrew安装PHP-7-3\"><a href=\"#使用Homebrew安装PHP-7-3\" class=\"headerlink\" title=\"使用Homebrew安装PHP 7.3\"></a>使用Homebrew安装PHP 7.3</h3><p>实用brew的好处就是PHP版本可以不被系统升级而改变，从而保证升级系统不会影响PHP环境<br><figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew install <span class=\"symbol\">php@</span><span class=\"number\">7.3</span></span><br><span class=\"line\">brew link <span class=\"symbol\">php@</span><span class=\"number\">7.3</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"安装Composer\"><a href=\"#安装Composer\" class=\"headerlink\" title=\"安装Composer\"></a>安装Composer</h3><figure class=\"highlight scilab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https:<span class=\"comment\">//getcomposer.org/installer</span></span><br><span class=\"line\">php -r <span class=\"string\">\"copy('</span>https:<span class=\"comment\">//getcomposer.org/installer', 'composer-setup.php');\"</span></span><br><span class=\"line\">php -r <span class=\"string\">\"if (hash_file('</span>sha384', <span class=\"string\">'composer-setup.php'</span>) === <span class=\"string\">'baf1608c33254d00611ac1705c1d9958c817a1a33bce370c0595974b342601bd80b92a3f46067da89e3b06bff421f182'</span>) &#123; echo <span class=\"string\">'Installer verified'</span>; &#125; <span class=\"keyword\">else</span> &#123; echo <span class=\"string\">'Installer corrupt'</span>; unlink(<span class=\"string\">'composer-setup.php'</span>); &#125; echo PHP_EOL;<span class=\"string\">\"</span></span><br><span class=\"line\"><span class=\"string\">php composer-setup.php</span></span><br><span class=\"line\"><span class=\"string\">php -r \"</span>unlink(<span class=\"string\">'composer-setup.php'</span>);<span class=\"string\">\"</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"添加到全局\"><a href=\"#添加到全局\" class=\"headerlink\" title=\"添加到全局\"></a>添加到全局</h3><figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mv composer.phar <span class=\"regexp\">/usr/</span>local<span class=\"regexp\">/bin/</span>composer</span><br></pre></td></tr></table></figure>\n<h3 id=\"设置国内镜像\"><a href=\"#设置国内镜像\" class=\"headerlink\" title=\"设置国内镜像\"></a>设置国内镜像</h3><figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">composer <span class=\"built_in\">config</span> -g repo.packagist composer https:<span class=\"comment\">//mirrors.aliyun.com/composer/</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"安装Composer多线程下载支持\"><a href=\"#安装Composer多线程下载支持\" class=\"headerlink\" title=\"安装Composer多线程下载支持\"></a>安装Composer多线程下载支持</h3><figure class=\"highlight armasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">composer</span> <span class=\"meta\">global</span> <span class=\"meta\">require</span> hirak/prestissimo</span><br></pre></td></tr></table></figure>\n<h3 id=\"安装laravel\"><a href=\"#安装laravel\" class=\"headerlink\" title=\"安装laravel\"></a>安装laravel</h3><figure class=\"highlight armasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">composer</span> <span class=\"meta\">global</span> <span class=\"meta\">require</span> laravel/installer</span><br></pre></td></tr></table></figure>\n"},{"title":"Blog迁移到了Hexo","date":"2015-10-10T02:58:17.000Z","_content":"\n\n## Octopress的痛点\n\n受不了`_deploy`文件夹的折磨，以及AutoGenerate Disable这错误导致生成问题，rake deploy靠运气成功,今天将blog迁移到了hexo\n\n## Hexo优点\n\n1. 更简洁的语法\n```ruby\n hexo new \"title\"\n hexo new page\n hexo g #生成\n hexo d #部署\n hexo s #运行\n```\n\n2. 更快的生成速度\n\n3. 直观的部署结果\n\n## 安装\n\n1. 安装Node  \n\n\t参考node官方 [https://nodejs.org](https://nodejs.org)\n\n\n2. 安装hexo以及用到的东西  \n```ruby\nnpm install -g hexo-cli\n\n```\n\n3. 创建Blog  \n```ruby\nhexo init blog\ncd blog\nnpm install\n\n#安装Server\nnpm install hexo-server --save\n```\n## 基本使用\n创建文章  \n```ruby\nhexo new \"first blog\"\n\n#创建独立页面\nhexo new page \"about\"\n```\n\n预备部署  \n```ruby\n#添加github部署支持\nnpm install hexo-deployer-git --save\n\n\n## 修改_config.yml  \ndeploy:\n  type: git #不要再使用github作为type\n  repo: git@github.com:<yourname>/<yourname>.github.io.git\n  branch: master\n```\n\n## 修改配置\n### 安装主题，推荐Next, 有详细的安装文档  \n\n##### 安装参考\nhttp://theme-next.iissnan.com/five-minutes-setup.html\n\n##### 详细的配置\n[https://github.com/iissnan/hexo-theme-next/wiki/主题配置参考](https://github.com/iissnan/hexo-theme-next/wiki/主题配置参考)\n\n### 添加RSS\n[](https://github.com/hexojs/hexo-generator-feed)\n\n```js\nnpm install hexo-generator-feed --save\n```\n\n### 上传图片\n```js\n放到./source/uploads文件夹下，代码中使用\n![](/uploads/xxx.png)\n```\n\n### 修改生成文件的格式\n修改为Year-Month-Day-title样式，方便查找\n打开`_config.yml`\n```js\nnew_post_name: :year-:month-:day-:title.md \n```\n","source":"_posts/start-using-hexo.md","raw":"title: Blog迁移到了Hexo\ndate: 2015-10-10 10:58:17\ncategories: something\n---\n\n\n## Octopress的痛点\n\n受不了`_deploy`文件夹的折磨，以及AutoGenerate Disable这错误导致生成问题，rake deploy靠运气成功,今天将blog迁移到了hexo\n\n## Hexo优点\n\n1. 更简洁的语法\n```ruby\n hexo new \"title\"\n hexo new page\n hexo g #生成\n hexo d #部署\n hexo s #运行\n```\n\n2. 更快的生成速度\n\n3. 直观的部署结果\n\n## 安装\n\n1. 安装Node  \n\n\t参考node官方 [https://nodejs.org](https://nodejs.org)\n\n\n2. 安装hexo以及用到的东西  \n```ruby\nnpm install -g hexo-cli\n\n```\n\n3. 创建Blog  \n```ruby\nhexo init blog\ncd blog\nnpm install\n\n#安装Server\nnpm install hexo-server --save\n```\n## 基本使用\n创建文章  \n```ruby\nhexo new \"first blog\"\n\n#创建独立页面\nhexo new page \"about\"\n```\n\n预备部署  \n```ruby\n#添加github部署支持\nnpm install hexo-deployer-git --save\n\n\n## 修改_config.yml  \ndeploy:\n  type: git #不要再使用github作为type\n  repo: git@github.com:<yourname>/<yourname>.github.io.git\n  branch: master\n```\n\n## 修改配置\n### 安装主题，推荐Next, 有详细的安装文档  \n\n##### 安装参考\nhttp://theme-next.iissnan.com/five-minutes-setup.html\n\n##### 详细的配置\n[https://github.com/iissnan/hexo-theme-next/wiki/主题配置参考](https://github.com/iissnan/hexo-theme-next/wiki/主题配置参考)\n\n### 添加RSS\n[](https://github.com/hexojs/hexo-generator-feed)\n\n```js\nnpm install hexo-generator-feed --save\n```\n\n### 上传图片\n```js\n放到./source/uploads文件夹下，代码中使用\n![](/uploads/xxx.png)\n```\n\n### 修改生成文件的格式\n修改为Year-Month-Day-title样式，方便查找\n打开`_config.yml`\n```js\nnew_post_name: :year-:month-:day-:title.md \n```\n","slug":"start-using-hexo","published":1,"updated":"2020-01-01T02:23:42.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clb0uhkdv002co63kf8yljoyk","content":"<h2 id=\"Octopress的痛点\"><a href=\"#Octopress的痛点\" class=\"headerlink\" title=\"Octopress的痛点\"></a>Octopress的痛点</h2><p>受不了<code>_deploy</code>文件夹的折磨，以及AutoGenerate Disable这错误导致生成问题，rake deploy靠运气成功,今天将blog迁移到了hexo</p>\n<h2 id=\"Hexo优点\"><a href=\"#Hexo优点\" class=\"headerlink\" title=\"Hexo优点\"></a>Hexo优点</h2><ol>\n<li><p>更简洁的语法</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new <span class=\"string\">\"title\"</span></span><br><span class=\"line\">hexo new page</span><br><span class=\"line\">hexo g <span class=\"comment\">#生成</span></span><br><span class=\"line\">hexo d <span class=\"comment\">#部署</span></span><br><span class=\"line\">hexo s <span class=\"comment\">#运行</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>更快的生成速度</p>\n</li>\n<li><p>直观的部署结果</p>\n</li>\n</ol>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><ol>\n<li><p>安装Node  </p>\n<p> 参考node官方 <a href=\"https://nodejs.org\" target=\"_blank\" rel=\"noopener\">https://nodejs.org</a></p>\n</li>\n</ol>\n<ol start=\"2\">\n<li><p>安装hexo以及用到的东西  </p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>创建Blog  </p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init blog</span><br><span class=\"line\">cd blog</span><br><span class=\"line\">npm install</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#安装Server</span></span><br><span class=\"line\">npm install hexo-server --save</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"基本使用\"><a href=\"#基本使用\" class=\"headerlink\" title=\"基本使用\"></a>基本使用</h2><p>创建文章<br><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new <span class=\"string\">\"first blog\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#创建独立页面</span></span><br><span class=\"line\">hexo new page <span class=\"string\">\"about\"</span></span><br></pre></td></tr></table></figure></p>\n<p>预备部署<br><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#添加github部署支持</span></span><br><span class=\"line\">npm install hexo-deployer-git --save</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 修改_config.yml  </span></span><br><span class=\"line\"><span class=\"symbol\">deploy:</span></span><br><span class=\"line\">  <span class=\"symbol\">type:</span> git <span class=\"comment\">#不要再使用github作为type</span></span><br><span class=\"line\">  <span class=\"symbol\">repo:</span> git@github.<span class=\"symbol\">com:</span>&lt;yourname&gt;<span class=\"regexp\">/&lt;yourname&gt;.github.io.git</span></span><br><span class=\"line\"><span class=\"regexp\">  branch: master</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"修改配置\"><a href=\"#修改配置\" class=\"headerlink\" title=\"修改配置\"></a>修改配置</h2><h3 id=\"安装主题，推荐Next-有详细的安装文档\"><a href=\"#安装主题，推荐Next-有详细的安装文档\" class=\"headerlink\" title=\"安装主题，推荐Next, 有详细的安装文档\"></a>安装主题，推荐Next, 有详细的安装文档</h3><h5 id=\"安装参考\"><a href=\"#安装参考\" class=\"headerlink\" title=\"安装参考\"></a>安装参考</h5><p><a href=\"http://theme-next.iissnan.com/five-minutes-setup.html\" target=\"_blank\" rel=\"noopener\">http://theme-next.iissnan.com/five-minutes-setup.html</a></p>\n<h5 id=\"详细的配置\"><a href=\"#详细的配置\" class=\"headerlink\" title=\"详细的配置\"></a>详细的配置</h5><p><a href=\"https://github.com/iissnan/hexo-theme-next/wiki/主题配置参考\" target=\"_blank\" rel=\"noopener\">https://github.com/iissnan/hexo-theme-next/wiki/主题配置参考</a></p>\n<h3 id=\"添加RSS\"><a href=\"#添加RSS\" class=\"headerlink\" title=\"添加RSS\"></a>添加RSS</h3><p><a href=\"https://github.com/hexojs/hexo-generator-feed\" target=\"_blank\" rel=\"noopener\"></a></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure>\n<h3 id=\"上传图片\"><a href=\"#上传图片\" class=\"headerlink\" title=\"上传图片\"></a>上传图片</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">放到./source/uploads文件夹下，代码中使用</span><br><span class=\"line\">![](<span class=\"regexp\">/uploads/</span>xxx.png)</span><br></pre></td></tr></table></figure>\n<h3 id=\"修改生成文件的格式\"><a href=\"#修改生成文件的格式\" class=\"headerlink\" title=\"修改生成文件的格式\"></a>修改生成文件的格式</h3><p>修改为Year-Month-Day-title样式，方便查找<br>打开<code>_config.yml</code><br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">new_post_name: :year-:month-:day-:title.md</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"Octopress的痛点\"><a href=\"#Octopress的痛点\" class=\"headerlink\" title=\"Octopress的痛点\"></a>Octopress的痛点</h2><p>受不了<code>_deploy</code>文件夹的折磨，以及AutoGenerate Disable这错误导致生成问题，rake deploy靠运气成功,今天将blog迁移到了hexo</p>\n<h2 id=\"Hexo优点\"><a href=\"#Hexo优点\" class=\"headerlink\" title=\"Hexo优点\"></a>Hexo优点</h2><ol>\n<li><p>更简洁的语法</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new <span class=\"string\">\"title\"</span></span><br><span class=\"line\">hexo new page</span><br><span class=\"line\">hexo g <span class=\"comment\">#生成</span></span><br><span class=\"line\">hexo d <span class=\"comment\">#部署</span></span><br><span class=\"line\">hexo s <span class=\"comment\">#运行</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>更快的生成速度</p>\n</li>\n<li><p>直观的部署结果</p>\n</li>\n</ol>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><ol>\n<li><p>安装Node  </p>\n<p> 参考node官方 <a href=\"https://nodejs.org\" target=\"_blank\" rel=\"noopener\">https://nodejs.org</a></p>\n</li>\n</ol>\n<ol start=\"2\">\n<li><p>安装hexo以及用到的东西  </p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>创建Blog  </p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init blog</span><br><span class=\"line\">cd blog</span><br><span class=\"line\">npm install</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#安装Server</span></span><br><span class=\"line\">npm install hexo-server --save</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"基本使用\"><a href=\"#基本使用\" class=\"headerlink\" title=\"基本使用\"></a>基本使用</h2><p>创建文章<br><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new <span class=\"string\">\"first blog\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#创建独立页面</span></span><br><span class=\"line\">hexo new page <span class=\"string\">\"about\"</span></span><br></pre></td></tr></table></figure></p>\n<p>预备部署<br><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#添加github部署支持</span></span><br><span class=\"line\">npm install hexo-deployer-git --save</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 修改_config.yml  </span></span><br><span class=\"line\"><span class=\"symbol\">deploy:</span></span><br><span class=\"line\">  <span class=\"symbol\">type:</span> git <span class=\"comment\">#不要再使用github作为type</span></span><br><span class=\"line\">  <span class=\"symbol\">repo:</span> git@github.<span class=\"symbol\">com:</span>&lt;yourname&gt;<span class=\"regexp\">/&lt;yourname&gt;.github.io.git</span></span><br><span class=\"line\"><span class=\"regexp\">  branch: master</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"修改配置\"><a href=\"#修改配置\" class=\"headerlink\" title=\"修改配置\"></a>修改配置</h2><h3 id=\"安装主题，推荐Next-有详细的安装文档\"><a href=\"#安装主题，推荐Next-有详细的安装文档\" class=\"headerlink\" title=\"安装主题，推荐Next, 有详细的安装文档\"></a>安装主题，推荐Next, 有详细的安装文档</h3><h5 id=\"安装参考\"><a href=\"#安装参考\" class=\"headerlink\" title=\"安装参考\"></a>安装参考</h5><p><a href=\"http://theme-next.iissnan.com/five-minutes-setup.html\" target=\"_blank\" rel=\"noopener\">http://theme-next.iissnan.com/five-minutes-setup.html</a></p>\n<h5 id=\"详细的配置\"><a href=\"#详细的配置\" class=\"headerlink\" title=\"详细的配置\"></a>详细的配置</h5><p><a href=\"https://github.com/iissnan/hexo-theme-next/wiki/主题配置参考\" target=\"_blank\" rel=\"noopener\">https://github.com/iissnan/hexo-theme-next/wiki/主题配置参考</a></p>\n<h3 id=\"添加RSS\"><a href=\"#添加RSS\" class=\"headerlink\" title=\"添加RSS\"></a>添加RSS</h3><p><a href=\"https://github.com/hexojs/hexo-generator-feed\" target=\"_blank\" rel=\"noopener\"></a></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure>\n<h3 id=\"上传图片\"><a href=\"#上传图片\" class=\"headerlink\" title=\"上传图片\"></a>上传图片</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">放到./source/uploads文件夹下，代码中使用</span><br><span class=\"line\">![](<span class=\"regexp\">/uploads/</span>xxx.png)</span><br></pre></td></tr></table></figure>\n<h3 id=\"修改生成文件的格式\"><a href=\"#修改生成文件的格式\" class=\"headerlink\" title=\"修改生成文件的格式\"></a>修改生成文件的格式</h3><p>修改为Year-Month-Day-title样式，方便查找<br>打开<code>_config.yml</code><br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">new_post_name: :year-:month-:day-:title.md</span><br></pre></td></tr></table></figure></p>\n"},{"title":"Hello World","date":"2015-10-10T02:30:17.000Z","_content":"Welcome to [Hexo](http://hexo.io/)! This is your very first post. Check [documentation](http://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](http://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](http://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](http://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](http://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](http://hexo.io/docs/deployment.html)\n","source":"_posts/hello-world.md","raw":"title: Hello World\ndate: 2015-10-10 10:30:17\ncategories: something\n---\nWelcome to [Hexo](http://hexo.io/)! This is your very first post. Check [documentation](http://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](http://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](http://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](http://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](http://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](http://hexo.io/docs/deployment.html)\n","slug":"hello-world","published":1,"updated":"2020-01-01T02:23:42.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clb0uhkdw002eo63k2hnw7mu9","content":"<p>Welcome to <a href=\"http://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"http://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"http://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"http://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"http://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"http://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"http://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"http://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"http://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"http://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"http://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"http://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"http://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"http://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n"},{"title":"使用阿里云加速Maven包更新","comment":true,"date":"2020-11-28T13:27:05.000Z","_content":"\n阿里云maven镜像官方地址: [https://maven.aliyun.com/mvn/guide](https://maven.aliyun.com/mvn/guide)\n\nmac用户首先建立 `~/.m2/settings.conf` 文件，然后将阿里云的Maven配置写入到文件, 然后重新加载maven配置即可, 完整配置如下\n\n```xml\n<settings xmlns=\"http://maven.apache.org/SETTINGS/1.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n  xsi:schemaLocation=\"http://maven.apache.org/SETTINGS/1.0.0\n                      https://maven.apache.org/xsd/settings-1.0.0.xsd\">\n    <mirrors>\n        <mirror>\n            <id>aliyunmaven</id>\n            <mirrorOf>*</mirrorOf>\n            <name>阿里云公共仓库</name>\n            <url>https://maven.aliyun.com/repository/public</url>\n        </mirror>\n    </mirrors>\n</settings>\n```\n\n\n#### 参考资料\n[https://developer.aliyun.com/article/78124](https://developer.aliyun.com/article/78124)","source":"_posts/2020-11-28-speed-up-maven.md","raw":"title: 使用阿里云加速Maven包更新\ncomment: true\ndate: 2020-11-28 21:27:05\ncategories:\n---\n\n阿里云maven镜像官方地址: [https://maven.aliyun.com/mvn/guide](https://maven.aliyun.com/mvn/guide)\n\nmac用户首先建立 `~/.m2/settings.conf` 文件，然后将阿里云的Maven配置写入到文件, 然后重新加载maven配置即可, 完整配置如下\n\n```xml\n<settings xmlns=\"http://maven.apache.org/SETTINGS/1.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n  xsi:schemaLocation=\"http://maven.apache.org/SETTINGS/1.0.0\n                      https://maven.apache.org/xsd/settings-1.0.0.xsd\">\n    <mirrors>\n        <mirror>\n            <id>aliyunmaven</id>\n            <mirrorOf>*</mirrorOf>\n            <name>阿里云公共仓库</name>\n            <url>https://maven.aliyun.com/repository/public</url>\n        </mirror>\n    </mirrors>\n</settings>\n```\n\n\n#### 参考资料\n[https://developer.aliyun.com/article/78124](https://developer.aliyun.com/article/78124)","slug":"speed-up-maven","published":1,"updated":"2022-11-28T14:21:17.292Z","_id":"clb0uhkdx002fo63kabub7tca","comments":1,"layout":"post","photos":[],"link":"","content":"<p>阿里云maven镜像官方地址: <a href=\"https://maven.aliyun.com/mvn/guide\" target=\"_blank\" rel=\"noopener\">https://maven.aliyun.com/mvn/guide</a></p>\n<p>mac用户首先建立 <code>~/.m2/settings.conf</code> 文件，然后将阿里云的Maven配置写入到文件, 然后重新加载maven配置即可, 完整配置如下</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">settings</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://maven.apache.org/SETTINGS/1.0.0\"</span> <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">\"http://maven.apache.org/SETTINGS/1.0.0</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">                      https://maven.apache.org/xsd/settings-1.0.0.xsd\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">mirrors</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">mirror</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>aliyunmaven<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">mirrorOf</span>&gt;</span>*<span class=\"tag\">&lt;/<span class=\"name\">mirrorOf</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>阿里云公共仓库<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">url</span>&gt;</span>https://maven.aliyun.com/repository/public<span class=\"tag\">&lt;/<span class=\"name\">url</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">mirror</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">mirrors</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">settings</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h4><p><a href=\"https://developer.aliyun.com/article/78124\" target=\"_blank\" rel=\"noopener\">https://developer.aliyun.com/article/78124</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>阿里云maven镜像官方地址: <a href=\"https://maven.aliyun.com/mvn/guide\" target=\"_blank\" rel=\"noopener\">https://maven.aliyun.com/mvn/guide</a></p>\n<p>mac用户首先建立 <code>~/.m2/settings.conf</code> 文件，然后将阿里云的Maven配置写入到文件, 然后重新加载maven配置即可, 完整配置如下</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">settings</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://maven.apache.org/SETTINGS/1.0.0\"</span> <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">\"http://maven.apache.org/SETTINGS/1.0.0</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">                      https://maven.apache.org/xsd/settings-1.0.0.xsd\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">mirrors</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">mirror</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>aliyunmaven<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">mirrorOf</span>&gt;</span>*<span class=\"tag\">&lt;/<span class=\"name\">mirrorOf</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>阿里云公共仓库<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">url</span>&gt;</span>https://maven.aliyun.com/repository/public<span class=\"tag\">&lt;/<span class=\"name\">url</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">mirror</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">mirrors</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">settings</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h4><p><a href=\"https://developer.aliyun.com/article/78124\" target=\"_blank\" rel=\"noopener\">https://developer.aliyun.com/article/78124</a></p>\n"},{"title":"Hello, Nuphy Halo 65","comment":true,"date":"2022-11-28T13:48:57.000Z","_content":"\n![Halo65](/uploads/Halo65.jpg)\n\n### 购买理由\n很早就关注了Halo 65 这款键盘，一是因为颜值确实比较喜欢，其次是`三模`，支持蓝牙、2.4G与有线三种连接模式，只是一直没有在国内上市，双十一的时候发现淘宝居然上架了Halo 65，轴体比海外版本要少，据说轴也不太一样，因为之前比较习惯使用红轴键盘，所以轴体选择的`簌簌晚风轴`， 线性轴体，没有段落感，也没有青轴那么吵闹。\n\n### 拆箱与配件\n等了两天就收到了顺丰寄来的快递，快递包裹很厚，拆开意外的发现店铺还额外赠送了一套黑色的键帽，算是一份意外的惊喜\n\n外包装袋上还有二次元的形象印刷，打开盒子，发现还有几张键盘定制的二次元贴纸，然后是键盘防尘罩，键盘主体，侧面有一个Type-C数据线接口，一个开关键、还有一个2.4G的接受器插在侧面\n还有一个配件包装盒子,包含：\n- 黑、红、绿、白集中体验轴体， \n- 几个替换的其他颜色的键帽\n- 一个拔轴拔键器\n- 一条Type-C接口的键盘数据线\n\n![配件与赠送的键帽](/uploads/caps.jpg)\n\n键盘第一感觉就是重，键盘上盖板是金属材质，腰下下部为塑料材质，整体感觉比之前我那把HHKB要重不少。\n\n\n因为Halo 65官网的说明书比较难找，附带的说明书也记录的不太清楚，导致第一天一直没有找到如何开启蓝牙配对，一直使用的是2.4G来连接，体验下来感觉轴体比之前使用的红轴手感略重，但是按键的触感很不错，声音听着也很舒服，Nuphy为Halo 65都配置了隐声空格键，使空格键的敲击没有了弹簧音，减少了敲击空格键的噪音，算是一个不错的设计。\n\n![键盘一览](/uploads/keyboard-halo65.JPG)\n\n\n### 常用键盘快捷键\n记录一下Halo 65键盘的一些常用的快捷键，做个备忘:\n\n`Fn+Q、W、E` 对应蓝牙设备1、2、3,\n\n`Fn+R` 连接2.4G设备\n\n`Fn+X+C` 关闭自动休眠模式\n\n`Fn+X+V` 开启自动休眠模式\n\n`Fn+L` 查看电池点亮， 绿 > 80%,  蓝 > 20%, 红 < 20%\n\n`~` Fn+Shift+Esc\n\n`Fn+H<>` 调整腰线的灯光亮度\n\n`Fn+H+→` 切换灯光颜色\n\n`Fn+H+←` 切换腰线灯光模式\n\n`Fn+←`切换键帽灯光模式\n\n\n### 完全关闭键盘灯光效果\n`Fn+<-` 与 `Fn+H+<-` 调节可以完全关闭键盘等与侧面腰线灯光，这样能节约不少的电量，通过这几天的使用发现即使关闭键帽灯光不关闭侧面的腰线灯光，键盘的电量还是坚持不了一周，还是续航比较重要。\n\n### 最后附上官方客服发来的说明书\n![Halo 65 说明书](/uploads/Halo65-intro.png)","source":"_posts/2022-11-28-Hello-Nuphy-Halo-65.md","raw":"title: Hello, Nuphy Halo 65\ncomment: true\ndate: 2022-11-28 21:48:57\ncategories:\n---\n\n![Halo65](/uploads/Halo65.jpg)\n\n### 购买理由\n很早就关注了Halo 65 这款键盘，一是因为颜值确实比较喜欢，其次是`三模`，支持蓝牙、2.4G与有线三种连接模式，只是一直没有在国内上市，双十一的时候发现淘宝居然上架了Halo 65，轴体比海外版本要少，据说轴也不太一样，因为之前比较习惯使用红轴键盘，所以轴体选择的`簌簌晚风轴`， 线性轴体，没有段落感，也没有青轴那么吵闹。\n\n### 拆箱与配件\n等了两天就收到了顺丰寄来的快递，快递包裹很厚，拆开意外的发现店铺还额外赠送了一套黑色的键帽，算是一份意外的惊喜\n\n外包装袋上还有二次元的形象印刷，打开盒子，发现还有几张键盘定制的二次元贴纸，然后是键盘防尘罩，键盘主体，侧面有一个Type-C数据线接口，一个开关键、还有一个2.4G的接受器插在侧面\n还有一个配件包装盒子,包含：\n- 黑、红、绿、白集中体验轴体， \n- 几个替换的其他颜色的键帽\n- 一个拔轴拔键器\n- 一条Type-C接口的键盘数据线\n\n![配件与赠送的键帽](/uploads/caps.jpg)\n\n键盘第一感觉就是重，键盘上盖板是金属材质，腰下下部为塑料材质，整体感觉比之前我那把HHKB要重不少。\n\n\n因为Halo 65官网的说明书比较难找，附带的说明书也记录的不太清楚，导致第一天一直没有找到如何开启蓝牙配对，一直使用的是2.4G来连接，体验下来感觉轴体比之前使用的红轴手感略重，但是按键的触感很不错，声音听着也很舒服，Nuphy为Halo 65都配置了隐声空格键，使空格键的敲击没有了弹簧音，减少了敲击空格键的噪音，算是一个不错的设计。\n\n![键盘一览](/uploads/keyboard-halo65.JPG)\n\n\n### 常用键盘快捷键\n记录一下Halo 65键盘的一些常用的快捷键，做个备忘:\n\n`Fn+Q、W、E` 对应蓝牙设备1、2、3,\n\n`Fn+R` 连接2.4G设备\n\n`Fn+X+C` 关闭自动休眠模式\n\n`Fn+X+V` 开启自动休眠模式\n\n`Fn+L` 查看电池点亮， 绿 > 80%,  蓝 > 20%, 红 < 20%\n\n`~` Fn+Shift+Esc\n\n`Fn+H<>` 调整腰线的灯光亮度\n\n`Fn+H+→` 切换灯光颜色\n\n`Fn+H+←` 切换腰线灯光模式\n\n`Fn+←`切换键帽灯光模式\n\n\n### 完全关闭键盘灯光效果\n`Fn+<-` 与 `Fn+H+<-` 调节可以完全关闭键盘等与侧面腰线灯光，这样能节约不少的电量，通过这几天的使用发现即使关闭键帽灯光不关闭侧面的腰线灯光，键盘的电量还是坚持不了一周，还是续航比较重要。\n\n### 最后附上官方客服发来的说明书\n![Halo 65 说明书](/uploads/Halo65-intro.png)","slug":"Hello-Nuphy-Halo-65","published":1,"updated":"2022-11-28T15:51:38.969Z","_id":"clb0uj8x8002no63k6ipwubh5","comments":1,"layout":"post","photos":[],"link":"","content":"<p><img src=\"/uploads/Halo65.jpg\" alt=\"Halo65\"></p>\n<h3 id=\"购买理由\"><a href=\"#购买理由\" class=\"headerlink\" title=\"购买理由\"></a>购买理由</h3><p>很早就关注了Halo 65 这款键盘，一是因为颜值确实比较喜欢，其次是<code>三模</code>，支持蓝牙、2.4G与有线三种连接模式，只是一直没有在国内上市，双十一的时候发现淘宝居然上架了Halo 65，轴体比海外版本要少，据说轴也不太一样，因为之前比较习惯使用红轴键盘，所以轴体选择的<code>簌簌晚风轴</code>， 线性轴体，没有段落感，也没有青轴那么吵闹。</p>\n<h3 id=\"拆箱与配件\"><a href=\"#拆箱与配件\" class=\"headerlink\" title=\"拆箱与配件\"></a>拆箱与配件</h3><p>等了两天就收到了顺丰寄来的快递，快递包裹很厚，拆开意外的发现店铺还额外赠送了一套黑色的键帽，算是一份意外的惊喜</p>\n<p>外包装袋上还有二次元的形象印刷，打开盒子，发现还有几张键盘定制的二次元贴纸，然后是键盘防尘罩，键盘主体，侧面有一个Type-C数据线接口，一个开关键、还有一个2.4G的接受器插在侧面<br>还有一个配件包装盒子,包含：</p>\n<ul>\n<li>黑、红、绿、白集中体验轴体， </li>\n<li>几个替换的其他颜色的键帽</li>\n<li>一个拔轴拔键器</li>\n<li>一条Type-C接口的键盘数据线</li>\n</ul>\n<p><img src=\"/uploads/caps.jpg\" alt=\"配件与赠送的键帽\"></p>\n<p>键盘第一感觉就是重，键盘上盖板是金属材质，腰下下部为塑料材质，整体感觉比之前我那把HHKB要重不少。</p>\n<p>因为Halo 65官网的说明书比较难找，附带的说明书也记录的不太清楚，导致第一天一直没有找到如何开启蓝牙配对，一直使用的是2.4G来连接，体验下来感觉轴体比之前使用的红轴手感略重，但是按键的触感很不错，声音听着也很舒服，Nuphy为Halo 65都配置了隐声空格键，使空格键的敲击没有了弹簧音，减少了敲击空格键的噪音，算是一个不错的设计。</p>\n<p><img src=\"/uploads/keyboard-halo65.JPG\" alt=\"键盘一览\"></p>\n<h3 id=\"常用键盘快捷键\"><a href=\"#常用键盘快捷键\" class=\"headerlink\" title=\"常用键盘快捷键\"></a>常用键盘快捷键</h3><p>记录一下Halo 65键盘的一些常用的快捷键，做个备忘:</p>\n<p><code>Fn+Q、W、E</code> 对应蓝牙设备1、2、3,</p>\n<p><code>Fn+R</code> 连接2.4G设备</p>\n<p><code>Fn+X+C</code> 关闭自动休眠模式</p>\n<p><code>Fn+X+V</code> 开启自动休眠模式</p>\n<p><code>Fn+L</code> 查看电池点亮， 绿 &gt; 80%,  蓝 &gt; 20%, 红 &lt; 20%</p>\n<p><code>~</code> Fn+Shift+Esc</p>\n<p><code>Fn+H&lt;&gt;</code> 调整腰线的灯光亮度</p>\n<p><code>Fn+H+→</code> 切换灯光颜色</p>\n<p><code>Fn+H+←</code> 切换腰线灯光模式</p>\n<p><code>Fn+←</code>切换键帽灯光模式</p>\n<h3 id=\"完全关闭键盘灯光效果\"><a href=\"#完全关闭键盘灯光效果\" class=\"headerlink\" title=\"完全关闭键盘灯光效果\"></a>完全关闭键盘灯光效果</h3><p><code>Fn+&lt;-</code> 与 <code>Fn+H+&lt;-</code> 调节可以完全关闭键盘等与侧面腰线灯光，这样能节约不少的电量，通过这几天的使用发现即使关闭键帽灯光不关闭侧面的腰线灯光，键盘的电量还是坚持不了一周，还是续航比较重要。</p>\n<h3 id=\"最后附上官方客服发来的说明书\"><a href=\"#最后附上官方客服发来的说明书\" class=\"headerlink\" title=\"最后附上官方客服发来的说明书\"></a>最后附上官方客服发来的说明书</h3><p><img src=\"/uploads/Halo65-intro.png\" alt=\"Halo 65 说明书\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"/uploads/Halo65.jpg\" alt=\"Halo65\"></p>\n<h3 id=\"购买理由\"><a href=\"#购买理由\" class=\"headerlink\" title=\"购买理由\"></a>购买理由</h3><p>很早就关注了Halo 65 这款键盘，一是因为颜值确实比较喜欢，其次是<code>三模</code>，支持蓝牙、2.4G与有线三种连接模式，只是一直没有在国内上市，双十一的时候发现淘宝居然上架了Halo 65，轴体比海外版本要少，据说轴也不太一样，因为之前比较习惯使用红轴键盘，所以轴体选择的<code>簌簌晚风轴</code>， 线性轴体，没有段落感，也没有青轴那么吵闹。</p>\n<h3 id=\"拆箱与配件\"><a href=\"#拆箱与配件\" class=\"headerlink\" title=\"拆箱与配件\"></a>拆箱与配件</h3><p>等了两天就收到了顺丰寄来的快递，快递包裹很厚，拆开意外的发现店铺还额外赠送了一套黑色的键帽，算是一份意外的惊喜</p>\n<p>外包装袋上还有二次元的形象印刷，打开盒子，发现还有几张键盘定制的二次元贴纸，然后是键盘防尘罩，键盘主体，侧面有一个Type-C数据线接口，一个开关键、还有一个2.4G的接受器插在侧面<br>还有一个配件包装盒子,包含：</p>\n<ul>\n<li>黑、红、绿、白集中体验轴体， </li>\n<li>几个替换的其他颜色的键帽</li>\n<li>一个拔轴拔键器</li>\n<li>一条Type-C接口的键盘数据线</li>\n</ul>\n<p><img src=\"/uploads/caps.jpg\" alt=\"配件与赠送的键帽\"></p>\n<p>键盘第一感觉就是重，键盘上盖板是金属材质，腰下下部为塑料材质，整体感觉比之前我那把HHKB要重不少。</p>\n<p>因为Halo 65官网的说明书比较难找，附带的说明书也记录的不太清楚，导致第一天一直没有找到如何开启蓝牙配对，一直使用的是2.4G来连接，体验下来感觉轴体比之前使用的红轴手感略重，但是按键的触感很不错，声音听着也很舒服，Nuphy为Halo 65都配置了隐声空格键，使空格键的敲击没有了弹簧音，减少了敲击空格键的噪音，算是一个不错的设计。</p>\n<p><img src=\"/uploads/keyboard-halo65.JPG\" alt=\"键盘一览\"></p>\n<h3 id=\"常用键盘快捷键\"><a href=\"#常用键盘快捷键\" class=\"headerlink\" title=\"常用键盘快捷键\"></a>常用键盘快捷键</h3><p>记录一下Halo 65键盘的一些常用的快捷键，做个备忘:</p>\n<p><code>Fn+Q、W、E</code> 对应蓝牙设备1、2、3,</p>\n<p><code>Fn+R</code> 连接2.4G设备</p>\n<p><code>Fn+X+C</code> 关闭自动休眠模式</p>\n<p><code>Fn+X+V</code> 开启自动休眠模式</p>\n<p><code>Fn+L</code> 查看电池点亮， 绿 &gt; 80%,  蓝 &gt; 20%, 红 &lt; 20%</p>\n<p><code>~</code> Fn+Shift+Esc</p>\n<p><code>Fn+H&lt;&gt;</code> 调整腰线的灯光亮度</p>\n<p><code>Fn+H+→</code> 切换灯光颜色</p>\n<p><code>Fn+H+←</code> 切换腰线灯光模式</p>\n<p><code>Fn+←</code>切换键帽灯光模式</p>\n<h3 id=\"完全关闭键盘灯光效果\"><a href=\"#完全关闭键盘灯光效果\" class=\"headerlink\" title=\"完全关闭键盘灯光效果\"></a>完全关闭键盘灯光效果</h3><p><code>Fn+&lt;-</code> 与 <code>Fn+H+&lt;-</code> 调节可以完全关闭键盘等与侧面腰线灯光，这样能节约不少的电量，通过这几天的使用发现即使关闭键帽灯光不关闭侧面的腰线灯光，键盘的电量还是坚持不了一周，还是续航比较重要。</p>\n<h3 id=\"最后附上官方客服发来的说明书\"><a href=\"#最后附上官方客服发来的说明书\" class=\"headerlink\" title=\"最后附上官方客服发来的说明书\"></a>最后附上官方客服发来的说明书</h3><p><img src=\"/uploads/Halo65-intro.png\" alt=\"Halo 65 说明书\"></p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"clb0uhkb80001o63k1gsihvae","category_id":"clb0uhkbi0005o63kbqo8dnnu","_id":"clb0uhkbx000eo63k6tjxsazl"},{"post_id":"clb0uhkbf0003o63kc7mxhnot","category_id":"clb0uhkbs000bo63k9liws106","_id":"clb0uhkc1000io63koejstcep"},{"post_id":"clb0uhkby000go63k0xm6xlm0","category_id":"clb0uhkbx000fo63k278xhdwz","_id":"clb0uhkc4000mo63ktdmok6dp"},{"post_id":"clb0uhkbk0006o63kfvs4qqt8","category_id":"clb0uhkbx000fo63k278xhdwz","_id":"clb0uhkc6000po63khj7bl1sd"},{"post_id":"clb0uhkbz000ho63klqnkeeks","category_id":"clb0uhkbx000fo63k278xhdwz","_id":"clb0uhkc8000ro63kxq2a2ltw"},{"post_id":"clb0uhkbn0008o63kyio48qn0","category_id":"clb0uhkbx000fo63k278xhdwz","_id":"clb0uhkca000uo63kr8epmu7v"},{"post_id":"clb0uhkbq000ao63koxt38q42","category_id":"clb0uhkbx000fo63k278xhdwz","_id":"clb0uhkcc000xo63kkiasvhv0"},{"post_id":"clb0uhkc7000qo63kgkhyg9aj","category_id":"clb0uhkbs000bo63k9liws106","_id":"clb0uhkce000zo63k3epe8x9p"},{"post_id":"clb0uhkc9000to63kc5r30f8e","category_id":"clb0uhkbi0005o63kbqo8dnnu","_id":"clb0uhkcf0012o63krjbyw6rx"},{"post_id":"clb0uhkbt000co63kyx15o3kc","category_id":"clb0uhkbx000fo63k278xhdwz","_id":"clb0uhkcl0014o63kl6jpqg7g"},{"post_id":"clb0uhkcc000yo63k0q59oic0","category_id":"clb0uhkbs000bo63k9liws106","_id":"clb0uhkcn0016o63kcwax2xn6"},{"post_id":"clb0uhkbv000do63kw0chjn2s","category_id":"clb0uhkbx000fo63k278xhdwz","_id":"clb0uhkcp0019o63ki4l4k04s"},{"post_id":"clb0uhkce0010o63k2vvcrpde","category_id":"clb0uhkbs000bo63k9liws106","_id":"clb0uhkcr001bo63kg80dkzkd"},{"post_id":"clb0uhkcj0013o63kpub5lwlk","category_id":"clb0uhkbs000bo63k9liws106","_id":"clb0uhkct001eo63kwq2qzkqr"},{"post_id":"clb0uhkc2000ko63k5smgnc0t","category_id":"clb0uhkcf0011o63k5hidfr0f","_id":"clb0uhkcv001go63ky9dp88ws"},{"post_id":"clb0uhkcl0015o63kl2dstdo6","category_id":"clb0uhkbi0005o63kbqo8dnnu","_id":"clb0uhkcy001jo63kos4vplzs"},{"post_id":"clb0uhkcp001ao63kxz51mjj3","category_id":"clb0uhkbi0005o63kbqo8dnnu","_id":"clb0uhkcz001lo63kd1asfbi5"},{"post_id":"clb0uhkc3000lo63k09667lnf","category_id":"clb0uhkcn0017o63k0rnwfsqt","_id":"clb0uhkd2001oo63k1vhsezz1"},{"post_id":"clb0uhkcu001fo63k7sf780vv","category_id":"clb0uhkbs000bo63k9liws106","_id":"clb0uhkd3001qo63k3d94ihjc"},{"post_id":"clb0uhkc5000oo63k65ll2v3k","category_id":"clb0uhkcf0011o63k5hidfr0f","_id":"clb0uhkd5001so63klzv4m59m"},{"post_id":"clb0uhkcy001ko63kuoisni4u","category_id":"clb0uhkbs000bo63k9liws106","_id":"clb0uhkd7001uo63kd7rzst4m"},{"post_id":"clb0uhkca000vo63k2wc9lyzs","category_id":"clb0uhkcx001io63k6dr9hg4k","_id":"clb0uhkd9001wo63khxznbssu"},{"post_id":"clb0uhkd2001po63klkj7ljuz","category_id":"clb0uhkbs000bo63k9liws106","_id":"clb0uhkda001yo63kari8wimb"},{"post_id":"clb0uhkcs001co63kvr6elcg5","category_id":"clb0uhkd1001no63kpwcjvnfz","_id":"clb0uhkdb0020o63k0t2nigpl"},{"post_id":"clb0uhkd5001to63k3hu232qo","category_id":"clb0uhkbs000bo63k9liws106","_id":"clb0uhkdd0022o63kxm7269n7"},{"post_id":"clb0uhkd9001xo63knqsp102w","category_id":"clb0uhkcn0017o63k0rnwfsqt","_id":"clb0uhkdf0025o63ksh8yiwvm"},{"post_id":"clb0uhkdb0021o63k60b12dx3","category_id":"clb0uhkbs000bo63k9liws106","_id":"clb0uhkdn0028o63kl8ymfro2"},{"post_id":"clb0uhkdd0024o63kbapugd8i","category_id":"clb0uhkcn0017o63k0rnwfsqt","_id":"clb0uhkdu002ao63k5sfd5n48"},{"post_id":"clb0uhkda001zo63k87asxi3l","category_id":"clb0uhkdd0023o63kssuqgq44","_id":"clb0uhkdw002do63km5fvxqg1"},{"post_id":"clb0uhkdg0027o63kvtgzkubv","category_id":"clb0uhkdv002bo63kv6fvrf1z","_id":"clb0uhkdy002ho63k1mmx081s"},{"post_id":"clb0uhkdn0029o63ka8ivz9qi","category_id":"clb0uhkdy002go63k31wodbx9","_id":"clb0uhkdz002jo63k8tiirkpm"},{"post_id":"clb0uhkdv002co63kf8yljoyk","category_id":"clb0uhkdz002io63k23n5k9ja","_id":"clb0uhke0002lo63kpd43lr14"},{"post_id":"clb0uhkdw002eo63k2hnw7mu9","category_id":"clb0uhkdz002io63k23n5k9ja","_id":"clb0uhke0002mo63kzuc452oh"}],"PostTag":[],"Tag":[]}}