<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>NSLog(&quot;Life &amp; Code&quot;);</title>
  
  
  <link href="http://welsonla.timebot.net/atom.xml" rel="self"/>
  
  <link href="http://welsonla.timebot.net/"/>
  <updated>2023-07-02T00:57:40.561Z</updated>
  <id>http://welsonla.timebot.net/</id>
  
  <author>
    <name>welsonla</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>《&gt;TED演讲：我们为什么睡觉》 笔记</title>
    <link href="http://welsonla.timebot.net/2023/07/02/Why-we-need-sleep/"/>
    <id>http://welsonla.timebot.net/2023/07/02/Why-we-need-sleep/</id>
    <published>2023-07-02T00:55:38.000Z</published>
    <updated>2023-07-02T00:57:40.561Z</updated>
    
    
    
    
    <category term="life" scheme="http://welsonla.timebot.net/categories/life/"/>
    
    
    <category term="Sleep" scheme="http://welsonla.timebot.net/tags/Sleep/"/>
    
    <category term="Health" scheme="http://welsonla.timebot.net/tags/Health/"/>
    
  </entry>
  
  <entry>
    <title>Learning-figma-day-2 自定义样式与组件</title>
    <link href="http://welsonla.timebot.net/2022/12/10/learning-figma-day-2/"/>
    <id>http://welsonla.timebot.net/2022/12/10/learning-figma-day-2/</id>
    <published>2022-12-10T09:02:15.000Z</published>
    <updated>2022-12-10T13:55:42.671Z</updated>
    
    <content type="html"><![CDATA[<p>只是记录一下学习Figma过程中的一些笔记，可能会有更多更方便的使用技巧。</p><h3 id="本地样式"><a href="#本地样式" class="headerlink" title="本地样式"></a>本地样式</h3><h4 id="添加本地样式"><a href="#添加本地样式" class="headerlink" title="添加本地样式"></a>添加本地样式</h4><p>在Figma 中不论是字体、颜色、样式等都可以添加为自定义的样式，操作步骤如下</p><p>点击属性右上的图标，弹出窗口中点击<code>+</code>按钮即可</p><p><img src="/uploads/figma-local-style@2x.png"></p><h4 id="使用本地样式"><a href="#使用本地样式" class="headerlink" title="使用本地样式"></a>使用本地样式</h4><p>之后我们再次点击此处就可以看到我们添加到自定义样式, 右侧的调整按钮是我们可以对保存的本地样式进行调整，这样调整后的样式会将使用该样式的元素同步进行更新，比如统一修改App的导航栏颜色、Tabbar的选中颜色等</p><p><img src="/uploads/figma-local-style-list.png"></p><h4 id="取消样式关联"><a href="#取消样式关联" class="headerlink" title="取消样式关联"></a>取消样式关联</h4><p>如果我们使用了本地样式，但是想自己对该样式进行单独的修改, 如应用了阴影等设置，但是想单独调整下阴影的大小，则点击该样式右侧的断开链接图标即可</p><p><img src="/uploads/figma-local-style-unlink.png"></p><h4 id="本地样式列表"><a href="#本地样式列表" class="headerlink" title="本地样式列表"></a>本地样式列表</h4><p>本地样式在我们鼠标单击空白处会在右侧的属性栏中进行显示，我们可以直接在此处对本地样式进行修改与删除，假如我们需要对设计统一修改色调就可以直接修改某一个本地样式<br><img src="/uploads/figma-local-styles-list.png"></p><h3 id="本地组件"><a href="#本地组件" class="headerlink" title="本地组件"></a>本地组件</h3><p>本地组件是为了更好的复用与批量修改，比如我们的新闻列表，每个条目的标题与简介、缩略图都是统一的，我们就可以做一个条目的组件来统一管理他们的样式，假如我们更新的标题的字号与颜色，所有使用到该组件的地方都会进行同步的修改，这样节省了我们每个都去单独修改的时间，也更方便让相同设计元素进行复用，降低设计更新的时间成本。</p><p>一般我们在一个设计稿中将所有的组件都放在同一个Frame中集中管理，不要在页面中创建组件，这样会在后期查找父组件比较费力，我们将一个设计稿中的本地组件都放置在同一个Frame中，这样不仅方便查找，而且比较清晰。</p><p>创建组件的快捷键为<code>Opt + CMD + K</code>, 也可以选中你的元素后，点击顶部的创建组件按钮</p><p><img src="/uploads/figma-create-component.png"></p><p>创建完毕组件之后，我们就可以按住<code>Opt</code>+拖动组件快速使用一个组件，多次复制之后，我们就能快速的完成一个新闻列表样式，我们可以单独对每个子组件的标题与描述进行修改，而不会影响父组件</p><p><img src="/uploads/figma-component-list.png"></p><p>当我们对父组件的属性进行修改时，子组件也会同步的更新样式, 可能这就是设计中的面向对象概念吧</p><p><img src="/uploads/figma-component-update.png"></p><h4 id="父组件与子组件概念"><a href="#父组件与子组件概念" class="headerlink" title="父组件与子组件概念"></a>父组件与子组件概念</h4><p>父组件与子组件的特点总结(不全面):</p><ul><li>更新父组件会同步将样式同步给使用到的子组件</li><li>子组件可以单独更新自己的文本、高度，而不会影响父组件</li><li>子组件如果想单独更新组件某些样式，可以同样断开链接之后进行单独的修改，方法同本地样式</li></ul><h4 id="本地库"><a href="#本地库" class="headerlink" title="本地库"></a>本地库</h4><p>本地样式与本地组件都会显示在本地资源库中，位置在Layers右侧的Assets栏目中, 从图中可以看到，我们将所有的组件放置在同一个Frame中的优势也显示出来了，这样就不会去多个页面下去寻找定义的组件，也节省了一部分的时间,本地库中的组件，我们可以直接拖动到设计页面中进行使用。</p><p><img src="/uploads/figma-assets.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;只是记录一下学习Figma过程中的一些笔记，可能会有更多更方便的使用技巧。&lt;/p&gt;
&lt;h3 id=&quot;本地样式&quot;&gt;&lt;a href=&quot;#本地样式&quot; class=&quot;headerlink&quot; title=&quot;本地样式&quot;&gt;&lt;/a&gt;本地样式&lt;/h3&gt;&lt;h4 id=&quot;添加本地样式&quot;&gt;&lt;a h</summary>
      
    
    
    
    <category term="Design" scheme="http://welsonla.timebot.net/categories/Design/"/>
    
    
    <category term="design" scheme="http://welsonla.timebot.net/tags/design/"/>
    
    <category term="figma" scheme="http://welsonla.timebot.net/tags/figma/"/>
    
    <category term="study" scheme="http://welsonla.timebot.net/tags/study/"/>
    
  </entry>
  
  <entry>
    <title>Learning figma day 1 - 基本操作与Figma的一些常用快捷键</title>
    <link href="http://welsonla.timebot.net/2022/12/09/learning-figma-day-1/"/>
    <id>http://welsonla.timebot.net/2022/12/09/learning-figma-day-1/</id>
    <published>2022-12-09T03:10:57.000Z</published>
    <updated>2022-12-10T13:55:47.846Z</updated>
    
    <content type="html"><![CDATA[<h3 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h3><p>由于本人只有一台Macbook，以下快捷键都是在Mac系统下的，可能跟Windows系统略有不同</p><p><code>K</code> 等比缩放<br><code>V</code> 移动<br><code>CMD+左键</code> 快速选中Frame或组中的子元素<br><code>Shift + R</code> 标尺<br><code>CMD+滚轮</code> 放大缩小<br><code>Shift+ 方向键</code> 每次移动4px<br><code>CMD+左键框选</code> 可以防止拖动到底部的Frame整体，只框选范围内的元素<br><code>Shift + CMD + O</code> 外轮廓描边，转换成一个矩形面积</p><h4 id="图形"><a href="#图形" class="headerlink" title="图形"></a>图形</h4><p><code>R</code> 矩形<br><code>O</code> 圆形<br><code>L</code> 直线<br><code>T</code> 文字<br><code>A</code> 画框，快速选择页面原型尺寸，比如手机尺寸、桌面网页、Watch等</p><p>数值增加<br>所有的数值都可以在鼠标放到属性框附近的时候，按住Opt 按键左右拖拽鼠标进行增减</p><h4 id="图形属性菜单"><a href="#图形属性菜单" class="headerlink" title="图形属性菜单"></a>图形属性菜单</h4><p><img src="/uploads/figma-property.png"></p><h3 id="组和Frame"><a href="#组和Frame" class="headerlink" title="组和Frame"></a>组和Frame</h3><p><code>CMD + G</code> 编组<br><code>Opt + CMD + G</code> 合并为Frame<br><code>Shift + CMD + G</code> 取消编组或取消Frame</p><h3 id="AutoLayout"><a href="#AutoLayout" class="headerlink" title="AutoLayout"></a>AutoLayout</h3><p><code>Shift + A</code>  设置为AutoLayout布局</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;基本操作&quot;&gt;&lt;a href=&quot;#基本操作&quot; class=&quot;headerlink&quot; title=&quot;基本操作&quot;&gt;&lt;/a&gt;基本操作&lt;/h3&gt;&lt;p&gt;由于本人只有一台Macbook，以下快捷键都是在Mac系统下的，可能跟Windows系统略有不同&lt;/p&gt;
&lt;p&gt;&lt;code&gt;</summary>
      
    
    
    
    <category term="Design" scheme="http://welsonla.timebot.net/categories/Design/"/>
    
    
    <category term="design" scheme="http://welsonla.timebot.net/tags/design/"/>
    
    <category term="figma" scheme="http://welsonla.timebot.net/tags/figma/"/>
    
    <category term="study" scheme="http://welsonla.timebot.net/tags/study/"/>
    
  </entry>
  
  <entry>
    <title>deploy nuxt ssr with pm2 and nginx</title>
    <link href="http://welsonla.timebot.net/2022/11/29/deploy-nuxt-ssr-with-pm2-and-nginx/"/>
    <id>http://welsonla.timebot.net/2022/11/29/deploy-nuxt-ssr-with-pm2-and-nginx/</id>
    <published>2022-11-29T03:30:55.000Z</published>
    <updated>2022-12-06T03:00:14.328Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Why">Why</h3><p>服务端渲染能更容易做SEO，方便每个页面单独的设置关键词以便被搜索引擎抓取，让其他人更容易在网络上搜索到。</p><h3 id="测试-SEO-关键词">测试 SEO 关键词</h3><p>很多但页面应用可能不能正确的让搜索引擎抓取你的页面头部keywords，一个简单的测试方法就是使用一些第三方网站来测试抓取效果</p><p><a href="https://seo.chinaz.com/">https://seo.chinaz.com/</a><br><a href="https://www.aizhan.com/">https://www.aizhan.com/</a><br><a href="https://pagespeed.web.dev/">https://pagespeed.web.dev/</a></p><h3 id="切换Nuxt到ssr模式">切换Nuxt到ssr模式</h3><p>如果你的nuxt应用之前使用的是静态站点的模式，请在nuxt.config.json里更新或删除如下配置</p><pre><code>ssr: true,target: 'server'</code></pre><h3 id="设置应用对应的端口">设置应用对应的端口</h3><p>在<code>package.json</code>文件中增加</p><pre><code>&quot;config&quot;: &#123;    &quot;nuxt&quot;: &#123;        &quot;host&quot;: &quot;0.0.0.0&quot;,        &quot;port&quot;: &quot;3334&quot;    &#125;&#125;</code></pre><h3 id="安装pm2">安装pm2</h3><pre><code>npm install pm2@latest -g</code></pre><h3 id="生成pm2配置文件">生成pm2配置文件</h3><p>运行一下命令，这将会在你的项目目录下生成一个名为<code>ecosystem.config.js</code>配置文件</p><pre><code>pm2 ecosystem</code></pre><h3 id="修改pm2配置文件-增加apps节点">修改pm2配置文件, 增加apps节点</h3><pre><code>apps : [    &#123;        name: 'blog', # 修改为您的项目名称        exec_mode: 'cluster',        instances: '2', # 按需设置进程数量        script: './node_modules/nuxt/bin/nuxt.js',        args: 'start'    &#125;]</code></pre><h3 id="启动pm2">启动pm2</h3><pre><code>npm run pm2</code></pre><h3 id="查看运行实例">查看运行实例</h3><pre><code>pm2 list</code></pre><h3 id="常用pm2命令">常用pm2命令</h3><pre><code># 重启应用pm2 restart allpm2 restart [name]# 删除应用pm2 delete [name]# 停止pm2 stop allpm2 stop [name]</code></pre><h3 id="启动pm2控制台，查看实时访问">启动pm2控制台，查看实时访问</h3><pre><code>pm2 monit</code></pre><p><img src="/uploads/pm2_monit.png" alt="pm2 monit"></p><h3 id="在-packge-json-文件的-scripts-中增加pm2启动命令">在 <code>packge.json</code> 文件的 <code>scripts</code> 中增加pm2启动命令</h3><pre><code>&quot;scripts&quot;: &#123;    &quot;dev&quot;: &quot;nuxt --hostname '0.0.0.0'&quot;,    &quot;build&quot;: &quot;nuxt build&quot;,    &quot;start&quot;: &quot;nuxt start&quot;,    &quot;generate&quot;: &quot;nuxt generate&quot;,    &quot;pm2&quot;: &quot;nuxt build &amp;&amp; pm2 start npm --name labapps -- run start&quot;  &#125;,</code></pre><h3 id="部署到web服务器">部署到web服务器</h3><p>将除了<code>node_modules</code>目录之外的所有文件复制到你的web目录下面，启动web实例</p><pre><code>npm run pm2</code></pre><h3 id="修改nginx配置，增加反向代理">修改nginx配置，增加反向代理</h3><p>注意，反向代理的端口必须与你的<code>package.json</code>中设置的应用的端口相匹配，这样才能在同一台主机，运行多个pm2实例，并且互不影响</p><pre><code>upstream labapps &#123;    server 127.0.0.1:3334;    keepalive 64;&#125;server &#123;    server_name timebot.net;  # 设置为你的域名    add_header X-Frame-Options &quot;SAMEORIGIN&quot;;    add_header X-XSS-Protection &quot;1; mode=block&quot;;    add_header X-Content-Type-Options &quot;nosniff&quot;;    add_header Set-Cookie &quot;Path=/; HttpOnly; Secure&quot;;    #charset koi8-r;    access_log /var/log/nginx/blog.access.log;    error_log /var/log/nginx/blog.error.log debug;    location / &#123;        access_log off;        root /webroot/blog; # 修改为你的项目路径        index index.html index.htm;        try_files $uri $uri/ /index.html;        if ($request_filename ~* .*\.(js|css|woff|png|jpg|jpeg)$) &#123;            expires 1d;        &#125;        if ($request_filename ~* .*\.(?:htm|html)$) &#123;            add_header Cache-Control no-cache,no-store,must-revalidate;        &#125;        location / &#123;            proxy_http_version 1.1;            proxy_set_header Upgrade $http_upgrade;            proxy_set_header Connection &quot;upgrade&quot;;            proxy_set_header Host $host;            proxy_set_header X-Nginx-Proxy true;            proxy_cache_bypass $http_upgrade;            proxy_pass http://labapps; #反向代理        &#125;    &#125;    error_page 500 502 503 504 /50x.html;    location = /50x.html &#123;        root /usr/share/nginx/html;    &#125;&#125;</code></pre><h3 id="查看访问">查看访问</h3><pre><code>pm2 monit</code></pre><h3 id="查看实时日志">查看实时日志</h3><pre><code>pm2 logs</code></pre><p>另外，pm2还提供了<code>pm2 monitor</code>更强大的web端控制台，可以在web实时查看你的服务运行情况，只需要简单地配置即可.<br><a href="https://pm2.keymetrics.io/docs/usage/monitoring/">https://pm2.keymetrics.io/docs/usage/monitoring/</a></p><h3 id="参考资料">参考资料</h3><p><a href="https://nuxtjs.org/deployments/pm2/">Deploy Nuxt using PM2</a><br><a href="https://zhuanlan.zhihu.com/p/398023953">常用的seo查询工具(有哪些seo软件网站平台)</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;Why&quot;&gt;Why&lt;/h3&gt;
&lt;p&gt;服务端渲染能更容易做SEO，方便每个页面单独的设置关键词以便被搜索引擎抓取，让其他人更容易在网络上搜索到。&lt;/p&gt;
&lt;h3 id=&quot;测试-SEO-关键词&quot;&gt;测试 SEO 关键词&lt;/h3&gt;
&lt;p&gt;很多但页面应用可能不能正确的让搜索引</summary>
      
    
    
    
    <category term="Node" scheme="http://welsonla.timebot.net/categories/Node/"/>
    
    
    <category term="Nuxt" scheme="http://welsonla.timebot.net/tags/Nuxt/"/>
    
    <category term="pm2" scheme="http://welsonla.timebot.net/tags/pm2/"/>
    
    <category term="Nginx" scheme="http://welsonla.timebot.net/tags/Nginx/"/>
    
    <category term="ssr" scheme="http://welsonla.timebot.net/tags/ssr/"/>
    
  </entry>
  
  <entry>
    <title>Hello, Nuphy Halo 65</title>
    <link href="http://welsonla.timebot.net/2022/11/28/Hello-Nuphy-Halo-65/"/>
    <id>http://welsonla.timebot.net/2022/11/28/Hello-Nuphy-Halo-65/</id>
    <published>2022-11-28T13:48:57.000Z</published>
    <updated>2022-11-29T07:27:34.669Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/uploads/Halo65.jpg" alt="Halo65"></p><h3 id="购买理由"><a href="#购买理由" class="headerlink" title="购买理由"></a>购买理由</h3><p>很早就关注了Halo 65 这款键盘，一是因为颜值确实比较喜欢，其次是<code>三模</code>，支持蓝牙、2.4G与有线三种连接模式，只是一直没有在国内上市，双十一的时候发现淘宝居然上架了Halo 65，轴体比海外版本要少，据说轴也不太一样，因为之前比较习惯使用红轴键盘，所以轴体选择的<code>簌簌晚风轴</code>， 线性轴体，没有段落感，也没有青轴那么吵闹。</p><h3 id="拆箱与配件"><a href="#拆箱与配件" class="headerlink" title="拆箱与配件"></a>拆箱与配件</h3><p>等了两天就收到了顺丰寄来的快递，快递包裹很厚，拆开意外的发现店铺还额外赠送了一套黑色的键帽，算是一份意外的惊喜</p><p>外包装袋上还有二次元的形象印刷，打开盒子，发现还有几张键盘定制的二次元贴纸，然后是键盘防尘罩，键盘主体，侧面有一个Type-C数据线接口，一个开关键、还有一个2.4G的接受器插在侧面<br>还有一个配件包装盒子,包含：</p><ul><li>黑、红、绿、白集中体验轴体， </li><li>几个替换的其他颜色的键帽</li><li>一个拔轴拔键器</li><li>一条Type-C接口的键盘数据线</li></ul><p><img src="/uploads/caps.jpg" alt="配件与赠送的键帽"></p><p>键盘第一感觉就是重，键盘上盖板是金属材质，腰下下部为塑料材质，整体感觉比之前我那把HHKB要重不少。</p><p>因为Halo 65官网的说明书比较难找，附带的说明书也记录的不太清楚，导致第一天一直没有找到如何开启蓝牙配对，一直使用的是2.4G来连接，体验下来感觉轴体比之前使用的红轴手感略重，但是按键的触感很不错，声音听着也很舒服，Nuphy为Halo 65都配置了隐声空格键，使空格键的敲击没有了弹簧音，减少了敲击空格键的噪音，算是一个不错的设计。</p><p><img src="/uploads/keyboard-halo65.JPG" alt="键盘一览"></p><h3 id="常用键盘快捷键"><a href="#常用键盘快捷键" class="headerlink" title="常用键盘快捷键"></a>常用键盘快捷键</h3><p>记录一下Halo 65键盘的一些常用的快捷键，做个备忘:</p><p><code>Fn+Q、W、E</code> 对应蓝牙设备1、2、3,</p><p><code>Fn+R</code> 连接2.4G设备</p><p><code>Fn+X+C</code> 关闭自动休眠模式</p><p><code>Fn+X+V</code> 开启自动休眠模式</p><p><code>Fn+L</code> 查看电池点亮， 绿 &gt; 80%,  蓝 &gt; 20%, 红 &lt; 20%</p><p><code>~</code> Fn+Shift+Esc</p><p><code>Fn+H&lt;&gt;</code> 调整腰线的灯光亮度</p><p><code>Fn+H+→</code> 切换灯光颜色</p><p><code>Fn+H+←</code> 切换腰线灯光模式</p><p><code>Fn+←</code>切换键帽灯光模式</p><h3 id="完全关闭键盘灯光效果"><a href="#完全关闭键盘灯光效果" class="headerlink" title="完全关闭键盘灯光效果"></a>完全关闭键盘灯光效果</h3><p><code>Fn+&lt;-</code> 与 <code>Fn+H+&lt;-</code> 调节可以完全关闭键盘等与侧面腰线灯光，这样能节约不少的电量，通过这几天的使用发现即使关闭键帽灯光不关闭侧面的腰线灯光，键盘的电量还是坚持不了一周，还是续航比较重要。</p><h3 id="最后附上官方客服发来的说明书"><a href="#最后附上官方客服发来的说明书" class="headerlink" title="最后附上官方客服发来的说明书"></a>最后附上官方客服发来的说明书</h3><p><img src="/uploads/Halo65-intro.png" alt="Halo 65 说明书"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/uploads/Halo65.jpg&quot; alt=&quot;Halo65&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;购买理由&quot;&gt;&lt;a href=&quot;#购买理由&quot; class=&quot;headerlink&quot; title=&quot;购买理由&quot;&gt;&lt;/a&gt;购买理由&lt;/h3&gt;&lt;p&gt;很早就关注了Halo</summary>
      
    
    
    
    <category term="工具控" scheme="http://welsonla.timebot.net/categories/%E5%B7%A5%E5%85%B7%E6%8E%A7/"/>
    
    
    <category term="机械键盘" scheme="http://welsonla.timebot.net/tags/%E6%9C%BA%E6%A2%B0%E9%94%AE%E7%9B%98/"/>
    
    <category term="Nuphy" scheme="http://welsonla.timebot.net/tags/Nuphy/"/>
    
    <category term="Halo 65" scheme="http://welsonla.timebot.net/tags/Halo-65/"/>
    
  </entry>
  
  <entry>
    <title>使用阿里云加速Maven包更新</title>
    <link href="http://welsonla.timebot.net/2020/11/28/speed-up-maven/"/>
    <id>http://welsonla.timebot.net/2020/11/28/speed-up-maven/</id>
    <published>2020-11-28T13:27:05.000Z</published>
    <updated>2022-11-29T07:35:44.086Z</updated>
    
    <content type="html"><![CDATA[<p>阿里云maven镜像官方地址: <a href="https://maven.aliyun.com/mvn/guide">https://maven.aliyun.com/mvn/guide</a></p><p>mac用户首先建立 <code>~/.m2/settings.conf</code> 文件，然后将阿里云的Maven配置写入到文件, 然后重新加载maven配置即可, 完整配置如下</p><pre><code>&lt;settings xmlns=&quot;http://maven.apache.org/SETTINGS/1.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;  xsi:schemaLocation=&quot;http://maven.apache.org/SETTINGS/1.0.0                      https://maven.apache.org/xsd/settings-1.0.0.xsd&quot;&gt;    &lt;mirrors&gt;        &lt;mirror&gt;            &lt;id&gt;aliyunmaven&lt;/id&gt;            &lt;mirrorOf&gt;*&lt;/mirrorOf&gt;            &lt;name&gt;阿里云公共仓库&lt;/name&gt;            &lt;url&gt;https://maven.aliyun.com/repository/public&lt;/url&gt;        &lt;/mirror&gt;    &lt;/mirrors&gt;&lt;/settings&gt;</code></pre><h4 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h4><p><a href="https://developer.aliyun.com/article/78124">https://developer.aliyun.com/article/78124</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;阿里云maven镜像官方地址: &lt;a href=&quot;https://maven.aliyun.com/mvn/guide&quot;&gt;https://maven.aliyun.com/mvn/guide&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;mac用户首先建立 &lt;code&gt;~/.m2/settings</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>解决 Mac OS 删除文件后磁盘空间不更新的问题</title>
    <link href="http://welsonla.timebot.net/2020/01/01/Mac-Diskspace-release/"/>
    <id>http://welsonla.timebot.net/2020/01/01/Mac-Diskspace-release/</id>
    <published>2020-01-01T07:58:37.000Z</published>
    <updated>2022-11-28T17:30:26.971Z</updated>
    
    <content type="html"><![CDATA[<p>这个问题存在了很久，一直也没有找到解决的办法，今天上网查询后发现，这个问题只存在于使用了Time Machine的用户，原因是因为Time Machine的快照自动生成造成的，于是试着按照解决方法查询了下本地快照</p><pre><code>sudo tmutil listlocalsnapshots /</code></pre><p>得到如下结果,确实Mac在自动的生成系统的快照</p><pre><code>com.apple.TimeMachine.2019-12-31-214148.localcom.apple.TimeMachine.2019-12-31-223649.localcom.apple.TimeMachine.2020-01-01-103649.localcom.apple.TimeMachine.2020-01-01-113743.localcom.apple.TimeMachine.2020-01-01-124353.localcom.apple.TimeMachine.2020-01-01-143927.localcom.apple.TimeMachine.2020-01-01-153651.local</code></pre><p>试着删除其中的一个快照</p><pre><code>tmutil deletelocalsnapshots 2019-12-31-214148</code></pre><p>发现系统的空间立刻就释放了，猜测就是以为Time Machine的快照自动生成导致的，不知道是Mac系统的bug还是因为备份的策略,  试着写了一个Ruby的脚本来自动的删除这些快照，希望对遇到此问题的人有帮助:</p><pre><code>#/bin/bash#diskspace infoputs &quot;Current Diskspace info:&quot; puts &quot;---------&quot;puts %x[df -lh /]#list localsnapshotsputs &quot;\n\n---------&quot;list = %x[tmutil listlocalsnapshots /]puts list#delete snapshotsputs &quot;\n\n---------&quot;puts &quot;Start delete snapshots:&quot;matches = list.scan(/\d&#123;4&#125;-\d&#123;2&#125;-\d&#123;2&#125;-\d&#123;6&#125;/)matches.each_with_index&#123;|snapshoot,index|    puts &quot;delete the listlocalsnapshots #&#123;snapshoot&#125;&quot;    sh = &quot;tmutil deletelocalsnapshots #&#123;snapshoot&#125;&quot;    system(sh)&#125;#diskspace info after delete snapshotputs puts &quot;\n\n---------&quot;puts &quot;Diskspace info after delete snapshots:&quot;puts %x[df -lh /]</code></pre><p>将上面脚本保存为snapshots_clear.rb,或从我保存的gist上<a href="https://gist.github.com/welsonla/0e4c4a818abfae0400a4087b54e81c43">下载</a><br>执行. </p><pre class="line-numbers language-shell"><code class="language-shell">ruby snapshots_clear.rb<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h5 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h5><p><a href="http://nb.zol.com.cn/671/6715453.html">Mac瘦身技巧 删除文件后可用空间还变少了？</a><br><a href="https://forums.macrumors.com/threads/solution-reclaim-storage-back-from-system.2073174/">Solution: Reclaim storage back from “System”</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;这个问题存在了很久，一直也没有找到解决的办法，今天上网查询后发现，这个问题只存在于使用了Time Machine的用户，原因是因为Time Machine的快照自动生成造成的，于是试着按照解决方法查询了下本地快照&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo tmutil lis</summary>
      
    
    
    
    <category term="Mac" scheme="http://welsonla.timebot.net/categories/Mac/"/>
    
    
  </entry>
  
  <entry>
    <title>Mac OS 安装 配置Laravel开发环境</title>
    <link href="http://welsonla.timebot.net/2020/01/01/composer-and-laravel-setup/"/>
    <id>http://welsonla.timebot.net/2020/01/01/composer-and-laravel-setup/</id>
    <published>2020-01-01T04:57:25.000Z</published>
    <updated>2020-01-01T05:30:09.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="使用Homebrew安装PHP-7-3"><a href="#使用Homebrew安装PHP-7-3" class="headerlink" title="使用Homebrew安装PHP 7.3"></a>使用Homebrew安装PHP 7.3</h3><p>实用brew的好处就是PHP版本可以不被系统升级而改变，从而保证升级系统不会影响PHP环境</p><pre><code>brew install php@7.3brew link php@7.3</code></pre><h3 id="安装Composer"><a href="#安装Composer" class="headerlink" title="安装Composer"></a>安装Composer</h3><pre><code>wget https://getcomposer.org/installerphp -r &quot;copy(&#39;https://getcomposer.org/installer&#39;, &#39;composer-setup.php&#39;);&quot;php -r &quot;if (hash_file(&#39;sha384&#39;, &#39;composer-setup.php&#39;) === &#39;baf1608c33254d00611ac1705c1d9958c817a1a33bce370c0595974b342601bd80b92a3f46067da89e3b06bff421f182&#39;) &#123; echo &#39;Installer verified&#39;; &#125; else &#123; echo &#39;Installer corrupt&#39;; unlink(&#39;composer-setup.php&#39;); &#125; echo PHP_EOL;&quot;php composer-setup.phpphp -r &quot;unlink(&#39;composer-setup.php&#39;);&quot;</code></pre><h3 id="添加到全局"><a href="#添加到全局" class="headerlink" title="添加到全局"></a>添加到全局</h3><pre><code>mv composer.phar /usr/local/bin/composer</code></pre><h3 id="设置国内镜像"><a href="#设置国内镜像" class="headerlink" title="设置国内镜像"></a>设置国内镜像</h3><pre><code>composer config -g repo.packagist composer https://mirrors.aliyun.com/composer/  </code></pre><h3 id="安装Composer多线程下载支持"><a href="#安装Composer多线程下载支持" class="headerlink" title="安装Composer多线程下载支持"></a>安装Composer多线程下载支持</h3><pre><code> composer global require hirak/prestissimo</code></pre><h3 id="安装laravel"><a href="#安装laravel" class="headerlink" title="安装laravel"></a>安装laravel</h3><pre><code>composer global require laravel/installer</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;使用Homebrew安装PHP-7-3&quot;&gt;&lt;a href=&quot;#使用Homebrew安装PHP-7-3&quot; class=&quot;headerlink&quot; title=&quot;使用Homebrew安装PHP 7.3&quot;&gt;&lt;/a&gt;使用Homebrew安装PHP 7.3&lt;/h3&gt;&lt;p&gt;实用</summary>
      
    
    
    
    <category term="PHP" scheme="http://welsonla.timebot.net/categories/PHP/"/>
    
    
  </entry>
  
  <entry>
    <title>iTerm2 with powerline theme</title>
    <link href="http://welsonla.timebot.net/2019/06/13/iterm-with-powerline-theme/"/>
    <id>http://welsonla.timebot.net/2019/06/13/iterm-with-powerline-theme/</id>
    <published>2019-06-13T06:01:03.000Z</published>
    <updated>2022-11-29T07:36:34.414Z</updated>
    
    <content type="html"><![CDATA[<h3 id="确保已经安装了oh-my-zsh"><a href="#确保已经安装了oh-my-zsh" class="headerlink" title="确保已经安装了oh-my-zsh"></a>确保已经安装了oh-my-zsh</h3><p><a href="https://github.com/robbyrussell/oh-my-zsh">https://github.com/robbyrussell/oh-my-zsh</a></p><h3 id="安装-oh-my-zsh-powerline-theme"><a href="#安装-oh-my-zsh-powerline-theme" class="headerlink" title="安装 oh-my-zsh-powerline-theme"></a>安装 oh-my-zsh-powerline-theme</h3><p><a href="https://github.com/jeremyFreeAgent/oh-my-zsh-powerline-theme">https://github.com/jeremyFreeAgent/oh-my-zsh-powerline-theme</a></p><pre><code>cd ~/.oh-my-zsh/themesgit clone git@github.com:jeremyFreeAgent/oh-my-zsh-powerline-theme.git#更新submodule,进行powerline-fonts安装cd oh-my-zsh-powerline-themegit submodule initgit submodule update#安装./install_in_omz.sh</code></pre><h3 id="更改iterm字体"><a href="#更改iterm字体" class="headerlink" title="更改iterm字体"></a>更改iterm字体</h3><p>iTerm2 – Preferences – Profiles – Text<br>找到Font，点击Change Font，将字体改为<code>Fira mono for powerline</code>, 字号14pt</p><h3 id="修改zsh配置"><a href="#修改zsh配置" class="headerlink" title="修改zsh配置"></a>修改zsh配置</h3><p>打开<code>~/.zshrc</code>文件，修改<code>ZSH_THEME&quot;</code>为<code>powerline</code></p><p>添加如下配置</p><pre><code>POWERLINE_RIGHT_B=&quot;&quot;  POWERLINE_RIGHT_A=&quot;date&quot;  POWERLINE_RIGHT_A_COLOR_FRONT=&quot;black&quot;  POWERLINE_RIGHT_A_COLOR_BACK=&quot;red&quot;  POWERLINE_HIDE_HOST_NAME=&quot;true&quot;POWERLINE_PATH=&quot;short&quot;POWERLINE_SHORT_HOST_NAME=&quot;true&quot;POWERLINE_DETECT_SSH=&quot;true&quot;POWERLINE_GIT_CLEAN=&quot;✔&quot;POWERLINE_GIT_DIRTY=&quot;✘&quot;POWERLINE_GIT_ADDED=&quot;%F&#123;green&#125;✚%F&#123;black&#125;&quot;POWERLINE_GIT_MODIFIED=&quot;%F&#123;blue&#125;✹%F&#123;black&#125;&quot;POWERLINE_GIT_DELETED=&quot;%F&#123;red&#125;✖%F&#123;black&#125;&quot;POWERLINE_GIT_UNTRACKED=&quot;%F&#123;yellow&#125;✭%F&#123;black&#125;&quot;POWERLINE_GIT_RENAMED=&quot;➜&quot;POWERLINE_GIT_UNMERGED=&quot;═&quot;</code></pre><h3 id="最终效果"><a href="#最终效果" class="headerlink" title="最终效果"></a>最终效果</h3><p><img src="/uploads/powerline.png" alt="/uploads/powerline.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;确保已经安装了oh-my-zsh&quot;&gt;&lt;a href=&quot;#确保已经安装了oh-my-zsh&quot; class=&quot;headerlink&quot; title=&quot;确保已经安装了oh-my-zsh&quot;&gt;&lt;/a&gt;确保已经安装了oh-my-zsh&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https</summary>
      
    
    
    
    <category term="工具控" scheme="http://welsonla.timebot.net/categories/%E5%B7%A5%E5%85%B7%E6%8E%A7/"/>
    
    
  </entry>
  
  <entry>
    <title>将 ReactNative 的默认终端改为 iTerm2</title>
    <link href="http://welsonla.timebot.net/2018/05/30/let-react-native-shell-open-in-iterm/"/>
    <id>http://welsonla.timebot.net/2018/05/30/let-react-native-shell-open-in-iterm/</id>
    <published>2018-05-30T02:43:17.000Z</published>
    <updated>2020-01-01T02:23:42.000Z</updated>
    
    <content type="html"><![CDATA[<p>自己平时使用iTerm2作为主力的终端，ReactNative的默认打开终端是系统自带的Terminal，这样就会经常存在同时开启两个终端软件的情况，搜索了一下，解决方式很简单</p><pre><code>open node_modules/react-native/scripts</code></pre><p> 选中<code>launchPackager.command</code>,右键切换它的默认打开工具</p><p> <img src="/uploads/react-native-open-shell.png"></p><h5 id="致谢"><a href="#致谢" class="headerlink" title="致谢"></a>致谢</h5><p> <a href="https://stackoverflow.com/questions/37814803/how-to-get-react-native-run-ios-to-open-in-iterm-instead-of-terminal-on-a-macos">https://stackoverflow.com/questions/37814803/how-to-get-react-native-run-ios-to-open-in-iterm-instead-of-terminal-on-a-macos</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;自己平时使用iTerm2作为主力的终端，ReactNative的默认打开终端是系统自带的Terminal，这样就会经常存在同时开启两个终端软件的情况，搜索了一下，解决方式很简单&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;open node_modules/react-native/sc</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Xcode BuildNumber 自动更新</title>
    <link href="http://welsonla.timebot.net/2017/08/10/Xcode-buildid-autoincrement/"/>
    <id>http://welsonla.timebot.net/2017/08/10/Xcode-buildid-autoincrement/</id>
    <published>2017-08-10T08:16:29.000Z</published>
    <updated>2020-01-01T02:23:42.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近为了区分发包的id，从晚上找了一段代码<br>原理就是，先用PlistBuddy获取当前的buildid，之后+1，然后再更新plist文件</p><pre class="line-numbers language-ruby"><code class="language-ruby">buildNumber<span class="token operator">=</span>$<span class="token punctuation">(</span><span class="token operator">/</span>usr<span class="token operator">/</span>libexec<span class="token operator">/</span><span class="token constant">PlistBuddy</span> <span class="token operator">-</span>c <span class="token string">"Print CFBundleVersion"</span> <span class="token string">"$&amp;#123;PROJECT_DIR&amp;#125;/$&amp;#123;INFOPLIST_FILE&amp;#125;"</span><span class="token punctuation">)</span>buildNumber<span class="token operator">=</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token variable">$buildNumber</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">/</span>usr<span class="token operator">/</span>libexec<span class="token operator">/</span><span class="token constant">PlistBuddy</span> <span class="token operator">-</span>c <span class="token string">"Set :CFBundleVersion $buildNumber"</span> <span class="token string">"$&amp;#123;PROJECT_DIR&amp;#125;/$&amp;#123;INFOPLIST_FILE&amp;#125;"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>From: <a href="https://gist.github.com/sekati/3172554">https://gist.github.com/sekati/3172554</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;最近为了区分发包的id，从晚上找了一段代码&lt;br&gt;原理就是，先用PlistBuddy获取当前的buildid，之后+1，然后再更新plist文件&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-ruby&quot;&gt;&lt;code class=&quot;languag</summary>
      
    
    
    
    <category term="iOS" scheme="http://welsonla.timebot.net/categories/iOS/"/>
    
    
  </entry>
  
  <entry>
    <title>heroku command</title>
    <link href="http://welsonla.timebot.net/2017/07/13/heroku-command/"/>
    <id>http://welsonla.timebot.net/2017/07/13/heroku-command/</id>
    <published>2017-07-13T06:55:36.000Z</published>
    <updated>2020-01-01T02:23:42.000Z</updated>
    
    <content type="html"><![CDATA[<p>记录一些经常使用到的一些heroku管理命令</p><h1 id="login"><a href="#login" class="headerlink" title="login"></a>login</h1><pre><code>heroku login</code></pre><h1 id="show-apps-info"><a href="#show-apps-info" class="headerlink" title="show apps info"></a>show apps info</h1><p>展示你app的一些信息</p><pre><code>heroku apps:info</code></pre><h1 id="deploy"><a href="#deploy" class="headerlink" title="deploy"></a>deploy</h1><p>推送代码并部署</p><pre><code>git push heroku  master</code></pre><h1 id="ssh"><a href="#ssh" class="headerlink" title="ssh"></a>ssh</h1><p>远程到你app目录项目，可以操作远程的一些文件，相当于ssh登录</p><pre><code>heroku run bash</code></pre><h1 id="log"><a href="#log" class="headerlink" title="log"></a>log</h1><p>查看实时输出的log</p><pre><code>heroku logs -t</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;记录一些经常使用到的一些heroku管理命令&lt;/p&gt;
&lt;h1 id=&quot;login&quot;&gt;&lt;a href=&quot;#login&quot; class=&quot;headerlink&quot; title=&quot;login&quot;&gt;&lt;/a&gt;login&lt;/h1&gt;&lt;pre&gt;&lt;code&gt;heroku login
&lt;/code&gt;</summary>
      
    
    
    
    <category term="工具控" scheme="http://welsonla.timebot.net/categories/%E5%B7%A5%E5%85%B7%E6%8E%A7/"/>
    
    
  </entry>
  
  <entry>
    <title>使用Fastlane</title>
    <link href="http://welsonla.timebot.net/2017/07/13/using-fastlane/"/>
    <id>http://welsonla.timebot.net/2017/07/13/using-fastlane/</id>
    <published>2017-07-13T05:59:36.000Z</published>
    <updated>2020-01-01T02:23:42.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="相关介绍"><a href="#相关介绍" class="headerlink" title="相关介绍"></a>相关介绍</h2><p>Fastlane最初由KrauseFx(<a href="https://github.com/KrauseFx">Github</a>, <a href="https://twitter.com/krausefx">Twitter</a>) 发起，现在已经有百位代码和插件贡献者，丰富的Action与Plugin可以满足众多个性化的需求，目前官方主要的工具如下(来自fastlane项目Github页面), 但不仅限于此。</p><p><img src="/uploads/WX20170525-112539.png"></p><h2 id="相关文档"><a href="#相关文档" class="headerlink" title="相关文档"></a>相关文档</h2><p><a href="https://github.com/fastlane/fastlane">Github主页</a><br><a href="https://rubygems.org/gems/fastlane">Gem主页</a><br><a href="https://docs.fastlane.tools/">官方文档</a></p><h2 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h2><p>Fastlane是用ruby写的一套程序，最简单的方式是使用gem的方式来安装</p><pre><code>gem install fastlane</code></pre><h2 id="初始化你的项目"><a href="#初始化你的项目" class="headerlink" title="初始化你的项目"></a>初始化你的项目</h2><p>创建Gemfile主要是为了让其他人安装的Gem保持统一，Cocoapods之后也可以用Gemfile来做统一的管理</p><pre><code>bundle initecho &#39;gem &quot;fastlane&quot;&#39; &gt;&gt; Gemfilebundle install</code></pre><h2 id="init"><a href="#init" class="headerlink" title="init"></a>init</h2><p>init期间会让你输入AppleID，如果该应用存在，Fastlane会通过iTunesConnect拉取应用的metadata和所有的App截图，如果不存在，会提示你是否在iTunesConnect中创建一个新的App</p><pre><code>fastlane init</code></pre><p>安装完之后，会在项目中产生一个fastlane目录，使用<code>tree</code>命令查看结构如下</p><pre><code>├── Appfile├── Deliverfile├── Fastfile├── README.md├── metadata│   ├── some metadata file ...├── report.xml└── screenshots    └── README.txt</code></pre><p><strong>Appfile</strong> 记录了你appid，apple id，team id等信息<br><strong>Deliverfile</strong> 记录了bundle与appleid信息<br><strong>Fastfile</strong> 是我们打包使用到的主要文件，这里面可以自定义你的流程<br><strong>metadata</strong> 是通过iTunesConnect获取到的app的信息文件，包括介绍<br><strong>screenshots</strong> 保存了所有的截图信息</p><h2 id="一个简单的Fastfile流程"><a href="#一个简单的Fastfile流程" class="headerlink" title="一个简单的Fastfile流程"></a>一个简单的Fastfile流程</h2><pre><code>lane :beta do  git_pull  increment_build_number #build number更新    cocoapods #安装cocoapods      gym(       scheme: &quot;MyScheme&quot;,          #主Target       output_directory:&quot;./build&quot;,  #导出目录       export_method: &quot;development&quot; #导出方式    )      sh &quot;./customScript.sh&quot; #执行你的脚本文件或Shell命令end</code></pre><p>更多关于gym的配置参数，可以参见 <a href="https://docs.fastlane.tools/actions/#gym">Actions - fastlane docs</a></p><p><strong>每个Action下面都有Example和Parameters，默认是收起状态</strong> </p><p><img src="/uploads/WX20170605-134929.png"></p><p> 通过执行<code>fastlane beta</code> 就可以进行打包，并且<code>dYSM</code>和<code>ipa</code>文件会导出到我们指定的项目下的<code>build</code>目录下面</p><pre><code>fastlane beta</code></pre><h3 id="fastlane文件结构"><a href="#fastlane文件结构" class="headerlink" title="fastlane文件结构"></a>fastlane文件结构</h3><pre><code>fastlane_version &quot;2.44.1&quot;default_platform :iosplatform :ios do  #1. 开始前的一些操作，如代码更新(git_pull)  before_all do  end  #2. 打包一个测试版本  desc &quot;build a beta version&quot;  lane :beta do    gym(      export_method: &quot;ad-hoc&quot;,      output_directory: &quot;./build&quot;,    )   end  #3. 打包一个线上版本，并上传  lane :release do    gym(         export_method: &quot;app-store&quot;    )    deliver(force: true)  end  #4.打包结束操作  after_all do |lane|      #打开导出目录    sh &quot;open ./build&quot;  end  #5. 捕获错误  error do |lane, exception|  endend</code></pre><h2 id="一些常用命令"><a href="#一些常用命令" class="headerlink" title="一些常用命令"></a>一些常用命令</h2><pre><code># 列出现有的所有actionfastlane actions# 列出所有lane任务fastlane list# 创建一个新的Actionfastlane new_action# 打印环境变量，Fastfile中可以`ENV[&#39;PWD&#39;]`使用这些变量fastlane env# 显示本机Provision文件security find-identity -v -p codesigning</code></pre><h2 id="常见问题可以参见或官方issues"><a href="#常见问题可以参见或官方issues" class="headerlink" title="常见问题可以参见或官方issues"></a>常见问题可以参见或官方issues</h2><p><a href="https://docs.fastlane.tools/codesigning/troubleshooting/">https://docs.fastlane.tools/codesigning/troubleshooting/</a><br><a href="https://github.com/fastlane/fastlane/issues">Issues · fastlane&#x2F;fastlane · GitHub</a></p><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><p><a href="https://github.com/fastlane/fastlane">Fastlane</a><br><a href="https://rubygems.org/gems/fastlane">Fastlane对应的Gem主页</a><br><a href="https://docs.fastlane.tools/">Fastlane官方文档</a><br><a href="http://www.jianshu.com/p/1aebb0854c78">Fastlane实战（一）：移动开发自动化之道</a><br><a href="http://www.jianshu.com/p/0520192c9bd7">Fastlane实战（二）：Action和Plugin机制</a><br><a href="http://www.jianshu.com/p/faae6f95cbd8">Fastlane实战（五）：高级用法</a><br><a href="https://docs.fastlane.tools/actions/#building">fastlane actions</a><br><a href="https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Advanced.md">Advanced fastlane</a>  </p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;相关介绍&quot;&gt;&lt;a href=&quot;#相关介绍&quot; class=&quot;headerlink&quot; title=&quot;相关介绍&quot;&gt;&lt;/a&gt;相关介绍&lt;/h2&gt;&lt;p&gt;Fastlane最初由KrauseFx(&lt;a href=&quot;https://github.com/KrauseFx&quot;&gt;Gith</summary>
      
    
    
    
    <category term="自动化" scheme="http://welsonla.timebot.net/categories/%E8%87%AA%E5%8A%A8%E5%8C%96/"/>
    
    
  </entry>
  
  <entry>
    <title>配置多个SSH Keygen</title>
    <link href="http://welsonla.timebot.net/2016/12/08/multiple-ssh-key-config/"/>
    <id>http://welsonla.timebot.net/2016/12/08/multiple-ssh-key-config/</id>
    <published>2016-12-08T02:16:06.000Z</published>
    <updated>2020-01-01T02:23:42.000Z</updated>
    
    <content type="html"><![CDATA[<pre class="line-numbers language-ruby"><code class="language-ruby">ssh<span class="token operator">-</span>keygen <span class="token operator">-</span>t rsa <span class="token operator">-</span><span class="token constant">C</span> <span class="token string">"YourMail@github.com"</span> <span class="token operator">-</span>f <span class="token operator">~</span><span class="token operator">/</span><span class="token punctuation">.</span>ssh<span class="token operator">/</span>github_rsa<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="添加到私钥列表"><a href="#添加到私钥列表" class="headerlink" title="添加到私钥列表"></a>添加到私钥列表</h2><pre class="line-numbers language-ruby"><code class="language-ruby">ssh<span class="token operator">-</span>add <span class="token operator">~</span><span class="token operator">/</span><span class="token punctuation">.</span>ssh<span class="token operator">/</span>id_rsassh<span class="token operator">-</span>add <span class="token operator">~</span><span class="token operator">/</span><span class="token punctuation">.</span>ssh<span class="token operator">/</span>github_rsa<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="查看私钥列表"><a href="#查看私钥列表" class="headerlink" title="查看私钥列表"></a>查看私钥列表</h2><pre class="line-numbers language-ruby"><code class="language-ruby"><span class="token comment" spellcheck="true"># 可以通过 ssh-add -l 来确私钥列表</span>ssh<span class="token operator">-</span>add <span class="token operator">-</span>l<span class="token comment" spellcheck="true"># 可以通过 ssh-add -D 来清空私钥列表</span>ssh<span class="token operator">-</span>add <span class="token operator">-</span><span class="token constant">D</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="添加配置"><a href="#添加配置" class="headerlink" title="添加配置"></a>添加配置</h2><pre class="line-numbers language-ruby"><code class="language-ruby">cd <span class="token operator">~</span><span class="token operator">/</span><span class="token punctuation">.</span>sshtouch config<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="添加配置内容"><a href="#添加配置内容" class="headerlink" title="添加配置内容"></a>添加配置内容</h2><pre class="line-numbers language-ruby"><code class="language-ruby"><span class="token constant">Host</span> github<span class="token punctuation">.</span>com    <span class="token constant">HostName</span> github<span class="token punctuation">.</span>com    <span class="token constant">PreferredAuthentications</span> publickey <span class="token comment" spellcheck="true">#认证类型为私钥</span>    <span class="token constant">IdentityFile</span> <span class="token operator">~</span><span class="token operator">/</span><span class="token punctuation">.</span>ssh<span class="token operator">/</span>github_rsa<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="添加github-rsa-pub内容到github的SSH-KEY列表"><a href="#添加github-rsa-pub内容到github的SSH-KEY列表" class="headerlink" title="添加github_rsa.pub内容到github的SSH KEY列表"></a>添加github_rsa.pub内容到github的SSH KEY列表</h2><pre class="line-numbers language-ruby"><code class="language-ruby">cat <span class="token operator">~</span><span class="token operator">/</span><span class="token punctuation">.</span>ssh<span class="token operator">/</span>github_rsa<span class="token punctuation">.</span>pub<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><pre class="line-numbers language-ruby"><code class="language-ruby">⇒  ssh <span class="token operator">-</span><span class="token constant">T</span> git<span class="token variable">@github</span><span class="token punctuation">.</span>com<span class="token comment" spellcheck="true"># 会提示， 说明已经配置成功</span><span class="token constant">Hi</span> welsonla<span class="token operator">!</span> <span class="token constant">You</span>'ve successfully authenticated<span class="token punctuation">,</span> but <span class="token constant">GitHub</span> does <span class="token keyword">not</span> provide shell access<span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><p><a href="https://my.oschina.net/stefanzhlg/blog/529403">https://my.oschina.net/stefanzhlg/blog/529403</a><br><a href="http://riny.net/2014/git-ssh-key/">http://riny.net/2014/git-ssh-key/</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;pre class=&quot;line-numbers language-ruby&quot;&gt;&lt;code class=&quot;language-ruby&quot;&gt;ssh&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;keygen &lt;span class=&quot;token operat</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>iOS Tips</title>
    <link href="http://welsonla.timebot.net/2016/03/23/iOS-Tips/"/>
    <id>http://welsonla.timebot.net/2016/03/23/iOS-Tips/</id>
    <published>2016-03-23T01:33:47.000Z</published>
    <updated>2020-01-01T05:30:28.000Z</updated>
    
    <content type="html"><![CDATA[<p>Code Snippets</p><h5 id="去除空白TableViewCell的分割线"><a href="#去除空白TableViewCell的分割线" class="headerlink" title="去除空白TableViewCell的分割线"></a>去除空白TableViewCell的分割线</h5><pre class="line-numbers language-js"><code class="language-js">listTable<span class="token punctuation">.</span>tableFooterView <span class="token operator">=</span> <span class="token punctuation">[</span>UIView <span class="token keyword">new</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h5 id="让header与cell一起滚动，不在顶部悬停"><a href="#让header与cell一起滚动，不在顶部悬停" class="headerlink" title="让header与cell一起滚动，不在顶部悬停"></a>让header与cell一起滚动，不在顶部悬停</h5><pre class="line-numbers language-js"><code class="language-js">设置为UITableViewStyleGrouped<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><span id="more"></span><h5 id="在拼音打字的时候，不让textField响应Change"><a href="#在拼音打字的时候，不让textField响应Change" class="headerlink" title="在拼音打字的时候，不让textField响应Change"></a>在拼音打字的时候，不让textField响应Change</h5><pre class="line-numbers language-js"><code class="language-js"><span class="token comment" spellcheck="true">//MARK: textfield notification</span><span class="token operator">-</span> <span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>textFieldDidChange<span class="token punctuation">:</span><span class="token punctuation">(</span>NSNotification <span class="token operator">*</span><span class="token punctuation">)</span>notification<span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>   UITextRange <span class="token operator">*</span>selectedRange <span class="token operator">=</span> <span class="token punctuation">[</span>self<span class="token punctuation">.</span>searchField markedTextRange<span class="token punctuation">]</span><span class="token punctuation">;</span>   NSString <span class="token operator">*</span> newText <span class="token operator">=</span> <span class="token punctuation">[</span>self<span class="token punctuation">.</span>textField textInRange<span class="token punctuation">:</span>selectedRange<span class="token punctuation">]</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">//获取高亮部分,拼音状态不进行搜索</span>   <span class="token keyword">if</span><span class="token punctuation">(</span>newText<span class="token punctuation">.</span>length<span class="token operator">></span><span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>       <span class="token keyword">return</span><span class="token punctuation">;</span>   <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>……<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="将数组中的Model的某个字段合并成String"><a href="#将数组中的Model的某个字段合并成String" class="headerlink" title="将数组中的Model的某个字段合并成String"></a>将数组中的Model的某个字段合并成String</h5><pre class="line-numbers language-js"><code class="language-js">#假设listArray中是User实体，有一个Name字段<span class="token punctuation">[</span><span class="token punctuation">[</span>listArray valueForKey<span class="token punctuation">:</span>@“Name”<span class="token punctuation">]</span> componentsJoinedByString<span class="token punctuation">:</span>@<span class="token string">"\n"</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h5 id="设置NavigationBarItem的Title，可以让其与Tabbar的Title区分开"><a href="#设置NavigationBarItem的Title，可以让其与Tabbar的Title区分开" class="headerlink" title="设置NavigationBarItem的Title，可以让其与Tabbar的Title区分开"></a>设置NavigationBarItem的Title，可以让其与Tabbar的Title区分开</h5><pre class="line-numbers language-js"><code class="language-js">self<span class="token punctuation">.</span>navigationItem<span class="token punctuation">.</span>title <span class="token operator">=</span> @“Home”<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h5 id="通过设置Cell的Custom-Insets来替代自定义View的分割线"><a href="#通过设置Cell的Custom-Insets来替代自定义View的分割线" class="headerlink" title="通过设置Cell的Custom Insets来替代自定义View的分割线"></a>通过设置Cell的Custom Insets来替代自定义View的分割线</h5><p><img src="/uploads/cell-insets.png"></p><h3 id="Xcode"><a href="#Xcode" class="headerlink" title="Xcode"></a>Xcode</h3><ol><li>按住Shift可以一次选择多个AutoLayout约束</li><li>按住Ctrl,再点按Alt可以Toggle设置是否添加Margin</li><li>Ctrl+Command+↑切换h与m文件（Objective-C使用）</li><li>给类改名，并修改相关引用地方的类名<br><img src="/uploads/xcode-rename.png"></li></ol><p><img src="/uploads/xcode-rename-relation.png"></p><h4 id="屏蔽Xcode8自带log"><a href="#屏蔽Xcode8自带log" class="headerlink" title="屏蔽Xcode8自带log"></a>屏蔽Xcode8自带log</h4><pre class="line-numbers language-ruby"><code class="language-ruby"><span class="token punctuation">[</span>http<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>stackoverflow<span class="token punctuation">.</span>com<span class="token operator">/</span>questions<span class="token operator">/</span><span class="token number">37800790</span><span class="token operator">/</span>hide<span class="token operator">-</span>strange<span class="token operator">-</span>unwanted<span class="token operator">-</span>xcode<span class="token number">-8</span><span class="token operator">-</span>logs<span class="token punctuation">]</span><span class="token punctuation">(</span>http<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>stackoverflow<span class="token punctuation">.</span>com<span class="token operator">/</span>questions<span class="token operator">/</span><span class="token number">37800790</span><span class="token operator">/</span>hide<span class="token operator">-</span>strange<span class="token operator">-</span>unwanted<span class="token operator">-</span>xcode<span class="token number">-8</span><span class="token operator">-</span>logs<span class="token punctuation">)</span><span class="token number">1</span><span class="token operator">-</span> <span class="token constant">From</span> <span class="token constant">Xcode</span> menu open<span class="token punctuation">:</span> <span class="token constant">Product</span> <span class="token operator">></span> <span class="token constant">Scheme</span> <span class="token operator">></span> <span class="token constant">Edit</span> <span class="token constant">Scheme</span><span class="token number">2</span><span class="token operator">-</span> <span class="token constant">On</span> your <span class="token constant">Environment</span> <span class="token constant">Variables</span> set <span class="token constant">OS_ACTIVITY_MODE</span> <span class="token operator">=</span> disable<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Xcode8-注释快捷键"><a href="#Xcode8-注释快捷键" class="headerlink" title="Xcode8 注释快捷键"></a>Xcode8 注释快捷键</h3><pre class="line-numbers language-ruby"><code class="language-ruby"><span class="token constant">Option</span><span class="token operator">+</span><span class="token constant">Command</span><span class="token operator">+</span><span class="token operator">/</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
    
    
    <summary type="html">&lt;p&gt;Code Snippets&lt;/p&gt;
&lt;h5 id=&quot;去除空白TableViewCell的分割线&quot;&gt;&lt;a href=&quot;#去除空白TableViewCell的分割线&quot; class=&quot;headerlink&quot; title=&quot;去除空白TableViewCell的分割线&quot;&gt;&lt;/a&gt;去除空白TableViewCell的分割线&lt;/h5&gt;&lt;pre&gt;&lt;code class=&quot;js&quot;&gt;listTable.tableFooterView = [UIView new];
&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&quot;让header与cell一起滚动，不在顶部悬停&quot;&gt;&lt;a href=&quot;#让header与cell一起滚动，不在顶部悬停&quot; class=&quot;headerlink&quot; title=&quot;让header与cell一起滚动，不在顶部悬停&quot;&gt;&lt;/a&gt;让header与cell一起滚动，不在顶部悬停&lt;/h5&gt;&lt;pre&gt;&lt;code class=&quot;js&quot;&gt;设置为UITableViewStyleGrouped
&lt;/code&gt;&lt;/pre&gt;</summary>
    
    
    
    <category term="iOS" scheme="http://welsonla.timebot.net/categories/iOS/"/>
    
    
  </entry>
  
  <entry>
    <title>Mac Tips</title>
    <link href="http://welsonla.timebot.net/2016/03/23/Mac-Tips/"/>
    <id>http://welsonla.timebot.net/2016/03/23/Mac-Tips/</id>
    <published>2016-03-23T01:32:12.000Z</published>
    <updated>2020-01-01T05:30:37.000Z</updated>
    
    <content type="html"><![CDATA[<p>一些常用的命令备忘</p><h4 id="显示隐藏文件"><a href="#显示隐藏文件" class="headerlink" title="显示隐藏文件"></a>显示隐藏文件</h4><pre class="line-numbers language-js"><code class="language-js">defaults write com<span class="token punctuation">.</span>apple<span class="token punctuation">.</span>finder AppleShowAllFiles <span class="token operator">-</span>bool <span class="token boolean">true</span><span class="token punctuation">;</span>killall Finder<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="不显示隐藏文件"><a href="#不显示隐藏文件" class="headerlink" title="不显示隐藏文件"></a>不显示隐藏文件</h4><pre class="line-numbers language-js"><code class="language-js">defaults write com<span class="token punctuation">.</span>apple<span class="token punctuation">.</span>finder AppleShowAllFiles <span class="token operator">-</span>bool <span class="token boolean">false</span><span class="token punctuation">;</span>killall Finder<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="10-11后开启第三方硬盘的Trim"><a href="#10-11后开启第三方硬盘的Trim" class="headerlink" title="10.11后开启第三方硬盘的Trim"></a>10.11后开启第三方硬盘的Trim</h4><pre class="line-numbers language-js"><code class="language-js">sudo trimforce enable<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="释放不活跃的内存"><a href="#释放不活跃的内存" class="headerlink" title="释放不活跃的内存"></a>释放不活跃的内存</h4><pre class="line-numbers language-js"><code class="language-js">sudo purge<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="允许任何来源的软件进行安装"><a href="#允许任何来源的软件进行安装" class="headerlink" title="允许任何来源的软件进行安装"></a>允许任何来源的软件进行安装</h4><pre class="line-numbers language-js"><code class="language-js">sudo spctl <span class="token operator">--</span>master<span class="token operator">-</span>disable<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;一些常用的命令备忘&lt;/p&gt;
&lt;h4 id=&quot;显示隐藏文件&quot;&gt;&lt;a href=&quot;#显示隐藏文件&quot; class=&quot;headerlink&quot; title=&quot;显示隐藏文件&quot;&gt;&lt;/a&gt;显示隐藏文件&lt;/h4&gt;&lt;pre class=&quot;line-numbers language-js&quot;&gt;&lt;c</summary>
      
    
    
    
    <category term="iOS" scheme="http://welsonla.timebot.net/categories/iOS/"/>
    
    
  </entry>
  
  <entry>
    <title>2016年2月29日</title>
    <link href="http://welsonla.timebot.net/2016/02/29/the-day-of-2-29/"/>
    <id>http://welsonla.timebot.net/2016/02/29/the-day-of-2-29/</id>
    <published>2016-02-29T14:04:06.000Z</published>
    <updated>2020-01-01T02:23:42.000Z</updated>
    
    <content type="html"><![CDATA[<p>仅为今天，特意发博一篇</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;仅为今天，特意发博一篇&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>从Objective-c迁移到Swift的一些坑</title>
    <link href="http://welsonla.timebot.net/2016/01/27/Objective-c-to-Swift/"/>
    <id>http://welsonla.timebot.net/2016/01/27/Objective-c-to-Swift/</id>
    <published>2016-01-27T07:08:49.000Z</published>
    <updated>2020-01-01T02:23:42.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="NSString-to-String"><a href="#NSString-to-String" class="headerlink" title="NSString to String"></a>NSString to String</h3><pre class="line-numbers language-swift"><code class="language-swift">#<span class="token builtin">ObjC</span><span class="token builtin">NSString</span> <span class="token operator">*</span>notice#<span class="token builtin">Swift</span><span class="token keyword">var</span> notice<span class="token punctuation">:</span><span class="token builtin">String</span><span class="token operator">?</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="NSArray-NSMutableArray-to-Array"><a href="#NSArray-NSMutableArray-to-Array" class="headerlink" title="NSArray,NSMutableArray to Array"></a>NSArray,NSMutableArray to Array</h3><pre class="line-numbers language-swift"><code class="language-swift">#<span class="token number">1</span><span class="token punctuation">.</span> 声明#<span class="token builtin">ObjC</span><span class="token builtin">NSMutableArray</span> <span class="token operator">*</span>listArray <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token builtin">NSMutableArray</span> array<span class="token punctuation">]</span><span class="token punctuation">;</span>#<span class="token builtin">Swift</span><span class="token keyword">var</span> listArray<span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token builtin">String</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">Array</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//必须带参数类型</span><span class="token keyword">var</span> listArray<span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token builtin">AnyObject</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">Array</span><span class="token punctuation">(</span><span class="token punctuation">)</span>#<span class="token number">2</span><span class="token punctuation">.</span> 增加元素#<span class="token builtin">ObjC</span><span class="token punctuation">[</span>listArray addObject<span class="token punctuation">:</span>@<span class="token string">"foo"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>#<span class="token builtin">Swift</span>listArray<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"foo"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="NSRange-gt-Range"><a href="#NSRange-gt-Range" class="headerlink" title="NSRange-&gt;Range"></a>NSRange-&gt;Range</h3><pre class="line-numbers language-swift"><code class="language-swift">#<span class="token builtin">ObjC</span><span class="token builtin">NSRange</span> range <span class="token operator">=</span> <span class="token function">NSMakeRange</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span>#<span class="token builtin">Swift</span><span class="token function">Range</span><span class="token punctuation">(</span>start<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> end<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="NSDictionary-NSmutableDictionary-to-Dictionary"><a href="#NSDictionary-NSmutableDictionary-to-Dictionary" class="headerlink" title="NSDictionary,NSmutableDictionary  to Dictionary"></a>NSDictionary,NSmutableDictionary  to Dictionary</h1><pre class="line-numbers language-swift"><code class="language-swift">#<span class="token builtin">ObjC</span><span class="token builtin">NSMutableDictionary</span> <span class="token operator">*</span>score <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token builtin">NSMutableDictionary</span> dictionary<span class="token punctuation">]</span><span class="token punctuation">;</span>#<span class="token builtin">Swift</span><span class="token keyword">var</span> score0<span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token builtin">String</span><span class="token punctuation">:</span><span class="token builtin">String</span><span class="token punctuation">]</span><span class="token operator">?</span><span class="token keyword">var</span> score1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token builtin">String</span><span class="token punctuation">:</span><span class="token builtin">String</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">var</span> score2 <span class="token operator">=</span> <span class="token builtin">Dictionary</span><span class="token operator">&lt;</span><span class="token builtin">String</span><span class="token punctuation">,</span><span class="token builtin">String</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">var</span> score3 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">]</span>#<span class="token builtin">ObjC</span><span class="token builtin">NSDictionary</span> <span class="token operator">*</span>person <span class="token operator">=</span> @<span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>@<span class="token string">"name"</span><span class="token punctuation">:</span>@<span class="token string">"Single Dog"</span><span class="token punctuation">,</span>@<span class="token string">"Skill"</span><span class="token punctuation">:</span>@<span class="token string">"Swift"</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">;</span>person<span class="token punctuation">[</span>@“age”<span class="token punctuation">]</span> <span class="token operator">=</span> @“<span class="token number">28</span>”<span class="token punctuation">;</span>#<span class="token builtin">Swift</span><span class="token keyword">var</span> person <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"name"</span><span class="token punctuation">:</span><span class="token string">"Single Dog"</span><span class="token punctuation">,</span><span class="token string">"Skill"</span><span class="token punctuation">:</span><span class="token string">"Swift"</span><span class="token punctuation">]</span>person<span class="token punctuation">[</span><span class="token string">"age"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"28"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Random"><a href="#Random" class="headerlink" title="Random"></a>Random</h3><pre class="line-numbers language-swift"><code class="language-swift">#<span class="token builtin">ObjC</span>arc4random<span class="token operator">%</span><span class="token number">255</span>#<span class="token builtin">Swift</span><span class="token function">arc4random_uniform</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">255</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Selector"><a href="#Selector" class="headerlink" title="Selector"></a>Selector</h3><p>感觉Selector的方式不如ObjC那样有方法提示，容易写错，效率反而不如之前</p><pre class="line-numbers language-swift"><code class="language-swift">#<span class="token builtin">ObjC</span><span class="token constant">SEL</span> callback <span class="token operator">=</span> @<span class="token function">selector</span><span class="token punctuation">(</span>uploadCallback<span class="token punctuation">:</span><span class="token punctuation">)</span>#<span class="token builtin">Swift</span><span class="token function">Selector</span><span class="token punctuation">(</span><span class="token string">"uploadCallback:"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="id-to-AnyObject"><a href="#id-to-AnyObject" class="headerlink" title="id to AnyObject"></a>id to AnyObject</h3><pre class="line-numbers language-swift"><code class="language-swift">#<span class="token builtin">ObjC</span>id sender#<span class="token builtin">Swift</span><span class="token keyword">var</span> sender<span class="token punctuation">:</span><span class="token builtin">Anyobject</span><span class="token operator">?</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="三元运算缩写"><a href="#三元运算缩写" class="headerlink" title="三元运算缩写"></a>三元运算缩写</h3><pre class="line-numbers language-swift"><code class="language-swift">#<span class="token builtin">ObjC</span>a <span class="token operator">?</span> <span class="token punctuation">:</span> b#<span class="token builtin">Swift</span>a <span class="token operator">?</span><span class="token operator">?</span> b<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="枚举"><a href="#枚举" class="headerlink" title="枚举"></a>枚举</h3><pre class="line-numbers language-swift"><code class="language-swift">#<span class="token builtin">ObjC</span>typedef <span class="token function">NS_ENUM</span><span class="token punctuation">(</span><span class="token builtin">NSInteger</span><span class="token punctuation">,</span><span class="token builtin">LocationState</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token builtin">LocationStateStart</span><span class="token punctuation">,</span>    <span class="token builtin">LocationStateFinish</span><span class="token punctuation">,</span>    <span class="token builtin">LocationStateFail</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">;</span>#<span class="token builtin">Swift</span><span class="token keyword">enum</span> <span class="token builtin">LocationState</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">case</span> <span class="token builtin">LocationStart</span><span class="token punctuation">,</span> <span class="token builtin">LocationFinish</span><span class="token punctuation">,</span> <span class="token builtin">LocationFail</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="Todo-List"><a href="#Todo-List" class="headerlink" title="Todo List"></a>Todo List</h1><ol><li>Block to Closure</li><li>DateFormatter</li><li>nil value check<br>……</li></ol><p>遇到继续添加,未完待续……</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;NSString-to-String&quot;&gt;&lt;a href=&quot;#NSString-to-String&quot; class=&quot;headerlink&quot; title=&quot;NSString to String&quot;&gt;&lt;/a&gt;NSString to String&lt;/h3&gt;&lt;pre clas</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Blog迁移到了Hexo</title>
    <link href="http://welsonla.timebot.net/2015/10/10/start-using-hexo/"/>
    <id>http://welsonla.timebot.net/2015/10/10/start-using-hexo/</id>
    <published>2015-10-10T02:58:17.000Z</published>
    <updated>2022-11-29T07:32:42.213Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Octopress的痛点"><a href="#Octopress的痛点" class="headerlink" title="Octopress的痛点"></a>Octopress的痛点</h2><p>受不了<code>_deploy</code>文件夹的折磨，以及AutoGenerate Disable这错误导致生成问题，rake deploy靠运气成功,今天将blog迁移到了hexo</p><h2 id="Hexo优点"><a href="#Hexo优点" class="headerlink" title="Hexo优点"></a>Hexo优点</h2><ol><li>更简洁的语法</li></ol><pre class="line-numbers language-ruby"><code class="language-ruby"> hexo <span class="token keyword">new</span> <span class="token string">"title"</span> hexo <span class="token keyword">new</span> <span class="token class-name">page</span> hexo g <span class="token comment" spellcheck="true">#生成</span> hexo d <span class="token comment" spellcheck="true">#部署</span> hexo s <span class="token comment" spellcheck="true">#运行</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="2"><li><p>更快的生成速度</p></li><li><p>直观的部署结果</p></li></ol><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><ol><li><p>安装Node  </p><p> 参考node官方 <a href="https://nodejs.org/">https://nodejs.org</a></p></li><li><p>安装hexo以及用到的东西</p></li></ol><pre class="line-numbers language-ruby"><code class="language-ruby">npm install <span class="token operator">-</span>g hexo<span class="token operator">-</span>cli<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="3"><li>创建Blog</li></ol><pre class="line-numbers language-ruby"><code class="language-ruby">hexo init blogcd blognpm install<span class="token comment" spellcheck="true">#安装Server</span>npm install hexo<span class="token operator">-</span>server <span class="token operator">--</span>save<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h2><p>创建文章  </p><pre class="line-numbers language-ruby"><code class="language-ruby">hexo <span class="token keyword">new</span> <span class="token string">"first blog"</span><span class="token comment" spellcheck="true">#创建独立页面</span>hexo <span class="token keyword">new</span> <span class="token class-name">page</span> <span class="token string">"about"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="为页面设置多个Tag"><a href="#为页面设置多个Tag" class="headerlink" title="为页面设置多个Tag"></a>为页面设置多个Tag</h2><p>使用如下格式可以为文章设置多个tag</p><pre><code>tags:  - hello  - world</code></pre><p>预备部署  </p><pre class="line-numbers language-ruby"><code class="language-ruby"><span class="token comment" spellcheck="true">#添加github部署支持</span>npm install hexo<span class="token operator">-</span>deployer<span class="token operator">-</span>git <span class="token operator">--</span>save<span class="token comment" spellcheck="true">## 修改_config.yml  </span>deploy<span class="token punctuation">:</span>  type<span class="token punctuation">:</span> git <span class="token comment" spellcheck="true">#不要再使用github作为type</span>  repo<span class="token punctuation">:</span> git<span class="token variable">@github</span><span class="token punctuation">.</span>com<span class="token punctuation">:</span><span class="token operator">&lt;</span>yourname<span class="token operator">></span><span class="token operator">/</span><span class="token operator">&lt;</span>yourname<span class="token operator">></span><span class="token punctuation">.</span>github<span class="token punctuation">.</span>io<span class="token punctuation">.</span>git  branch<span class="token punctuation">:</span> master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="部署静态到github"><a href="#部署静态到github" class="headerlink" title="部署静态到github"></a>部署静态到github</h2><pre><code>hexo clean &amp;&amp; hexo deploy</code></pre><h2 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h2><h3 id="安装主题，推荐Next-有详细的安装文档"><a href="#安装主题，推荐Next-有详细的安装文档" class="headerlink" title="安装主题，推荐Next, 有详细的安装文档"></a>安装主题，推荐Next, 有详细的安装文档</h3><h5 id="安装参考"><a href="#安装参考" class="headerlink" title="安装参考"></a>安装参考</h5><p><a href="http://theme-next.iissnan.com/five-minutes-setup.html">http://theme-next.iissnan.com/five-minutes-setup.html</a></p><h5 id="详细的配置"><a href="#详细的配置" class="headerlink" title="详细的配置"></a>详细的配置</h5><p><a href="https://github.com/iissnan/hexo-theme-next/wiki/%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE%E5%8F%82%E8%80%83">https://github.com/iissnan/hexo-theme-next/wiki/主题配置参考</a></p><h3 id="添加RSS"><a href="#添加RSS" class="headerlink" title="添加RSS"></a>添加RSS</h3><p><a href="https://github.com/hexojs/hexo-generator-feed"></a></p><pre class="line-numbers language-js"><code class="language-js">npm install hexo<span class="token operator">-</span>generator<span class="token operator">-</span>feed <span class="token operator">--</span>save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="上传图片"><a href="#上传图片" class="headerlink" title="上传图片"></a>上传图片</h3><pre class="line-numbers language-js"><code class="language-js">放到<span class="token punctuation">.</span><span class="token operator">/</span>source<span class="token operator">/</span>uploads文件夹下，代码中使用<span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token operator">/</span>uploads<span class="token operator">/</span>xxx<span class="token punctuation">.</span>png<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="修改生成文件的格式"><a href="#修改生成文件的格式" class="headerlink" title="修改生成文件的格式"></a>修改生成文件的格式</h3><p>修改为Year-Month-Day-title样式，方便查找<br>打开<code>_config.yml</code></p><pre class="line-numbers language-js"><code class="language-js">new_post_name<span class="token punctuation">:</span> <span class="token punctuation">:</span>year<span class="token operator">-</span><span class="token punctuation">:</span>month<span class="token operator">-</span><span class="token punctuation">:</span>day<span class="token operator">-</span><span class="token punctuation">:</span>title<span class="token punctuation">.</span>md <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="开启代码高亮"><a href="#开启代码高亮" class="headerlink" title="开启代码高亮"></a>开启代码高亮</h3><p>其实hexo本身已经自带了代码高亮，但是我的从<code>2.x</code>的版本升级到<code>6.0</code>不知道为什么就失效了，所以使用了第三方的高亮插件来代替<br><a href="https://github.com/ele828/hexo-prism-plugin">https://github.com/ele828/hexo-prism-plugin</a></p><pre><code>npm i -S hexo-prism-plugin</code></pre><p>修改<code>_config.xml</code>关闭<code>hilight</code>,替换成<code>prism_plugin</code></p><pre><code>prism_plugin:  mode: &#39;preprocess&#39;  theme: &#39;default&#39;  line_number: truehighlight:  enable: false</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Octopress的痛点&quot;&gt;&lt;a href=&quot;#Octopress的痛点&quot; class=&quot;headerlink&quot; title=&quot;Octopress的痛点&quot;&gt;&lt;/a&gt;Octopress的痛点&lt;/h2&gt;&lt;p&gt;受不了&lt;code&gt;_deploy&lt;/code&gt;文件夹的折磨，</summary>
      
    
    
    
    <category term="something" scheme="http://welsonla.timebot.net/categories/something/"/>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://welsonla.timebot.net/2015/10/10/hello-world/"/>
    <id>http://welsonla.timebot.net/2015/10/10/hello-world/</id>
    <published>2015-10-10T02:30:17.000Z</published>
    <updated>2020-01-01T02:23:42.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="http://hexo.io/">Hexo</a>! This is your very first post. Check <a href="http://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="http://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="http://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="http://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="http://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="http://hexo.io/docs/deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;http://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;http://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for m</summary>
      
    
    
    
    <category term="something" scheme="http://welsonla.timebot.net/categories/something/"/>
    
    
  </entry>
  
</feed>
