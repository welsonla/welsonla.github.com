<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>NSLog(&quot;Life &amp; Code&quot;);</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://welsonla.timebot.net/"/>
  <updated>2022-11-28T15:51:38.969Z</updated>
  <id>http://welsonla.timebot.net/</id>
  
  <author>
    <name>welsonla</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hello, Nuphy Halo 65</title>
    <link href="http://welsonla.timebot.net/2022/11/28/Hello-Nuphy-Halo-65/"/>
    <id>http://welsonla.timebot.net/2022/11/28/Hello-Nuphy-Halo-65/</id>
    <published>2022-11-28T13:48:57.000Z</published>
    <updated>2022-11-28T15:51:38.969Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/uploads/Halo65.jpg" alt="Halo65"></p><h3 id="购买理由"><a href="#购买理由" class="headerlink" title="购买理由"></a>购买理由</h3><p>很早就关注了Halo 65 这款键盘，一是因为颜值确实比较喜欢，其次是<code>三模</code>，支持蓝牙、2.4G与有线三种连接模式，只是一直没有在国内上市，双十一的时候发现淘宝居然上架了Halo 65，轴体比海外版本要少，据说轴也不太一样，因为之前比较习惯使用红轴键盘，所以轴体选择的<code>簌簌晚风轴</code>， 线性轴体，没有段落感，也没有青轴那么吵闹。</p><h3 id="拆箱与配件"><a href="#拆箱与配件" class="headerlink" title="拆箱与配件"></a>拆箱与配件</h3><p>等了两天就收到了顺丰寄来的快递，快递包裹很厚，拆开意外的发现店铺还额外赠送了一套黑色的键帽，算是一份意外的惊喜</p><p>外包装袋上还有二次元的形象印刷，打开盒子，发现还有几张键盘定制的二次元贴纸，然后是键盘防尘罩，键盘主体，侧面有一个Type-C数据线接口，一个开关键、还有一个2.4G的接受器插在侧面<br>还有一个配件包装盒子,包含：</p><ul><li>黑、红、绿、白集中体验轴体， </li><li>几个替换的其他颜色的键帽</li><li>一个拔轴拔键器</li><li>一条Type-C接口的键盘数据线</li></ul><p><img src="/uploads/caps.jpg" alt="配件与赠送的键帽"></p><p>键盘第一感觉就是重，键盘上盖板是金属材质，腰下下部为塑料材质，整体感觉比之前我那把HHKB要重不少。</p><p>因为Halo 65官网的说明书比较难找，附带的说明书也记录的不太清楚，导致第一天一直没有找到如何开启蓝牙配对，一直使用的是2.4G来连接，体验下来感觉轴体比之前使用的红轴手感略重，但是按键的触感很不错，声音听着也很舒服，Nuphy为Halo 65都配置了隐声空格键，使空格键的敲击没有了弹簧音，减少了敲击空格键的噪音，算是一个不错的设计。</p><p><img src="/uploads/keyboard-halo65.JPG" alt="键盘一览"></p><h3 id="常用键盘快捷键"><a href="#常用键盘快捷键" class="headerlink" title="常用键盘快捷键"></a>常用键盘快捷键</h3><p>记录一下Halo 65键盘的一些常用的快捷键，做个备忘:</p><p><code>Fn+Q、W、E</code> 对应蓝牙设备1、2、3,</p><p><code>Fn+R</code> 连接2.4G设备</p><p><code>Fn+X+C</code> 关闭自动休眠模式</p><p><code>Fn+X+V</code> 开启自动休眠模式</p><p><code>Fn+L</code> 查看电池点亮， 绿 &gt; 80%,  蓝 &gt; 20%, 红 &lt; 20%</p><p><code>~</code> Fn+Shift+Esc</p><p><code>Fn+H&lt;&gt;</code> 调整腰线的灯光亮度</p><p><code>Fn+H+→</code> 切换灯光颜色</p><p><code>Fn+H+←</code> 切换腰线灯光模式</p><p><code>Fn+←</code>切换键帽灯光模式</p><h3 id="完全关闭键盘灯光效果"><a href="#完全关闭键盘灯光效果" class="headerlink" title="完全关闭键盘灯光效果"></a>完全关闭键盘灯光效果</h3><p><code>Fn+&lt;-</code> 与 <code>Fn+H+&lt;-</code> 调节可以完全关闭键盘等与侧面腰线灯光，这样能节约不少的电量，通过这几天的使用发现即使关闭键帽灯光不关闭侧面的腰线灯光，键盘的电量还是坚持不了一周，还是续航比较重要。</p><h3 id="最后附上官方客服发来的说明书"><a href="#最后附上官方客服发来的说明书" class="headerlink" title="最后附上官方客服发来的说明书"></a>最后附上官方客服发来的说明书</h3><p><img src="/uploads/Halo65-intro.png" alt="Halo 65 说明书"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/uploads/Halo65.jpg&quot; alt=&quot;Halo65&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;购买理由&quot;&gt;&lt;a href=&quot;#购买理由&quot; class=&quot;headerlink&quot; title=&quot;购买理由&quot;&gt;&lt;/a&gt;购买理由&lt;/h3&gt;&lt;p&gt;很早就关注了Halo
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>使用阿里云加速Maven包更新</title>
    <link href="http://welsonla.timebot.net/2020/11/28/speed-up-maven/"/>
    <id>http://welsonla.timebot.net/2020/11/28/speed-up-maven/</id>
    <published>2020-11-28T13:27:05.000Z</published>
    <updated>2022-11-28T14:21:17.292Z</updated>
    
    <content type="html"><![CDATA[<p>阿里云maven镜像官方地址: <a href="https://maven.aliyun.com/mvn/guide" target="_blank" rel="noopener">https://maven.aliyun.com/mvn/guide</a></p><p>mac用户首先建立 <code>~/.m2/settings.conf</code> 文件，然后将阿里云的Maven配置写入到文件, 然后重新加载maven配置即可, 完整配置如下</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">settings</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/SETTINGS/1.0.0"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/SETTINGS/1.0.0</span></span></span><br><span class="line"><span class="tag"><span class="string">                      https://maven.apache.org/xsd/settings-1.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mirrors</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>aliyunmaven<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>*<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>阿里云公共仓库<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://maven.aliyun.com/repository/public<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mirrors</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h4><p><a href="https://developer.aliyun.com/article/78124" target="_blank" rel="noopener">https://developer.aliyun.com/article/78124</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;阿里云maven镜像官方地址: &lt;a href=&quot;https://maven.aliyun.com/mvn/guide&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://maven.aliyun.com/mvn/guide&lt;/a&gt;&lt;/p&gt;
&lt;p
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>解决 Mac OS 删除文件后磁盘空间不更新的问题</title>
    <link href="http://welsonla.timebot.net/2020/01/01/Mac-Diskspace-release/"/>
    <id>http://welsonla.timebot.net/2020/01/01/Mac-Diskspace-release/</id>
    <published>2020-01-01T07:58:37.000Z</published>
    <updated>2020-01-01T08:57:07.000Z</updated>
    
    <content type="html"><![CDATA[<p>这个问题存在了很久，一直也没有找到解决的办法，今天上网查询后发现，这个问题只存在于使用了Time Machine的用户，原因是因为Time Machine的快照自动生成造成的，于是试着按照解决方法查询了下本地快照</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">sudo</span> tmutil listlocalsnapshots /</span><br></pre></td></tr></table></figure><p>得到如下结果,确实Mac在自动的生成系统的快照<br><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">com.apple.TimeMachine<span class="number">.2019</span><span class="number">-12</span><span class="number">-31</span><span class="number">-214148.</span>local</span><br><span class="line">com.apple.TimeMachine<span class="number">.2019</span><span class="number">-12</span><span class="number">-31</span><span class="number">-223649.</span>local</span><br><span class="line">com.apple.TimeMachine<span class="number">.2020</span><span class="number">-01</span><span class="number">-01</span><span class="number">-103649.</span>local</span><br><span class="line">com.apple.TimeMachine<span class="number">.2020</span><span class="number">-01</span><span class="number">-01</span><span class="number">-113743.</span>local</span><br><span class="line">com.apple.TimeMachine<span class="number">.2020</span><span class="number">-01</span><span class="number">-01</span><span class="number">-124353.</span>local</span><br><span class="line">com.apple.TimeMachine<span class="number">.2020</span><span class="number">-01</span><span class="number">-01</span><span class="number">-143927.</span>local</span><br><span class="line">com.apple.TimeMachine<span class="number">.2020</span><span class="number">-01</span><span class="number">-01</span><span class="number">-153651.</span>local</span><br></pre></td></tr></table></figure></p><p>试着删除其中的一个快照<br><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tmutil deletelocalsnapshots <span class="number">2019</span><span class="number">-12</span><span class="number">-31</span><span class="number">-214148</span></span><br></pre></td></tr></table></figure></p><p>发现系统的空间立刻就释放了，猜测就是以为Time Machine的快照自动生成导致的，不知道是Mac系统的bug还是因为备份的策略,  试着写了一个Ruby的脚本来自动的删除这些快照，希望对遇到此问题的人有帮助:</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#diskspace info</span></span><br><span class="line">puts <span class="string">"Current Diskspace info:"</span> </span><br><span class="line">puts <span class="string">"---------"</span></span><br><span class="line">puts <span class="string">%x[df -lh /]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#list localsnapshots</span></span><br><span class="line">puts <span class="string">"\n\n---------"</span></span><br><span class="line">list = <span class="string">%x[tmutil listlocalsnapshots /]</span></span><br><span class="line">puts list</span><br><span class="line"></span><br><span class="line"><span class="comment">#delete snapshots</span></span><br><span class="line">puts <span class="string">"\n\n---------"</span></span><br><span class="line">puts <span class="string">"Start delete snapshots:"</span></span><br><span class="line">matches = list.scan(<span class="regexp">/\d&#123;4&#125;-\d&#123;2&#125;-\d&#123;2&#125;-\d&#123;6&#125;/</span>)</span><br><span class="line">matches.each_with_index&#123;<span class="params">|snapshoot,index|</span></span><br><span class="line">    puts <span class="string">"delete the listlocalsnapshots <span class="subst">#&#123;snapshoot&#125;</span>"</span></span><br><span class="line">    sh = <span class="string">"tmutil deletelocalsnapshots <span class="subst">#&#123;snapshoot&#125;</span>"</span></span><br><span class="line">    system(sh)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#diskspace info after delete snapshot</span></span><br><span class="line">puts puts <span class="string">"\n\n---------"</span></span><br><span class="line">puts <span class="string">"Diskspace info after delete snapshots:"</span></span><br><span class="line">puts <span class="string">%x[df -lh /]</span></span><br></pre></td></tr></table></figure><p>将上面脚本保存为snapshots_clear.rb,或从我保存的gist上<a href="https://gist.github.com/welsonla/0e4c4a818abfae0400a4087b54e81c43" target="_blank" rel="noopener">下载</a><br>执行. </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ruby snapshots_clear.rb</span><br></pre></td></tr></table></figure><h5 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h5><p><a href="http://nb.zol.com.cn/671/6715453.html" target="_blank" rel="noopener">Mac瘦身技巧 删除文件后可用空间还变少了？</a><br><a href="https://forums.macrumors.com/threads/solution-reclaim-storage-back-from-system.2073174/" target="_blank" rel="noopener">Solution: Reclaim storage back from “System”</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;这个问题存在了很久，一直也没有找到解决的办法，今天上网查询后发现，这个问题只存在于使用了Time Machine的用户，原因是因为Time Machine的快照自动生成造成的，于是试着按照解决方法查询了下本地快照&lt;/p&gt;
&lt;figure class=&quot;highlight n
      
    
    </summary>
    
    
      <category term="Mac" scheme="http://welsonla.timebot.net/categories/Mac/"/>
    
    
  </entry>
  
  <entry>
    <title>Mac OS 安装 配置Laravel开发环境</title>
    <link href="http://welsonla.timebot.net/2020/01/01/composer-and-laravel-setup/"/>
    <id>http://welsonla.timebot.net/2020/01/01/composer-and-laravel-setup/</id>
    <published>2020-01-01T04:57:25.000Z</published>
    <updated>2020-01-01T05:30:09.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="使用Homebrew安装PHP-7-3"><a href="#使用Homebrew安装PHP-7-3" class="headerlink" title="使用Homebrew安装PHP 7.3"></a>使用Homebrew安装PHP 7.3</h3><p>实用brew的好处就是PHP版本可以不被系统升级而改变，从而保证升级系统不会影响PHP环境<br><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">brew install <span class="symbol">php@</span><span class="number">7.3</span></span><br><span class="line">brew link <span class="symbol">php@</span><span class="number">7.3</span></span><br></pre></td></tr></table></figure></p><h3 id="安装Composer"><a href="#安装Composer" class="headerlink" title="安装Composer"></a>安装Composer</h3><figure class="highlight scilab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">wget https:<span class="comment">//getcomposer.org/installer</span></span><br><span class="line">php -r <span class="string">"copy('</span>https:<span class="comment">//getcomposer.org/installer', 'composer-setup.php');"</span></span><br><span class="line">php -r <span class="string">"if (hash_file('</span>sha384', <span class="string">'composer-setup.php'</span>) === <span class="string">'baf1608c33254d00611ac1705c1d9958c817a1a33bce370c0595974b342601bd80b92a3f46067da89e3b06bff421f182'</span>) &#123; echo <span class="string">'Installer verified'</span>; &#125; <span class="keyword">else</span> &#123; echo <span class="string">'Installer corrupt'</span>; unlink(<span class="string">'composer-setup.php'</span>); &#125; echo PHP_EOL;<span class="string">"</span></span><br><span class="line"><span class="string">php composer-setup.php</span></span><br><span class="line"><span class="string">php -r "</span>unlink(<span class="string">'composer-setup.php'</span>);<span class="string">"</span></span><br></pre></td></tr></table></figure><h3 id="添加到全局"><a href="#添加到全局" class="headerlink" title="添加到全局"></a>添加到全局</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv composer.phar <span class="regexp">/usr/</span>local<span class="regexp">/bin/</span>composer</span><br></pre></td></tr></table></figure><h3 id="设置国内镜像"><a href="#设置国内镜像" class="headerlink" title="设置国内镜像"></a>设置国内镜像</h3><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer <span class="built_in">config</span> -g repo.packagist composer https:<span class="comment">//mirrors.aliyun.com/composer/</span></span><br></pre></td></tr></table></figure><h3 id="安装Composer多线程下载支持"><a href="#安装Composer多线程下载支持" class="headerlink" title="安装Composer多线程下载支持"></a>安装Composer多线程下载支持</h3><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">composer</span> <span class="meta">global</span> <span class="meta">require</span> hirak/prestissimo</span><br></pre></td></tr></table></figure><h3 id="安装laravel"><a href="#安装laravel" class="headerlink" title="安装laravel"></a>安装laravel</h3><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">composer</span> <span class="meta">global</span> <span class="meta">require</span> laravel/installer</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;使用Homebrew安装PHP-7-3&quot;&gt;&lt;a href=&quot;#使用Homebrew安装PHP-7-3&quot; class=&quot;headerlink&quot; title=&quot;使用Homebrew安装PHP 7.3&quot;&gt;&lt;/a&gt;使用Homebrew安装PHP 7.3&lt;/h3&gt;&lt;p&gt;实用
      
    
    </summary>
    
    
      <category term="PHP" scheme="http://welsonla.timebot.net/categories/PHP/"/>
    
    
  </entry>
  
  <entry>
    <title>iTerm2 with powerline theme</title>
    <link href="http://welsonla.timebot.net/2019/06/13/iterm-with-powerline-theme/"/>
    <id>http://welsonla.timebot.net/2019/06/13/iterm-with-powerline-theme/</id>
    <published>2019-06-13T06:01:03.000Z</published>
    <updated>2020-01-01T02:23:42.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="确保已经安装了oh-my-zsh"><a href="#确保已经安装了oh-my-zsh" class="headerlink" title="确保已经安装了oh-my-zsh"></a>确保已经安装了oh-my-zsh</h3><p><a href="https://github.com/robbyrussell/oh-my-zsh" target="_blank" rel="noopener">https://github.com/robbyrussell/oh-my-zsh</a></p><h3 id="安装-oh-my-zsh-powerline-theme"><a href="#安装-oh-my-zsh-powerline-theme" class="headerlink" title="安装 oh-my-zsh-powerline-theme"></a>安装 oh-my-zsh-powerline-theme</h3><p><a href="https://github.com/jeremyFreeAgent/oh-my-zsh-powerline-theme" target="_blank" rel="noopener">https://github.com/jeremyFreeAgent/oh-my-zsh-powerline-theme</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">cd ~/.oh-my-zsh/themes</span><br><span class="line">git clone git@github.com:jeremyFreeAgent/oh-my-zsh-powerline-theme.git</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">更新submodule,进行powerline-fonts安装</span></span><br><span class="line">cd oh-my-zsh-powerline-theme</span><br><span class="line">git submodule init</span><br><span class="line">git submodule update</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">安装</span></span><br><span class="line">./install_in_omz.sh</span><br></pre></td></tr></table></figure><h3 id="更改iterm字体"><a href="#更改iterm字体" class="headerlink" title="更改iterm字体"></a>更改iterm字体</h3><p>iTerm2 – Preferences – Profiles – Text<br>找到Font，点击Change Font，将字体改为<code>Fira mono for powerline</code>, 字号14pt</p><h3 id="修改zsh配置"><a href="#修改zsh配置" class="headerlink" title="修改zsh配置"></a>修改zsh配置</h3><p>打开<code>~/.zshrc</code>文件，修改<code>ZSH_THEME&quot;</code>为<code>powerline</code></p><p>添加如下配置<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">POWERLINE_RIGHT_B=""  </span><br><span class="line">POWERLINE_RIGHT_A="date"  </span><br><span class="line">POWERLINE_RIGHT_A_COLOR_FRONT="black"  </span><br><span class="line">POWERLINE_RIGHT_A_COLOR_BACK="red"  </span><br><span class="line">POWERLINE_HIDE_HOST_NAME="true"</span><br><span class="line">POWERLINE_PATH="short"</span><br><span class="line">POWERLINE_SHORT_HOST_NAME="true"</span><br><span class="line">POWERLINE_DETECT_SSH="true"</span><br><span class="line">POWERLINE_GIT_CLEAN="✔"</span><br><span class="line">POWERLINE_GIT_DIRTY="✘"</span><br><span class="line">POWERLINE_GIT_ADDED="%F&#123;green&#125;✚%F&#123;black&#125;"</span><br><span class="line">POWERLINE_GIT_MODIFIED="%F&#123;blue&#125;✹%F&#123;black&#125;"</span><br><span class="line">POWERLINE_GIT_DELETED="%F&#123;red&#125;✖%F&#123;black&#125;"</span><br><span class="line">POWERLINE_GIT_UNTRACKED="%F&#123;yellow&#125;✭%F&#123;black&#125;"</span><br><span class="line">POWERLINE_GIT_RENAMED="➜"</span><br><span class="line">POWERLINE_GIT_UNMERGED="═"</span><br></pre></td></tr></table></figure></p><h3 id="最终效果"><a href="#最终效果" class="headerlink" title="最终效果"></a>最终效果</h3><p><img src="/uploads/powerline.png" alt="/uploads/powerline.png"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;确保已经安装了oh-my-zsh&quot;&gt;&lt;a href=&quot;#确保已经安装了oh-my-zsh&quot; class=&quot;headerlink&quot; title=&quot;确保已经安装了oh-my-zsh&quot;&gt;&lt;/a&gt;确保已经安装了oh-my-zsh&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https
      
    
    </summary>
    
    
      <category term="工具控" scheme="http://welsonla.timebot.net/categories/%E5%B7%A5%E5%85%B7%E6%8E%A7/"/>
    
    
  </entry>
  
  <entry>
    <title>将 ReactNative 的默认终端改为 iTerm2</title>
    <link href="http://welsonla.timebot.net/2018/05/30/let-react-native-shell-open-in-iterm/"/>
    <id>http://welsonla.timebot.net/2018/05/30/let-react-native-shell-open-in-iterm/</id>
    <published>2018-05-30T02:43:17.000Z</published>
    <updated>2020-01-01T02:23:42.000Z</updated>
    
    <content type="html"><![CDATA[<p>自己平时使用iTerm2作为主力的终端，ReactNative的默认打开终端是系统自带的Terminal，这样就会经常存在同时开启两个终端软件的情况，搜索了一下，解决方式很简单</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">open</span> node_modules/react-<span class="keyword">native</span>/scripts</span><br></pre></td></tr></table></figure><p> 选中<code>launchPackager.command</code>,右键切换它的默认打开工具</p><p> <img src="/uploads/react-native-open-shell.png" alt></p><h5 id="致谢"><a href="#致谢" class="headerlink" title="致谢"></a>致谢</h5><p> <a href="https://stackoverflow.com/questions/37814803/how-to-get-react-native-run-ios-to-open-in-iterm-instead-of-terminal-on-a-macos" target="_blank" rel="noopener">https://stackoverflow.com/questions/37814803/how-to-get-react-native-run-ios-to-open-in-iterm-instead-of-terminal-on-a-macos</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;自己平时使用iTerm2作为主力的终端，ReactNative的默认打开终端是系统自带的Terminal，这样就会经常存在同时开启两个终端软件的情况，搜索了一下，解决方式很简单&lt;/p&gt;
&lt;figure class=&quot;highlight kotlin&quot;&gt;&lt;table&gt;&lt;tr&gt;
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Xcode BuildNumber 自动更新</title>
    <link href="http://welsonla.timebot.net/2017/08/10/Xcode-buildid-autoincrement/"/>
    <id>http://welsonla.timebot.net/2017/08/10/Xcode-buildid-autoincrement/</id>
    <published>2017-08-10T08:16:29.000Z</published>
    <updated>2020-01-01T02:23:42.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近为了区分发包的id，从晚上找了一段代码<br>原理就是，先用PlistBuddy获取当前的buildid，之后+1，然后再更新plist文件<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">buildNumber=$(/usr/libexec/PlistBuddy -c <span class="string">"Print CFBundleVersion"</span> <span class="string">"$&#123;PROJECT_DIR&#125;/$&#123;INFOPLIST_FILE&#125;"</span>)</span><br><span class="line">buildNumber=$(($buildNumber + <span class="number">1</span>))</span><br><span class="line">/usr/libexec/PlistBuddy -c <span class="string">"Set :CFBundleVersion $buildNumber"</span> <span class="string">"$&#123;PROJECT_DIR&#125;/$&#123;INFOPLIST_FILE&#125;"</span></span><br></pre></td></tr></table></figure></p><p>From: <a href="https://gist.github.com/sekati/3172554" target="_blank" rel="noopener">https://gist.github.com/sekati/3172554</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最近为了区分发包的id，从晚上找了一段代码&lt;br&gt;原理就是，先用PlistBuddy获取当前的buildid，之后+1，然后再更新plist文件&lt;br&gt;&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;
      
    
    </summary>
    
    
      <category term="iOS" scheme="http://welsonla.timebot.net/categories/iOS/"/>
    
    
  </entry>
  
  <entry>
    <title>heroku command</title>
    <link href="http://welsonla.timebot.net/2017/07/13/heroku-command/"/>
    <id>http://welsonla.timebot.net/2017/07/13/heroku-command/</id>
    <published>2017-07-13T06:55:36.000Z</published>
    <updated>2020-01-01T02:23:42.000Z</updated>
    
    <content type="html"><![CDATA[<p>记录一些经常使用到的一些heroku管理命令</p><h1 id="login"><a href="#login" class="headerlink" title="login"></a>login</h1><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">heroku login</span></span><br></pre></td></tr></table></figure><h1 id="show-apps-info"><a href="#show-apps-info" class="headerlink" title="show apps info"></a>show apps info</h1><p>展示你app的一些信息<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">heroku</span> apps:<span class="literal">info</span></span><br></pre></td></tr></table></figure></p><h1 id="deploy"><a href="#deploy" class="headerlink" title="deploy"></a>deploy</h1><p>推送代码并部署<br><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">git</span> <span class="keyword">push </span>heroku  master</span><br></pre></td></tr></table></figure></p><h1 id="ssh"><a href="#ssh" class="headerlink" title="ssh"></a>ssh</h1><p>远程到你app目录项目，可以操作远程的一些文件，相当于ssh登录<br><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">heroku <span class="keyword">run</span><span class="bash"> bash</span></span><br></pre></td></tr></table></figure></p><h1 id="log"><a href="#log" class="headerlink" title="log"></a>log</h1><p>查看实时输出的log<br><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">heroku logs -t</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;记录一些经常使用到的一些heroku管理命令&lt;/p&gt;
&lt;h1 id=&quot;login&quot;&gt;&lt;a href=&quot;#login&quot; class=&quot;headerlink&quot; title=&quot;login&quot;&gt;&lt;/a&gt;login&lt;/h1&gt;&lt;figure class=&quot;highlight ebnf&quot;&gt;
      
    
    </summary>
    
    
      <category term="工具控" scheme="http://welsonla.timebot.net/categories/%E5%B7%A5%E5%85%B7%E6%8E%A7/"/>
    
    
  </entry>
  
  <entry>
    <title>使用Fastlane</title>
    <link href="http://welsonla.timebot.net/2017/07/13/using-fastlane/"/>
    <id>http://welsonla.timebot.net/2017/07/13/using-fastlane/</id>
    <published>2017-07-13T05:59:36.000Z</published>
    <updated>2020-01-01T02:23:42.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="相关介绍"><a href="#相关介绍" class="headerlink" title="相关介绍"></a>相关介绍</h2><p>Fastlane最初由KrauseFx(<a href="https://github.com/KrauseFx" target="_blank" rel="noopener">Github</a>, <a href="https://twitter.com/krausefx" target="_blank" rel="noopener">Twitter</a>) 发起，现在已经有百位代码和插件贡献者，丰富的Action与Plugin可以满足众多个性化的需求，目前官方主要的工具如下(来自fastlane项目Github页面), 但不仅限于此。</p><p><img src="/uploads/WX20170525-112539.png" alt></p><h2 id="相关文档"><a href="#相关文档" class="headerlink" title="相关文档"></a>相关文档</h2><p><a href="https://github.com/fastlane/fastlane" target="_blank" rel="noopener">Github主页</a><br><a href="https://rubygems.org/gems/fastlane" target="_blank" rel="noopener">Gem主页</a><br><a href="https://docs.fastlane.tools/" target="_blank" rel="noopener">官方文档</a></p><h2 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h2><p>Fastlane是用ruby写的一套程序，最简单的方式是使用gem的方式来安装<br><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gem <span class="keyword">install</span> fastlane</span><br></pre></td></tr></table></figure></p><h2 id="初始化你的项目"><a href="#初始化你的项目" class="headerlink" title="初始化你的项目"></a>初始化你的项目</h2><p>创建Gemfile主要是为了让其他人安装的Gem保持统一，Cocoapods之后也可以用Gemfile来做统一的管理<br><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">bundle</span> <span class="string">init</span></span><br><span class="line"><span class="attr">echo</span> <span class="string">'gem "fastlane"' &gt;&gt; Gemfile</span></span><br><span class="line"><span class="attr">bundle</span> <span class="string">install</span></span><br></pre></td></tr></table></figure></p><h2 id="init"><a href="#init" class="headerlink" title="init"></a>init</h2><p>init期间会让你输入AppleID，如果该应用存在，Fastlane会通过iTunesConnect拉取应用的metadata和所有的App截图，如果不存在，会提示你是否在iTunesConnect中创建一个新的App<br><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">fastlane init</span></span><br></pre></td></tr></table></figure></p><p>安装完之后，会在项目中产生一个fastlane目录，使用<code>tree</code>命令查看结构如下<br><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">├── Appfile</span><br><span class="line">├── Deliverfile</span><br><span class="line">├── Fastfile</span><br><span class="line">├── <span class="module-access"><span class="module"><span class="identifier">README</span>.</span></span>md</span><br><span class="line">├── metadata</span><br><span class="line">│   ├── some metadata file ...</span><br><span class="line">├── report.xml</span><br><span class="line">└── screenshots</span><br><span class="line">    └── <span class="module-access"><span class="module"><span class="identifier">README</span>.</span></span>txt</span><br></pre></td></tr></table></figure></p><p><strong>Appfile</strong> 记录了你appid，apple id，team id等信息<br><strong>Deliverfile</strong> 记录了bundle与appleid信息<br><strong>Fastfile</strong> 是我们打包使用到的主要文件，这里面可以自定义你的流程<br><strong>metadata</strong> 是通过iTunesConnect获取到的app的信息文件，包括介绍<br><strong>screenshots</strong> 保存了所有的截图信息</p><h2 id="一个简单的Fastfile流程"><a href="#一个简单的Fastfile流程" class="headerlink" title="一个简单的Fastfile流程"></a>一个简单的Fastfile流程</h2><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">lane :beta do</span><br><span class="line">  git_pull</span><br><span class="line">  increment_build_number <span class="meta">#build number更新</span></span><br><span class="line">cocoapods <span class="meta">#安装cocoapods </span></span><br><span class="line">     gym(</span><br><span class="line"><span class="symbol">       scheme:</span> <span class="string">"MyScheme"</span>,          <span class="meta">#主Target</span></span><br><span class="line"><span class="symbol">       output_directory:</span><span class="string">"./build"</span>,  <span class="meta">#导出目录</span></span><br><span class="line"><span class="symbol">       export_method:</span> <span class="string">"development"</span> <span class="meta">#导出方式</span></span><br><span class="line">    )</span><br><span class="line">  sh <span class="string">"./customScript.sh"</span> <span class="meta">#执行你的脚本文件或Shell命令</span></span><br><span class="line">end</span><br></pre></td></tr></table></figure><p>更多关于gym的配置参数，可以参见 <a href="https://docs.fastlane.tools/actions/#gym" target="_blank" rel="noopener">Actions - fastlane docs</a></p><p><strong>每个Action下面都有Example和Parameters，默认是收起状态</strong> </p><p><img src="/uploads/WX20170605-134929.png" alt></p><p> 通过执行<code>fastlane beta</code> 就可以进行打包，并且<code>dYSM</code>和<code>ipa</code>文件会导出到我们指定的项目下的<code>build</code>目录下面<br><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">fastlane beta</span></span><br></pre></td></tr></table></figure></p><h3 id="fastlane文件结构"><a href="#fastlane文件结构" class="headerlink" title="fastlane文件结构"></a>fastlane文件结构</h3><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">fastlane_version <span class="string">"2.44.1"</span></span><br><span class="line"></span><br><span class="line">default_platform <span class="symbol">:ios</span></span><br><span class="line"></span><br><span class="line">platform <span class="symbol">:ios</span> <span class="keyword">do</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#1. 开始前的一些操作，如代码更新(git_pull)</span></span><br><span class="line">  before_all <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">#2. 打包一个测试版本</span></span><br><span class="line">  desc <span class="string">"build a beta version"</span></span><br><span class="line">  lane <span class="symbol">:beta</span> <span class="keyword">do</span></span><br><span class="line"></span><br><span class="line">    gym(</span><br><span class="line">      <span class="symbol">export_method:</span> <span class="string">"ad-hoc"</span>,</span><br><span class="line">      <span class="symbol">output_directory:</span> <span class="string">"./build"</span>,</span><br><span class="line">    ) </span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#3. 打包一个线上版本，并上传</span></span><br><span class="line">  lane <span class="symbol">:release</span> <span class="keyword">do</span></span><br><span class="line">    gym(</span><br><span class="line">     <span class="symbol">export_method:</span> <span class="string">"app-store"</span></span><br><span class="line">    )</span><br><span class="line">    deliver(<span class="symbol">force:</span> <span class="literal">true</span>)</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#4.打包结束操作</span></span><br><span class="line">  after_all <span class="keyword">do</span> <span class="params">|lane|</span></span><br><span class="line">  <span class="comment">#打开导出目录</span></span><br><span class="line">sh <span class="string">"open ./build"</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#5. 捕获错误</span></span><br><span class="line">  error <span class="keyword">do</span> <span class="params">|lane, exception|</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h2 id="一些常用命令"><a href="#一些常用命令" class="headerlink" title="一些常用命令"></a>一些常用命令</h2><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 列出现有的所有action</span></span><br><span class="line"><span class="attr">fastlane</span> <span class="string">actions</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出所有lane任务</span></span><br><span class="line"><span class="attr">fastlane</span> <span class="string">list</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建一个新的Action</span></span><br><span class="line"><span class="attr">fastlane</span> <span class="string">new_action</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 打印环境变量，Fastfile中可以`ENV['PWD']`使用这些变量</span></span><br><span class="line"><span class="attr">fastlane</span> <span class="string">env</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示本机Provision文件</span></span><br><span class="line"><span class="attr">security</span> <span class="string">find-identity -v -p codesigning</span></span><br></pre></td></tr></table></figure><h2 id="常见问题可以参见或官方issues"><a href="#常见问题可以参见或官方issues" class="headerlink" title="常见问题可以参见或官方issues"></a>常见问题可以参见或官方issues</h2><p><a href="https://docs.fastlane.tools/codesigning/troubleshooting/" target="_blank" rel="noopener">https://docs.fastlane.tools/codesigning/troubleshooting/</a><br><a href="https://github.com/fastlane/fastlane/issues" target="_blank" rel="noopener">Issues · fastlane/fastlane · GitHub</a></p><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><p><a href="https://github.com/fastlane/fastlane" target="_blank" rel="noopener">Fastlane</a><br><a href="https://rubygems.org/gems/fastlane" target="_blank" rel="noopener">Fastlane对应的Gem主页</a><br><a href="https://docs.fastlane.tools/" target="_blank" rel="noopener">Fastlane官方文档</a><br><a href="http://www.jianshu.com/p/1aebb0854c78" target="_blank" rel="noopener">Fastlane实战（一）：移动开发自动化之道</a><br><a href="http://www.jianshu.com/p/0520192c9bd7" target="_blank" rel="noopener">Fastlane实战（二）：Action和Plugin机制</a><br><a href="http://www.jianshu.com/p/faae6f95cbd8" target="_blank" rel="noopener">Fastlane实战（五）：高级用法</a><br><a href="https://docs.fastlane.tools/actions/#building" target="_blank" rel="noopener">fastlane actions</a><br><a href="https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Advanced.md" target="_blank" rel="noopener">Advanced fastlane</a>  </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;相关介绍&quot;&gt;&lt;a href=&quot;#相关介绍&quot; class=&quot;headerlink&quot; title=&quot;相关介绍&quot;&gt;&lt;/a&gt;相关介绍&lt;/h2&gt;&lt;p&gt;Fastlane最初由KrauseFx(&lt;a href=&quot;https://github.com/KrauseFx&quot; targ
      
    
    </summary>
    
    
      <category term="自动化" scheme="http://welsonla.timebot.net/categories/%E8%87%AA%E5%8A%A8%E5%8C%96/"/>
    
    
  </entry>
  
  <entry>
    <title>配置多个SSH Keygen</title>
    <link href="http://welsonla.timebot.net/2016/12/08/multiple-ssh-key-config/"/>
    <id>http://welsonla.timebot.net/2016/12/08/multiple-ssh-key-config/</id>
    <published>2016-12-08T02:16:06.000Z</published>
    <updated>2020-01-01T02:23:42.000Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">"YourMail@github.com"</span> -f ~<span class="regexp">/.ssh/github</span>_rsa</span><br></pre></td></tr></table></figure><h2 id="添加到私钥列表"><a href="#添加到私钥列表" class="headerlink" title="添加到私钥列表"></a>添加到私钥列表</h2><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh-add ~<span class="regexp">/.ssh/id</span>_rsa</span><br><span class="line">ssh-add ~<span class="regexp">/.ssh/github</span>_rsa</span><br></pre></td></tr></table></figure><h2 id="查看私钥列表"><a href="#查看私钥列表" class="headerlink" title="查看私钥列表"></a>查看私钥列表</h2><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 可以通过 ssh-add -l 来确私钥列表</span></span><br><span class="line">ssh-add -l</span><br><span class="line"></span><br><span class="line"><span class="comment"># 可以通过 ssh-add -D 来清空私钥列表</span></span><br><span class="line">ssh-add -D</span><br></pre></td></tr></table></figure><h2 id="添加配置"><a href="#添加配置" class="headerlink" title="添加配置"></a>添加配置</h2><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd ~<span class="regexp">/.ssh</span></span><br><span class="line"><span class="regexp">touch config</span></span><br></pre></td></tr></table></figure><h2 id="添加配置内容"><a href="#添加配置内容" class="headerlink" title="添加配置内容"></a>添加配置内容</h2><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Host github.com</span><br><span class="line">    HostName github.com</span><br><span class="line">    PreferredAuthentications publickey <span class="comment">#认证类型为私钥</span></span><br><span class="line">    IdentityFile ~<span class="regexp">/.ssh/github</span>_rsa</span><br></pre></td></tr></table></figure><h2 id="添加github-rsa-pub内容到github的SSH-KEY列表"><a href="#添加github-rsa-pub内容到github的SSH-KEY列表" class="headerlink" title="添加github_rsa.pub内容到github的SSH KEY列表"></a>添加github_rsa.pub内容到github的SSH KEY列表</h2><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat ~<span class="regexp">/.ssh/github</span>_rsa.pub</span><br></pre></td></tr></table></figure><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">⇒  ssh -T git@github.com</span><br><span class="line"></span><br><span class="line"><span class="comment"># 会提示， 说明已经配置成功</span></span><br><span class="line">Hi welsonla! You<span class="string">'ve successfully authenticated, but GitHub does not provide shell access.</span></span><br></pre></td></tr></table></figure><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><p><a href="https://my.oschina.net/stefanzhlg/blog/529403" target="_blank" rel="noopener">https://my.oschina.net/stefanzhlg/blog/529403</a><br><a href="http://riny.net/2014/git-ssh-key/" target="_blank" rel="noopener">http://riny.net/2014/git-ssh-key/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span clas
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>iOS Tips</title>
    <link href="http://welsonla.timebot.net/2016/03/23/iOS-Tips/"/>
    <id>http://welsonla.timebot.net/2016/03/23/iOS-Tips/</id>
    <published>2016-03-23T01:33:47.000Z</published>
    <updated>2020-01-01T05:30:28.000Z</updated>
    
    <content type="html"><![CDATA[<p>Code Snippets</p><h5 id="去除空白TableViewCell的分割线"><a href="#去除空白TableViewCell的分割线" class="headerlink" title="去除空白TableViewCell的分割线"></a>去除空白TableViewCell的分割线</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">listTable.tableFooterView = [UIView <span class="keyword">new</span>];</span><br></pre></td></tr></table></figure><h5 id="让header与cell一起滚动，不在顶部悬停"><a href="#让header与cell一起滚动，不在顶部悬停" class="headerlink" title="让header与cell一起滚动，不在顶部悬停"></a>让header与cell一起滚动，不在顶部悬停</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">设置为UITableViewStyleGrouped</span><br></pre></td></tr></table></figure><a id="more"></a><h5 id="在拼音打字的时候，不让textField响应Change"><a href="#在拼音打字的时候，不让textField响应Change" class="headerlink" title="在拼音打字的时候，不让textField响应Change"></a>在拼音打字的时候，不让textField响应Change</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//MARK: textfield notification</span></span><br><span class="line">- (<span class="keyword">void</span>)textFieldDidChange:(NSNotification *)notification&#123;</span><br><span class="line">   UITextRange *selectedRange = [self.searchField markedTextRange];</span><br><span class="line">   NSString * newText = [self.textField textInRange:selectedRange];</span><br><span class="line"></span><br><span class="line">   <span class="comment">//获取高亮部分,拼音状态不进行搜索</span></span><br><span class="line">   <span class="keyword">if</span>(newText.length&gt;<span class="number">0</span>)&#123;</span><br><span class="line">       <span class="keyword">return</span>;</span><br><span class="line">   &#125;</span><br><span class="line">……</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="将数组中的Model的某个字段合并成String"><a href="#将数组中的Model的某个字段合并成String" class="headerlink" title="将数组中的Model的某个字段合并成String"></a>将数组中的Model的某个字段合并成String</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#假设listArray中是User实体，有一个Name字段</span><br><span class="line">[[listArray valueForKey:@“Name”] componentsJoinedByString:@<span class="string">"\n"</span>]</span><br></pre></td></tr></table></figure><h5 id="设置NavigationBarItem的Title，可以让其与Tabbar的Title区分开"><a href="#设置NavigationBarItem的Title，可以让其与Tabbar的Title区分开" class="headerlink" title="设置NavigationBarItem的Title，可以让其与Tabbar的Title区分开"></a>设置NavigationBarItem的Title，可以让其与Tabbar的Title区分开</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">self.navigationItem.title = @“Home”;</span><br></pre></td></tr></table></figure><h5 id="通过设置Cell的Custom-Insets来替代自定义View的分割线"><a href="#通过设置Cell的Custom-Insets来替代自定义View的分割线" class="headerlink" title="通过设置Cell的Custom Insets来替代自定义View的分割线"></a>通过设置Cell的Custom Insets来替代自定义View的分割线</h5><p><img src="/uploads/cell-insets.png" alt></p><h3 id="Xcode"><a href="#Xcode" class="headerlink" title="Xcode"></a>Xcode</h3><ol><li>按住Shift可以一次选择多个AutoLayout约束</li><li>按住Ctrl,再点按Alt可以Toggle设置是否添加Margin</li><li>Ctrl+Command+↑切换h与m文件（Objective-C使用）</li><li>给类改名，并修改相关引用地方的类名<br><img src="/uploads/xcode-rename.png" alt></li></ol><p><img src="/uploads/xcode-rename-relation.png" alt></p><h4 id="屏蔽Xcode8自带log"><a href="#屏蔽Xcode8自带log" class="headerlink" title="屏蔽Xcode8自带log"></a>屏蔽Xcode8自带log</h4><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[<span class="symbol">http:</span>/<span class="regexp">/stackoverflow.com/questions</span><span class="regexp">/37800790/hide</span>-strange-unwanted-xcode-<span class="number">8</span>-logs](<span class="symbol">http:</span>/<span class="regexp">/stackoverflow.com/questions</span><span class="regexp">/37800790/hide</span>-strange-unwanted-xcode-<span class="number">8</span>-logs)</span><br><span class="line"><span class="number">1</span>- From Xcode menu <span class="symbol">open:</span> Product &gt; Scheme &gt; Edit Scheme</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>- On your Environment Variables set OS_ACTIVITY_MODE = disable</span><br></pre></td></tr></table></figure><h3 id="Xcode8-注释快捷键"><a href="#Xcode8-注释快捷键" class="headerlink" title="Xcode8 注释快捷键"></a>Xcode8 注释快捷键</h3><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Option+Command+<span class="regexp">/</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Code Snippets&lt;/p&gt;
&lt;h5 id=&quot;去除空白TableViewCell的分割线&quot;&gt;&lt;a href=&quot;#去除空白TableViewCell的分割线&quot; class=&quot;headerlink&quot; title=&quot;去除空白TableViewCell的分割线&quot;&gt;&lt;/a&gt;去除空白TableViewCell的分割线&lt;/h5&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;listTable.tableFooterView = [UIView &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&quot;让header与cell一起滚动，不在顶部悬停&quot;&gt;&lt;a href=&quot;#让header与cell一起滚动，不在顶部悬停&quot; class=&quot;headerlink&quot; title=&quot;让header与cell一起滚动，不在顶部悬停&quot;&gt;&lt;/a&gt;让header与cell一起滚动，不在顶部悬停&lt;/h5&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;设置为UITableViewStyleGrouped&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="iOS" scheme="http://welsonla.timebot.net/categories/iOS/"/>
    
    
  </entry>
  
  <entry>
    <title>Mac Tips</title>
    <link href="http://welsonla.timebot.net/2016/03/23/Mac-Tips/"/>
    <id>http://welsonla.timebot.net/2016/03/23/Mac-Tips/</id>
    <published>2016-03-23T01:32:12.000Z</published>
    <updated>2020-01-01T05:30:37.000Z</updated>
    
    <content type="html"><![CDATA[<p>一些常用的命令备忘</p><h4 id="显示隐藏文件"><a href="#显示隐藏文件" class="headerlink" title="显示隐藏文件"></a>显示隐藏文件</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">defaults write com.apple.finder AppleShowAllFiles -bool <span class="literal">true</span>;killall Finder</span><br></pre></td></tr></table></figure><h4 id="不显示隐藏文件"><a href="#不显示隐藏文件" class="headerlink" title="不显示隐藏文件"></a>不显示隐藏文件</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">defaults write com.apple.finder AppleShowAllFiles -bool <span class="literal">false</span>;killall Finder</span><br></pre></td></tr></table></figure><h4 id="10-11后开启第三方硬盘的Trim"><a href="#10-11后开启第三方硬盘的Trim" class="headerlink" title="10.11后开启第三方硬盘的Trim"></a>10.11后开启第三方硬盘的Trim</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo trimforce enable</span><br></pre></td></tr></table></figure><h4 id="释放不活跃的内存"><a href="#释放不活跃的内存" class="headerlink" title="释放不活跃的内存"></a>释放不活跃的内存</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo purge</span><br></pre></td></tr></table></figure><h4 id="允许任何来源的软件进行安装"><a href="#允许任何来源的软件进行安装" class="headerlink" title="允许任何来源的软件进行安装"></a>允许任何来源的软件进行安装</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo spctl --master-disable</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;一些常用的命令备忘&lt;/p&gt;
&lt;h4 id=&quot;显示隐藏文件&quot;&gt;&lt;a href=&quot;#显示隐藏文件&quot; class=&quot;headerlink&quot; title=&quot;显示隐藏文件&quot;&gt;&lt;/a&gt;显示隐藏文件&lt;/h4&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;
      
    
    </summary>
    
    
      <category term="iOS" scheme="http://welsonla.timebot.net/categories/iOS/"/>
    
    
  </entry>
  
  <entry>
    <title>2016年2月29日</title>
    <link href="http://welsonla.timebot.net/2016/02/29/the-day-of-2-29/"/>
    <id>http://welsonla.timebot.net/2016/02/29/the-day-of-2-29/</id>
    <published>2016-02-29T14:04:06.000Z</published>
    <updated>2020-01-01T02:23:42.000Z</updated>
    
    <content type="html"><![CDATA[<p>仅为今天，特意发博一篇</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;仅为今天，特意发博一篇&lt;/p&gt;

      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>从Objective-c迁移到Swift的一些坑</title>
    <link href="http://welsonla.timebot.net/2016/01/27/Objective-c-to-Swift/"/>
    <id>http://welsonla.timebot.net/2016/01/27/Objective-c-to-Swift/</id>
    <published>2016-01-27T07:08:49.000Z</published>
    <updated>2020-01-01T02:23:42.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="NSString-to-String"><a href="#NSString-to-String" class="headerlink" title="NSString to String"></a>NSString to String</h3><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#<span class="type">ObjC</span></span><br><span class="line"><span class="type">NSString</span> *notice</span><br><span class="line"></span><br><span class="line">#<span class="type">Swift</span></span><br><span class="line"><span class="keyword">var</span> notice:<span class="type">String?</span></span><br></pre></td></tr></table></figure><h3 id="NSArray-NSMutableArray-to-Array"><a href="#NSArray-NSMutableArray-to-Array" class="headerlink" title="NSArray,NSMutableArray to Array"></a>NSArray,NSMutableArray to Array</h3><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">#<span class="number">1</span>. 声明</span><br><span class="line">#<span class="type">ObjC</span></span><br><span class="line"><span class="type">NSMutableArray</span> *listArray = [<span class="type">NSMutableArray</span> array];</span><br><span class="line"></span><br><span class="line">#<span class="type">Swift</span></span><br><span class="line"><span class="keyword">var</span> listArray:[<span class="type">String</span>] = <span class="type">Array</span>() <span class="comment">//必须带参数类型</span></span><br><span class="line"><span class="keyword">var</span> listArray:[<span class="type">AnyObject</span>] = <span class="type">Array</span>()</span><br><span class="line"></span><br><span class="line">#<span class="number">2</span>. 增加元素</span><br><span class="line">#<span class="type">ObjC</span></span><br><span class="line">[listArray addObject:@<span class="string">"foo"</span>];</span><br><span class="line"></span><br><span class="line">#<span class="type">Swift</span></span><br><span class="line">listArray.append(<span class="string">"foo"</span>)</span><br></pre></td></tr></table></figure><h3 id="NSRange-gt-Range"><a href="#NSRange-gt-Range" class="headerlink" title="NSRange-&gt;Range"></a>NSRange-&gt;Range</h3><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#<span class="type">ObjC</span></span><br><span class="line"><span class="type">NSRange</span> range = <span class="type">NSMakeRange</span>(<span class="number">0</span>,<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">#<span class="type">Swift</span></span><br><span class="line"><span class="type">Range</span>(start: <span class="number">0</span>, end: <span class="number">10</span>)</span><br></pre></td></tr></table></figure><h1 id="NSDictionary-NSmutableDictionary-to-Dictionary"><a href="#NSDictionary-NSmutableDictionary-to-Dictionary" class="headerlink" title="NSDictionary,NSmutableDictionary  to Dictionary"></a>NSDictionary,NSmutableDictionary  to Dictionary</h1><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">#<span class="type">ObjC</span></span><br><span class="line"><span class="type">NSMutableDictionary</span> *score = [<span class="type">NSMutableDictionary</span> dictionary];</span><br><span class="line"></span><br><span class="line">#<span class="type">Swift</span></span><br><span class="line"><span class="keyword">var</span> score0:[<span class="type">String</span>:<span class="type">String</span>]?</span><br><span class="line"><span class="keyword">var</span> score1 = [<span class="type">String</span>:<span class="type">String</span>]()</span><br><span class="line"><span class="keyword">var</span> score2 = <span class="type">Dictionary</span>&lt;<span class="type">String</span>,<span class="type">String</span>&gt;()</span><br><span class="line"><span class="keyword">var</span> score3 = [:]</span><br><span class="line"></span><br><span class="line">#<span class="type">ObjC</span></span><br><span class="line"><span class="type">NSDictionary</span> *person = @&#123;@<span class="string">"name"</span>:@<span class="string">"Single Dog"</span>,@<span class="string">"Skill"</span>:@<span class="string">"Swift"</span>&#125;;</span><br><span class="line">person[@“age”] = @“<span class="number">28</span>”;</span><br><span class="line"></span><br><span class="line">#<span class="type">Swift</span></span><br><span class="line"><span class="keyword">var</span> person = [<span class="string">"name"</span>:<span class="string">"Single Dog"</span>,<span class="string">"Skill"</span>:<span class="string">"Swift"</span>]</span><br><span class="line">person[<span class="string">"age"</span>] = <span class="string">"28"</span></span><br></pre></td></tr></table></figure><h3 id="Random"><a href="#Random" class="headerlink" title="Random"></a>Random</h3><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#<span class="type">ObjC</span></span><br><span class="line">arc4random%<span class="number">255</span></span><br><span class="line"></span><br><span class="line">#<span class="type">Swift</span></span><br><span class="line">arc4random_uniform(<span class="number">255</span>)</span><br><span class="line">random() % <span class="number">255</span></span><br></pre></td></tr></table></figure><h3 id="Selector"><a href="#Selector" class="headerlink" title="Selector"></a>Selector</h3><p>感觉Selector的方式不如ObjC那样有方法提示，容易写错，效率反而不如之前<br><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#<span class="type">ObjC</span></span><br><span class="line"><span class="type">SEL</span> callback = @selector(uploadCallback:)</span><br><span class="line"></span><br><span class="line">#<span class="type">Swift</span></span><br><span class="line"><span class="type">Selector</span>(<span class="string">"uploadCallback:"</span>)</span><br></pre></td></tr></table></figure></p><h3 id="id-to-AnyObject"><a href="#id-to-AnyObject" class="headerlink" title="id to AnyObject"></a>id to AnyObject</h3><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">#<span class="type">ObjC</span></span><br><span class="line">id sender</span><br><span class="line"></span><br><span class="line">#<span class="type">Swift</span></span><br><span class="line"><span class="keyword">var</span> sender:<span class="type">Anyobject?</span></span><br><span class="line">```  </span><br><span class="line">### 三元运算缩写</span><br><span class="line">```swift</span><br><span class="line">#<span class="type">ObjC</span></span><br><span class="line">a ? : b</span><br><span class="line"></span><br><span class="line">#<span class="type">Swift</span></span><br><span class="line">a ?? b</span><br></pre></td></tr></table></figure><h3 id="枚举"><a href="#枚举" class="headerlink" title="枚举"></a>枚举</h3><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#<span class="type">ObjC</span></span><br><span class="line">typedef <span class="type">NS_ENUM</span>(<span class="type">NSInteger</span>,<span class="type">LocationState</span>)&#123;</span><br><span class="line">    <span class="type">LocationStateStart</span>,</span><br><span class="line">    <span class="type">LocationStateFinish</span>,</span><br><span class="line">    <span class="type">LocationStateFail</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">#<span class="type">Swift</span></span><br><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">LocationState</span> </span>&#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="type">LocationStart</span>, <span class="type">LocationFinish</span>, <span class="type">LocationFail</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Todo-List"><a href="#Todo-List" class="headerlink" title="Todo List"></a>Todo List</h1><ol><li>Block to Closure</li><li>DateFormatter</li><li>nil value check<br>……</li></ol><p>遇到继续添加,未完待续……</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;NSString-to-String&quot;&gt;&lt;a href=&quot;#NSString-to-String&quot; class=&quot;headerlink&quot; title=&quot;NSString to String&quot;&gt;&lt;/a&gt;NSString to String&lt;/h3&gt;&lt;figure c
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Blog迁移到了Hexo</title>
    <link href="http://welsonla.timebot.net/2015/10/10/start-using-hexo/"/>
    <id>http://welsonla.timebot.net/2015/10/10/start-using-hexo/</id>
    <published>2015-10-10T02:58:17.000Z</published>
    <updated>2020-01-01T02:23:42.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Octopress的痛点"><a href="#Octopress的痛点" class="headerlink" title="Octopress的痛点"></a>Octopress的痛点</h2><p>受不了<code>_deploy</code>文件夹的折磨，以及AutoGenerate Disable这错误导致生成问题，rake deploy靠运气成功,今天将blog迁移到了hexo</p><h2 id="Hexo优点"><a href="#Hexo优点" class="headerlink" title="Hexo优点"></a>Hexo优点</h2><ol><li><p>更简洁的语法</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">hexo new <span class="string">"title"</span></span><br><span class="line">hexo new page</span><br><span class="line">hexo g <span class="comment">#生成</span></span><br><span class="line">hexo d <span class="comment">#部署</span></span><br><span class="line">hexo s <span class="comment">#运行</span></span><br></pre></td></tr></table></figure></li><li><p>更快的生成速度</p></li><li><p>直观的部署结果</p></li></ol><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><ol><li><p>安装Node  </p><p> 参考node官方 <a href="https://nodejs.org" target="_blank" rel="noopener">https://nodejs.org</a></p></li></ol><ol start="2"><li><p>安装hexo以及用到的东西  </p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure></li><li><p>创建Blog  </p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">hexo init blog</span><br><span class="line">cd blog</span><br><span class="line">npm install</span><br><span class="line"></span><br><span class="line"><span class="comment">#安装Server</span></span><br><span class="line">npm install hexo-server --save</span><br></pre></td></tr></table></figure></li></ol><h2 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h2><p>创建文章<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo new <span class="string">"first blog"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#创建独立页面</span></span><br><span class="line">hexo new page <span class="string">"about"</span></span><br></pre></td></tr></table></figure></p><p>预备部署<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#添加github部署支持</span></span><br><span class="line">npm install hexo-deployer-git --save</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## 修改_config.yml  </span></span><br><span class="line"><span class="symbol">deploy:</span></span><br><span class="line">  <span class="symbol">type:</span> git <span class="comment">#不要再使用github作为type</span></span><br><span class="line">  <span class="symbol">repo:</span> git@github.<span class="symbol">com:</span>&lt;yourname&gt;<span class="regexp">/&lt;yourname&gt;.github.io.git</span></span><br><span class="line"><span class="regexp">  branch: master</span></span><br></pre></td></tr></table></figure></p><h2 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h2><h3 id="安装主题，推荐Next-有详细的安装文档"><a href="#安装主题，推荐Next-有详细的安装文档" class="headerlink" title="安装主题，推荐Next, 有详细的安装文档"></a>安装主题，推荐Next, 有详细的安装文档</h3><h5 id="安装参考"><a href="#安装参考" class="headerlink" title="安装参考"></a>安装参考</h5><p><a href="http://theme-next.iissnan.com/five-minutes-setup.html" target="_blank" rel="noopener">http://theme-next.iissnan.com/five-minutes-setup.html</a></p><h5 id="详细的配置"><a href="#详细的配置" class="headerlink" title="详细的配置"></a>详细的配置</h5><p><a href="https://github.com/iissnan/hexo-theme-next/wiki/主题配置参考" target="_blank" rel="noopener">https://github.com/iissnan/hexo-theme-next/wiki/主题配置参考</a></p><h3 id="添加RSS"><a href="#添加RSS" class="headerlink" title="添加RSS"></a>添加RSS</h3><p><a href="https://github.com/hexojs/hexo-generator-feed" target="_blank" rel="noopener"></a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure><h3 id="上传图片"><a href="#上传图片" class="headerlink" title="上传图片"></a>上传图片</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">放到./source/uploads文件夹下，代码中使用</span><br><span class="line">![](<span class="regexp">/uploads/</span>xxx.png)</span><br></pre></td></tr></table></figure><h3 id="修改生成文件的格式"><a href="#修改生成文件的格式" class="headerlink" title="修改生成文件的格式"></a>修改生成文件的格式</h3><p>修改为Year-Month-Day-title样式，方便查找<br>打开<code>_config.yml</code><br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">new_post_name: :year-:month-:day-:title.md</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Octopress的痛点&quot;&gt;&lt;a href=&quot;#Octopress的痛点&quot; class=&quot;headerlink&quot; title=&quot;Octopress的痛点&quot;&gt;&lt;/a&gt;Octopress的痛点&lt;/h2&gt;&lt;p&gt;受不了&lt;code&gt;_deploy&lt;/code&gt;文件夹的折磨，
      
    
    </summary>
    
    
      <category term="something" scheme="http://welsonla.timebot.net/categories/something/"/>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://welsonla.timebot.net/2015/10/10/hello-world/"/>
    <id>http://welsonla.timebot.net/2015/10/10/hello-world/</id>
    <published>2015-10-10T02:30:17.000Z</published>
    <updated>2020-01-01T02:23:42.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="http://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="http://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="http://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="http://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="http://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="http://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="http://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;http://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;http://hexo.io
      
    
    </summary>
    
    
      <category term="something" scheme="http://welsonla.timebot.net/categories/something/"/>
    
    
  </entry>
  
  <entry>
    <title>为什么使用Mantle</title>
    <link href="http://welsonla.timebot.net/2015/10/08/why-mantle/"/>
    <id>http://welsonla.timebot.net/2015/10/08/why-mantle/</id>
    <published>2015-10-08T08:06:07.000Z</published>
    <updated>2020-01-01T02:23:42.000Z</updated>
    
    <content type="html"><![CDATA[<p>项目地址: <a href="https://github.com/Mantle/Mantle" target="_blank" rel="noopener">https://github.com/Mantle/Mantle</a></p><p>今年上半年在两个项目中都将Model层替换为Mantle，大大减少了开发中实体转换的时间;选择mantle的初衷是因为看到了大神的blog,里面的应用场景也是在开发中我们经常遇到的情况:<br><a href="http://www.iwangke.me/2014/10/13/Why-Changba-iOS-choose-Mantle/" target="_blank" rel="noopener">iWangKe.me - 为什么唱吧iOS 6.0选择了Mantle</a></p><h2 id="对比一下"><a href="#对比一下" class="headerlink" title="对比一下"></a>对比一下</h2><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"># http://bubbler.labs.douban.com/j/user/wheats</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">"homepage"</span>: <span class="string">"http://www.douban.com/people/wheats"</span>,</span><br><span class="line">  <span class="attr">"icon"</span>: <span class="string">"http://img3.douban.com/icon/u46721592-5.jpg"</span>,</span><br><span class="line">  <span class="attr">"userid"</span>: <span class="string">"46721592"</span>,</span><br><span class="line">  <span class="attr">"r"</span>: <span class="number">0</span>,</span><br><span class="line">  <span class="attr">"stats"</span>: &#123;</span><br><span class="line">    <span class="attr">"board"</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="attr">"bub"</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="attr">"collect"</span>: <span class="number">0</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"title"</span>: <span class="string">"welsonla"</span>,</span><br><span class="line">  <span class="attr">"uid"</span>: <span class="string">"wheats"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><p><img src="http://ww1.sinaimg.cn/large/6e8de9dbjw1ewtvrr4eyjj20gp0eqjvh.jpg" alt></p><p><img src="http://ww1.sinaimg.cn/large/6e8de9dbjw1ewtvsjo0s6j20go0f7whk.jpg" alt></p><h2 id="You-should-know"><a href="#You-should-know" class="headerlink" title="You should know:"></a>You should know:</h2><ul><li>使用Mantle需要继承MTLModel</li><li>如果需要将实体中的某个字段映射成一个实体或者实体的数组，需要继承MTLJSONSerializing</li><li>Mantle需要一个字典来讲字典中的字段与实体的字段进行匹配</li></ul><h2 id="将JSON转换为制定的Model"><a href="#将JSON转换为制定的Model" class="headerlink" title="将JSON转换为制定的Model"></a>将JSON转换为制定的Model</h2><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MDoubanUser *allModel = [MTLJSONAdapter <span class="symbol">modelOfClass:</span>[MDoubanUser <span class="class"><span class="keyword">class</span>] <span class="title">fromJSONDictionary</span>:<span class="title">rstlDict</span>] <span class="title">error</span>:<span class="title">nil</span>]</span></span><br></pre></td></tr></table></figure><h2 id="将JSON中的数组转换为Model的数组"><a href="#将JSON中的数组转换为Model的数组" class="headerlink" title="将JSON中的数组转换为Model的数组"></a>将JSON中的数组转换为Model的数组</h2><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NSArray *users = [MTLJSONAdapter <span class="symbol">modelsOfClass:</span>[MDoubanUser <span class="class"><span class="keyword">class</span>] <span class="title">fromJSONArray</span>:<span class="title">userArray</span> <span class="title">error</span>:<span class="title">nil</span>];</span></span><br></pre></td></tr></table></figure><h2 id="将某个字段对应到某个实体"><a href="#将某个字段对应到某个实体" class="headerlink" title="将某个字段对应到某个实体"></a>将某个字段对应到某个实体</h2><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">+(NSValueTransformer *)<span class="symbol">JSONTransformerForKey:</span>(NSString *)key&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> ([key <span class="symbol">isEqualToString:</span>@<span class="string">"stats"</span>]) &#123;</span><br><span class="line">      <span class="comment">#假设上诉到json中的stats创建了一个单独的实体类为MStats,</span></span><br><span class="line">      <span class="keyword">return</span> [MTLJSONAdapter <span class="symbol">dictionaryTransformerWithModelClass:</span>[MStats <span class="class"><span class="keyword">class</span>]];</span></span><br><span class="line">  &#125;<span class="keyword">else</span> <span class="keyword">if</span>([key <span class="symbol">isEqualToString:</span>@<span class="string">"books"</span>])&#123;</span><br><span class="line">      <span class="comment">#假设中json中有一个books数组，并有对应的实体MBook</span></span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">return</span> [MTLJSONAdapter <span class="symbol">arrayTransformerWithModelClass:</span>[MBook <span class="class"><span class="keyword">class</span>]];</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">nil</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="自定义转换"><a href="#自定义转换" class="headerlink" title="自定义转换"></a>自定义转换</h2><p>自定义转换只要定义一个字段名+JSONTransformer结尾的方法，就会执行我们自定义的转换,比如时间格式化，对某些字符进行一些操作处理</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将uid前面加上"Author"</span></span><br><span class="line">+ (NSValueTransformer *)uidJSONTransformer&#123;</span><br><span class="line">    <span class="keyword">return</span> [MTLValueTransformer <span class="symbol">transformerUsingForwardBlock:</span>^id(NSString *uid, BOOL *success, NSError *__autoreleasing *error) &#123;</span><br><span class="line">        <span class="keyword">return</span> [@<span class="string">"Author: "</span> <span class="symbol">stringByAppendingString:</span>uid];</span><br><span class="line">    &#125;];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="多个字段对应"><a href="#多个字段对应" class="headerlink" title="多个字段对应"></a>多个字段对应</h2><p>在项目中，经常遇到，接口A返回的用户id字段说uid,接口B返回的用户字段是ID，这种情况我们只需要中Model中将两个字段存到一个数组绑定到同一个属性上就可以了</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">+ (NSDictionary *)JSONKeyPathsByPropertyKey</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> @&#123;</span><br><span class="line">@<span class="string">"uid"</span><span class="symbol">:</span>@[@<span class="string">"uid"</span>,@<span class="string">"ID"</span>],</span><br><span class="line">@<span class="string">"userid"</span><span class="symbol">:</span>@<span class="string">"userid"</span>,</span><br><span class="line">@<span class="string">"stats"</span><span class="symbol">:</span>@<span class="string">"stats"</span>,</span><br><span class="line">@<span class="string">"title"</span><span class="symbol">:</span>@<span class="string">"title"</span>,</span><br><span class="line">@<span class="string">"r"</span><span class="symbol">:</span>@<span class="string">"r"</span>,</span><br><span class="line">@<span class="string">"homepage"</span><span class="symbol">:</span>@<span class="string">"homepage"</span>,</span><br><span class="line">@<span class="string">"icon"</span><span class="symbol">:</span>@<span class="string">"icon"</span></span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="将实体中的值封装成一个dictionary，方便接口传输"><a href="#将实体中的值封装成一个dictionary，方便接口传输" class="headerlink" title="将实体中的值封装成一个dictionary，方便接口传输"></a>将实体中的值封装成一个dictionary，方便接口传输</h2><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#使用全部的字段</span></span><br><span class="line">NSDictionary *params = [user dictionaryValue];</span><br><span class="line"></span><br><span class="line"><span class="comment">#使用部分的字段</span></span><br><span class="line">NSDictionary *params = [address <span class="symbol">dictionaryWithValuesForKeys:</span>@[@<span class="string">"uid"</span>,@<span class="string">"stats"</span>,@<span class="string">"homepage"</span>]];</span><br></pre></td></tr></table></figure><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>在项目的开发过程中，我抽时间做了一个小工具，可以方便的将JSON转换为Mantle支持的Model类，希望对你们有帮助</p><p>Source: <a href="https://github.com/TimeBots/ModelBot" target="_blank" rel="noopener">https://github.com/TimeBots/ModelBot</a><br>Download: <a href="https://github.com/TimeBots/ModelBot/releases/download/0.3.0/ModelBot.0.3.0.zip" target="_blank" rel="noopener">ModelBot Download</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;项目地址: &lt;a href=&quot;https://github.com/Mantle/Mantle&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/Mantle/Mantle&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;今年上半年在两个项目中都将Model层替换为Mantle，大大减少了开发中实体转换的时间;选择mantle的初衷是因为看到了大神的blog,里面的应用场景也是在开发中我们经常遇到的情况:&lt;br&gt;&lt;a href=&quot;http://www.iwangke.me/2014/10/13/Why-Changba-iOS-choose-Mantle/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;iWangKe.me - 为什么唱吧iOS 6.0选择了Mantle&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;对比一下&quot;&gt;&lt;a href=&quot;#对比一下&quot; class=&quot;headerlink&quot; title=&quot;对比一下&quot;&gt;&lt;/a&gt;对比一下&lt;/h2&gt;&lt;figure class=&quot;highlight json&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# http://bubbler.labs.douban.com/j/user/wheats&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;&quot;homepage&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;http://www.douban.com/people/wheats&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;&quot;icon&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;http://img3.douban.com/icon/u46721592-5.jpg&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;&quot;userid&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;46721592&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;&quot;r&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;&quot;stats&quot;&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;board&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;bub&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;collect&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;&quot;title&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;welsonla&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;&quot;uid&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;wheats&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="iOS" scheme="http://welsonla.timebot.net/categories/iOS/"/>
    
    
  </entry>
  
  <entry>
    <title>Application Transport Security</title>
    <link href="http://welsonla.timebot.net/2015/07/13/application-transport-security-in-ios9/"/>
    <id>http://welsonla.timebot.net/2015/07/13/application-transport-security-in-ios9/</id>
    <published>2015-07-13T01:09:45.000Z</published>
    <updated>2020-01-01T02:23:42.000Z</updated>
    
    <content type="html"><![CDATA[<p>In Xcode7 You should add follow keys in <code>Info.plist</code> to allow the http request<br>A detail discuss could fond here<br><a href="https://forums.developer.apple.com/thread/3544" target="_blank" rel="noopener">https://forums.developer.apple.com/thread/3544</a></p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;key&gt;NSAppTransportSecurity&lt;<span class="regexp">/key&gt;  </span></span><br><span class="line"><span class="regexp">     &lt;dict&gt;  </span></span><br><span class="line"><span class="regexp">          &lt;key&gt;NSAllowsArbitraryLoads&lt;/key</span>&gt;&lt;<span class="literal">true</span>/&gt;  </span><br><span class="line">     &lt;<span class="regexp">/dict&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;In Xcode7 You should add follow keys in &lt;code&gt;Info.plist&lt;/code&gt; to allow the http request&lt;br&gt;A detail discuss could fond here&lt;br&gt;&lt;a href=
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>关于Xcode单元测试(XCTest)的一些总结</title>
    <link href="http://welsonla.timebot.net/2015/05/04/something-about-xctest/"/>
    <id>http://welsonla.timebot.net/2015/05/04/something-about-xctest/</id>
    <published>2015-05-04T02:58:17.000Z</published>
    <updated>2020-01-01T02:23:42.000Z</updated>
    
    <content type="html"><![CDATA[<p>单元测试可以让我们快速检测项目接口与一些功能的可用性，这次编写了大量的单元测试，让我对之前的一些疑惑有了一个透彻的理解</p><ul><li>单元测试中，可以直接import我们项目中的类</li><li>想要执行的方法，必须使用test开头，testLogin会被执行，userLogin这样的方法名不会被执行</li><li>单元测试没有头文件，一些变量声明，写在interface里面</li><li>对于一些变量的初始化，放到setup里面进行</li></ul><a id="more"></a><h2 id="一个简单的单元测试类"><a href="#一个简单的单元测试类" class="headerlink" title="一个简单的单元测试类"></a>一个简单的单元测试类</h2><h5 id="创建单元测试类"><a href="#创建单元测试类" class="headerlink" title="创建单元测试类"></a>创建单元测试类</h5><p><img src="http://ww1.sinaimg.cn/large/6e8de9dbgw1ers0n47wtrj20ka0bygnf.jpg" alt></p><h4 id="一个简单的类"><a href="#一个简单的类" class="headerlink" title="一个简单的类"></a>一个简单的类</h4><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#import &lt;UIKit/UIKit.h&gt;</span></span><br><span class="line"><span class="comment">#import &lt;XCTest/XCTest.h&gt;</span></span><br><span class="line"><span class="comment">#import "LoginService.h" //引入自定义的类</span></span><br><span class="line"></span><br><span class="line">@interface HelloTest : XCTestCase</span><br><span class="line">&#123;</span><br><span class="line">/<span class="regexp">/变量声明</span></span><br><span class="line"><span class="regexp">    NSInteger count;</span></span><br><span class="line"><span class="regexp">    LoginService *loginService;</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">@end</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">@implementation HelloTest</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">- (void)setUp &#123;</span></span><br><span class="line"><span class="regexp">    [super setUp];</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">    /</span><span class="regexp">/初始化</span></span><br><span class="line"><span class="regexp">    count = 5;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">    loginService = [[LoginService alloc] init];</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">- (void)tearDown &#123;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">    [super tearDown];</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">- (void)testCount</span></span><br><span class="line"><span class="regexp">&#123;</span></span><br><span class="line"><span class="regexp">    XCTAssertEqual(count, 6,@"count不等于6,count的值为:%ld",(long)count);</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">- (void)testExample &#123;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">    XCTAssert(YES, @"Pass");</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">- (void)testPerformanceExample &#123;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">    [self measureBlock:^&#123;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">    &#125;];</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">@end</span></span><br></pre></td></tr></table></figure><p><strong>cmd+U</strong> 进行执行后会提示我们如下错误,测试通过的方法，会有绿色对号，失败的方法会显示我们写的错误提示<br><img src="http://ww1.sinaimg.cn/large/6e8de9dbgw1ers0vuinl5j20p405jq49.jpg" alt></p><h2 id="XCTest的测试方法大都类似"><a href="#XCTest的测试方法大都类似" class="headerlink" title="XCTest的测试方法大都类似"></a>XCTest的测试方法大都类似</h2><h4 id="XCTAssertGreaterThan"><a href="#XCTAssertGreaterThan" class="headerlink" title="XCTAssertGreaterThan"></a>XCTAssertGreaterThan</h4><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#判断count是否大于8</span></span><br><span class="line">XCTAssertGreaterThan(count, <span class="number">8</span>,@<span class="string">"count is not greater than 8"</span>);</span><br></pre></td></tr></table></figure><h4 id="XCTAssertNotEqual"><a href="#XCTAssertNotEqual" class="headerlink" title="XCTAssertNotEqual"></a>XCTAssertNotEqual</h4><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#判断是否不相等</span></span><br><span class="line">XCTAssertNotEqual(count, <span class="number">5</span>,@<span class="string">"they are equal"</span>);</span><br></pre></td></tr></table></figure><h4 id="XCTAssertTrue"><a href="#XCTAssertTrue" class="headerlink" title="XCTAssertTrue"></a>XCTAssertTrue</h4><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#判断某个表达式是否成立</span></span><br><span class="line">XCTAssertTrue(count&gt;<span class="number">3</span>,@<span class="string">"count greater than 3"</span>);</span><br></pre></td></tr></table></figure><p>运行结果<br><img src="http://ww4.sinaimg.cn/large/6e8de9dbgw1ers16kf52bj210v04jn03.jpg" alt></p><h2 id="对于异步方法的测试-Asynchronous-Testing"><a href="#对于异步方法的测试-Asynchronous-Testing" class="headerlink" title="对于异步方法的测试(Asynchronous Testing)"></a>对于异步方法的测试(Asynchronous Testing)</h2><p>对于block等异步方式执行的方法，在测试的时候，我们要使用，一般的做法都是延迟，<strong>等待block执行完毕再进行检查</strong></p><h5 id="主要步骤"><a href="#主要步骤" class="headerlink" title="主要步骤"></a>主要步骤</h5><ul><li>声明一个XCTestExpectation</li><li>在block中使用fulfill抛出错误</li><li>waitForExpectationsWithTimeout进行一个延迟时间设定</li></ul><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#import &lt;XCTest/XCTestCase+AsynchronousTesting.h&gt;</span></span><br></pre></td></tr></table></figure><p>比如上面的loginService</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">- (void)testLogin</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">##声明一个Exception</span></span><br><span class="line">    XCTestExpectation *loginException = [<span class="keyword">self</span> <span class="symbol">expectationWithDescription:</span>@<span class="string">"loginError"</span>];</span><br><span class="line"></span><br><span class="line">    [loginService <span class="symbol">sendLoginWithMobile:</span>TEST_MOBILE <span class="symbol">andCode:</span>TEST_CODE <span class="symbol">onComplete:</span>^(NSDictionary *jsonDict, NSString *jsonString) &#123;</span><br><span class="line">        MStatus *status = [loginService <span class="symbol">convertToMStatus:</span>jsonDict];</span><br><span class="line">        XCTAssertEqual(status.returncode, <span class="number">0</span>, @<span class="string">"login error"</span>);</span><br><span class="line"></span><br><span class="line">        /<span class="regexp">/抛出错误</span></span><br><span class="line"><span class="regexp">        [loginException fulfill];</span></span><br><span class="line"><span class="regexp">    &#125; onFailure:^(NSString *msg) &#123;</span></span><br><span class="line"><span class="regexp">        XCTFail(@"login error:%@",msg);</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/抛出错误</span></span><br><span class="line"><span class="regexp">        [loginException fulfill];</span></span><br><span class="line"><span class="regexp">    &#125;];</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">    /</span><span class="regexp">/延迟两秒执行</span></span><br><span class="line"><span class="regexp">    [self waitForExpectationsWithTimeout:2 handler:^(NSError *error) &#123;</span></span><br><span class="line"><span class="regexp">        XCTFail(@"time out:%@",error);</span></span><br><span class="line"><span class="regexp">    &#125;];</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;单元测试可以让我们快速检测项目接口与一些功能的可用性，这次编写了大量的单元测试，让我对之前的一些疑惑有了一个透彻的理解&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;单元测试中，可以直接import我们项目中的类&lt;/li&gt;
&lt;li&gt;想要执行的方法，必须使用test开头，testLogin会被执行，userLogin这样的方法名不会被执行&lt;/li&gt;
&lt;li&gt;单元测试没有头文件，一些变量声明，写在interface里面&lt;/li&gt;
&lt;li&gt;对于一些变量的初始化，放到setup里面进行&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="iOS" scheme="http://welsonla.timebot.net/categories/iOS/"/>
    
    
  </entry>
  
  <entry>
    <title>Rails code snippets</title>
    <link href="http://welsonla.timebot.net/2015/04/12/rails-code-snippets/"/>
    <id>http://welsonla.timebot.net/2015/04/12/rails-code-snippets/</id>
    <published>2015-04-12T04:55:48.000Z</published>
    <updated>2020-01-01T02:23:42.000Z</updated>
    
    <content type="html"><![CDATA[<p>(摘录来自: persie. “Ruby on Rails 教程”)</p><h3 id="short-key"><a href="#short-key" class="headerlink" title="short key"></a>short key</h3><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">g   generate</span><br><span class="line">d   destory</span><br><span class="line">s   server</span><br></pre></td></tr></table></figure><h3 id="脚手架以及一些常用的变量类型"><a href="#脚手架以及一些常用的变量类型" class="headerlink" title="脚手架以及一些常用的变量类型"></a>脚手架以及一些常用的变量类型</h3><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rails g scaffold user <span class="symbol">name:</span>string <span class="symbol">age:</span>int <span class="symbol">email:</span>string <span class="symbol">description:</span>text <span class="symbol">cash:</span>float</span><br></pre></td></tr></table></figure><h3 id="删除脚手架生成的代码"><a href="#删除脚手架生成的代码" class="headerlink" title="删除脚手架生成的代码"></a>删除脚手架生成的代码</h3><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rails d scaffold Users</span><br></pre></td></tr></table></figure><h3 id="生成Controller与action"><a href="#生成Controller与action" class="headerlink" title="生成Controller与action"></a>生成Controller与action</h3><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rails g controller TodoList list delete index</span><br></pre></td></tr></table></figure><h3 id="删除Controller"><a href="#删除Controller" class="headerlink" title="删除Controller"></a>删除Controller</h3><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rails d controller TodoList list delete index</span><br></pre></td></tr></table></figure><h3 id="生成Model"><a href="#生成Model" class="headerlink" title="生成Model"></a>生成Model</h3><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rails g model User <span class="symbol">name:</span>string <span class="symbol">email:</span>string</span><br></pre></td></tr></table></figure><h3 id="删除Model"><a href="#删除Model" class="headerlink" title="删除Model"></a>删除Model</h3><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rails d model User <span class="symbol">name:</span>string <span class="symbol">email:</span>string</span><br></pre></td></tr></table></figure><h3 id="添加字段到表"><a href="#添加字段到表" class="headerlink" title="添加字段到表"></a>添加字段到表</h3><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">“rails generate migration add_password_digest_to_users <span class="symbol">password_digest:</span>string”</span><br></pre></td></tr></table></figure><h3 id="根据Model生成数据库表"><a href="#根据Model生成数据库表" class="headerlink" title="根据Model生成数据库表"></a>根据Model生成数据库表</h3><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rake <span class="symbol">db:</span>migrate</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;(摘录来自: persie. “Ruby on Rails 教程”)&lt;/p&gt;
&lt;h3 id=&quot;short-key&quot;&gt;&lt;a href=&quot;#short-key&quot; class=&quot;headerlink&quot; title=&quot;short key&quot;&gt;&lt;/a&gt;short key&lt;/h3&gt;&lt;fi
      
    
    </summary>
    
    
      <category term="ruby" scheme="http://welsonla.timebot.net/categories/ruby/"/>
    
    
  </entry>
  
</feed>
