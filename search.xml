<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>一个码农的Mac配置</title>
    <url>/2013/04/10/build-your-mac-os/</url>
    <content><![CDATA[<h4 id="我常用的一些Mac工具"><a href="#我常用的一些Mac工具" class="headerlink" title="我常用的一些Mac工具"></a>我常用的一些Mac工具</h4><ul>
<li><a href="http://www.iterm2.com/">iTerm2</a> 一个增强的命令终端</li>
<li><a href="http://www.sourcetreeapp.com/">SourceTree</a> git代码控制工具</li>
<li><a href="https://www.wunderlist.com/">WunderList</a> 一个出色的Todo工具，提供云同步，我把它当做我的任务列表</li>
<li><a href="https://github.com/textmate/textmate/tags">TextMate2</a> 号称”The Missing Editor for Mac OS X”</li>
<li><a href="http://www.sublimetext.com/2">SublimeText2</a> 另一个特别出色的Editor</li>
<li><a href="http://www.alfredapp.com/">Alfred</a> Option+Space,唤出，提高你打开软件的效率，购买Powerpack还可以使用很多强大的拓展</li>
<li><a href="http://www.i-funbox.com/">iFunBox</a> 管理你的苹果设备的文件，可以不通过iTunes直接把文件放到程序的Documents下面</li>
<li><a href="https://jianguoyun.com/">坚果云</a> 国内一个特别出色的网盘，可以右键添加要同步的文件</li>
<li><a href="http://evernote.com/">Evernote</a> 这个大家都懂的</li>
<li><a href="http://www.trankynam.com/xtrafinder/">XtraFinder</a> 为你的Finder增加Tab，剪切等功能</li>
<li><a href="http://shortcatapp.com/">shortcat</a>键盘快捷键，写啥点啥,怒赞</li>
<li><a href="http://chameleon.alessandroboschini.com/">Chameleon</a> 打开第三方SSD的trim</li>
<li><a href="https://apps.apple.com/cn/app/agenda/id1287445660?mt=12">Agenda</a></li>
<li><a href="https://www.mowglii.com/itsycal/">itsycal</a> 不错的菜单栏日历</li>
<li><a href="https://www.sublimemerge.com/">Sublime Merge</a> Sublime Text出品的Git客户端</li>
<li><a href="https://netbeans.org/community/releases/81/index.html">Netbeans 8</a> 使用PlantUML插件用它来画UML</li>
<li><a href="https://apps.apple.com/cn/app/ithoughtsx-mindmap/id720669838?mt=12">iThoughtsX(Paid)</a> Mindmap工具</li>
<li><a href="https://apps.apple.com/cn/app/forklift-file-manager-and-ftp-sftp-webdav-amazon-s3-client/id412448059?mt=12">ForkLift2</a> 目前AppStore版本免费，强大功能齐全的FTP工具</li>
</ul>
<h4 id="shortcat快捷键"><a href="#shortcat快捷键" class="headerlink" title="shortcat快捷键"></a>shortcat快捷键</h4><pre class="line-numbers language-ruby"><code class="language-ruby">cmd<span class="token operator">+</span>shift<span class="token operator">+</span>space唤醒
输入关键词后，如果匹配了多个，使用control<span class="token operator">+</span>字母去点击相应的匹配
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h4 id="安装HomeBrew"><a href="#安装HomeBrew" class="headerlink" title="安装HomeBrew"></a>安装HomeBrew</h4><p>Homebrew是一个管理Mac拓展的工具，他可以很方便的安装你所需要的软件，以及软件的一些依赖包</p>
<p>比如安装mysql，你只需要</p>
<pre class="line-numbers language-ruby"><code class="language-ruby">brew install mysql
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>Homebrew 安装特别简单，只需要键入</p>
<pre class="line-numbers language-ruby"><code class="language-ruby">ruby <span class="token operator">-</span>e <span class="token string">"$(curl -fsSL https://raw.github.com/mxcl/homebrew/go)"</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>相关的文档可以到官方去查看<a href="http://mxcl.github.io/homebrew/">http://mxcl.github.io/homebrew/</a></p>
<h4 id="安装oh-my-Zsh"><a href="#安装oh-my-Zsh" class="headerlink" title="安装oh-my-Zsh"></a>安装oh-my-Zsh</h4><p>Zsh是Mac上面的一个命令行增强工具，他提供了关键字高亮，命令补全，以及一些命令的拓展，</p>
<p>安装步骤</p>
<pre class="line-numbers language-ruby"><code class="language-ruby">curl <span class="token operator">-</span><span class="token constant">L</span> https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>github<span class="token punctuation">.</span>com<span class="token operator">/</span>robbyrussell<span class="token operator">/</span>oh<span class="token operator">-</span>my<span class="token operator">-</span>zsh<span class="token operator">/</span>raw<span class="token operator">/</span>master<span class="token operator">/</span>tools<span class="token operator">/</span>install<span class="token punctuation">.</span>sh <span class="token operator">|</span> sh

<span class="token comment" spellcheck="true">#备份你的.zshrc文件</span>
cp <span class="token operator">~</span><span class="token regex">/.zshrc ~/</span><span class="token punctuation">.</span>zshrc<span class="token punctuation">.</span>orig

<span class="token comment" spellcheck="true">#创建zsh配置</span>
cp <span class="token operator">~</span><span class="token operator">/</span><span class="token punctuation">.</span>oh<span class="token operator">-</span>my<span class="token operator">-</span>zsh<span class="token operator">/</span>templates<span class="token regex">/zshrc.zsh-template ~/</span><span class="token punctuation">.</span>zshrc

<span class="token comment" spellcheck="true">#设置zsh为你的默认shell</span>
chsh <span class="token operator">-</span>s <span class="token operator">/</span>bin<span class="token operator">/</span>zsh

<span class="token comment" spellcheck="true">#重启终端就会生效</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>这里还有一些主题<a href="https://github.com/robbyrussell/oh-my-zsh/wiki/themes">https://github.com/robbyrussell/oh-my-zsh/wiki/themes</a></p>
<p>如果你要修改zsh的默认主题</p>
<pre class="line-numbers language-ruby"><code class="language-ruby">vi <span class="token operator">~</span><span class="token operator">/</span><span class="token punctuation">.</span>zshrc

修改<span class="token constant">ZSH_THEME</span>为你喜欢的主题名即可
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>如果不想继续使用，可以使用以下命令卸载</p>
<pre class="line-numbers language-ruby"><code class="language-ruby">uninstall_oh_my_zsh
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
]]></content>
      <categories>
        <category>life</category>
      </categories>
  </entry>
  <entry>
    <title>生成 github SSH keys</title>
    <url>/2013/04/10/generate-github-ssh-keys/</url>
    <content><![CDATA[<p>本文主要来自github官方，Generating SSH Keys</p>
<pre class="line-numbers language-ruby"><code class="language-ruby">
cd <span class="token operator">~</span><span class="token operator">/</span><span class="token punctuation">.</span>ssh

ssh<span class="token operator">-</span>keygen <span class="token operator">-</span>t rsa <span class="token operator">-</span><span class="token constant">C</span> <span class="token string">"your_email@example.com"</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>下面的步骤可以只敲回车进行确认即可</p>
<pre class="line-numbers language-ruby"><code class="language-ruby"><span class="token constant">Creates</span> a <span class="token keyword">new</span> <span class="token class-name">ssh</span> key using the provided email

<span class="token constant">Generating</span> public<span class="token operator">/</span>private rsa key pair<span class="token punctuation">.</span>

<span class="token comment" spellcheck="true">#这里直接回车就会生成一个默认名为id_rsa</span>
<span class="token constant">Enter</span> file <span class="token keyword">in</span> which to save the <span class="token function">key</span> <span class="token punctuation">(</span><span class="token operator">/</span><span class="token constant">Users</span><span class="token regex">/you/</span><span class="token punctuation">.</span>ssh<span class="token operator">/</span>id_rsa<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token constant">Press</span> enter<span class="token punctuation">]</span>


<span class="token comment" spellcheck="true">#这里需要你输入一个你加密的key（一定要记住）</span>
<span class="token constant">Enter</span> <span class="token function">passphrase</span> <span class="token punctuation">(</span>empty <span class="token keyword">for</span> no passphrase<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token constant">Type</span> a passphrase<span class="token punctuation">]</span>
<span class="token constant">Enter</span> same passphrase again<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token constant">Type</span> passphrase again<span class="token punctuation">]</span>


<span class="token constant">Your</span> identification has been saved <span class="token keyword">in</span> <span class="token operator">/</span><span class="token constant">Users</span><span class="token regex">/welsonla/</span><span class="token punctuation">.</span>ssh<span class="token operator">/</span>id_rsa<span class="token punctuation">.</span>
<span class="token constant">Your</span> public key has been saved <span class="token keyword">in</span> <span class="token operator">/</span><span class="token constant">Users</span><span class="token regex">/welsonla/</span><span class="token punctuation">.</span>ssh<span class="token operator">/</span>id_rsa<span class="token punctuation">.</span>pub<span class="token punctuation">.</span>
<span class="token constant">The</span> key fingerprint is<span class="token punctuation">:</span>
<span class="token number">30</span><span class="token symbol">:e8</span><span class="token symbol">:aa</span><span class="token punctuation">:</span><span class="token number">08</span><span class="token symbol">:ee</span><span class="token symbol">:bc</span><span class="token punctuation">:</span><span class="token number">76</span><span class="token punctuation">:</span><span class="token number">88</span><span class="token punctuation">:</span>2c<span class="token punctuation">:</span>3f<span class="token punctuation">:</span><span class="token number">83</span><span class="token punctuation">:</span><span class="token number">39</span><span class="token symbol">:b0</span><span class="token punctuation">:</span>6e<span class="token punctuation">:</span><span class="token number">95</span><span class="token symbol">:cc</span> wyc<span class="token punctuation">.</span>jar<span class="token variable">@gmail</span><span class="token punctuation">.</span>com
<span class="token constant">The</span> key's randomart image is<span class="token punctuation">:</span>
<span class="token operator">+</span><span class="token operator">--</span><span class="token punctuation">[</span> <span class="token constant">RSA</span> <span class="token number">2048</span><span class="token punctuation">]</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">+</span>
<span class="token operator">|</span>                 <span class="token operator">|</span>
<span class="token operator">|</span>     <span class="token punctuation">.</span>           <span class="token operator">|</span>
<span class="token operator">|</span>    <span class="token punctuation">.</span> o          <span class="token operator">|</span>
<span class="token operator">|</span>   <span class="token punctuation">.</span>   o         <span class="token operator">|</span>
<span class="token operator">|</span>  o o   <span class="token constant">S</span>        <span class="token operator">|</span>
<span class="token operator">|</span><span class="token punctuation">.</span>  <span class="token constant">E</span>             <span class="token operator">|</span>
<span class="token operator">|</span><span class="token operator">=</span><span class="token operator">++</span>              <span class="token operator">|</span>
<span class="token operator">|</span><span class="token operator">%</span><span class="token operator">*</span>o<span class="token punctuation">.</span>             <span class="token operator">|</span>
<span class="token operator">|</span><span class="token constant">OO</span><span class="token operator">+</span>o             <span class="token operator">|</span>
<span class="token operator">+</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span><span class="token operator">+</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>看到这个界面说明生成成功</p>
<p>copy加密字符到剪切板</p>
<pre><code>pbcopy &lt; ~/.ssh/id_rsa.pub
</code></pre>
<p>打开你的github</p>
<pre><code>1. 点击 Account Settings
2. 点击左侧 &quot;SSH Keys&quot; 
3. 点击 &quot;Add SSH key&quot;
4. 粘贴你的可以到 &quot;Key&quot; 输入框
5. 点击 &quot;Add key&quot;
6. 输入你的github密码确认
</code></pre>
]]></content>
      <categories>
        <category>技术随笔</category>
      </categories>
  </entry>
  <entry>
    <title>Cocoapods 使用</title>
    <url>/2013/04/10/use-cocoapods/</url>
    <content><![CDATA[<pre class="line-numbers language-ruby"><code class="language-ruby">gem install cocoapods
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>cd到你的项目的根目录，就是跟project文件同级,建立Podfile文件</p>
<pre class="line-numbers language-ruby"><code class="language-ruby">touch <span class="token constant">Podfile</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>加入平台版本，（5.1可以省略，但是最好在podfile中加入，因为一些ARC相关的类库不加的话，会提示错误）</p>
<pre class="line-numbers language-ruby"><code class="language-ruby">platform <span class="token symbol">:ios</span><span class="token punctuation">,</span><span class="token string">'9.0'</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>搜索第三方的oc库</p>
<pre class="line-numbers language-ruby"><code class="language-ruby">pod search fmdb

<span class="token operator">-</span><span class="token operator">></span> <span class="token function">FMDB</span> <span class="token punctuation">(</span><span class="token number">2.0</span><span class="token punctuation">)</span>
   <span class="token constant">A</span> <span class="token constant">Cocoa</span> <span class="token operator">/</span> <span class="token constant">Objective</span><span class="token operator">-</span><span class="token constant">C</span> wrapper around <span class="token constant">SQLite</span><span class="token punctuation">.</span>
   <span class="token operator">-</span> <span class="token constant">Homepage</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>github<span class="token punctuation">.</span>com<span class="token operator">/</span>ccgus<span class="token operator">/</span>fmdb
   <span class="token operator">-</span> <span class="token constant">Source</span><span class="token punctuation">:</span>   https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>github<span class="token punctuation">.</span>com<span class="token operator">/</span>ccgus<span class="token operator">/</span>fmdb<span class="token punctuation">.</span>git
   <span class="token operator">-</span> <span class="token constant">Versions</span><span class="token punctuation">:</span> <span class="token number">2.0</span><span class="token punctuation">,</span> <span class="token number">1.5</span><span class="token punctuation">.</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1.5</span> <span class="token punctuation">[</span>master repo<span class="token punctuation">]</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>通过搜索，我们已经找到了该类库的版本的名字，只需要将这些内容加入到podfile文件中即可</p>
<pre class="line-numbers language-ruby"><code class="language-ruby">platform <span class="token symbol">:ios</span><span class="token punctuation">,</span> <span class="token string">'5.1'</span>
<span class="token constant">Pod</span> <span class="token string">'FMDB'</span><span class="token punctuation">,</span><span class="token string">'2.0'</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>然后执行下面的命令，将这些类库加到到本地</p>
<pre class="line-numbers language-ruby"><code class="language-ruby">pod install
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="修复Cocoapods，重置repo"><a href="#修复Cocoapods，重置repo" class="headerlink" title="修复Cocoapods，重置repo"></a>修复Cocoapods，重置repo</h3><pre class="line-numbers language-ruby"><code class="language-ruby">pod repo remove master
pod repo add master https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>github<span class="token punctuation">.</span>com<span class="token operator">/</span><span class="token constant">CocoaPods</span><span class="token operator">/</span><span class="token constant">Specs</span><span class="token punctuation">.</span>git
pod repo update
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h3 id="减少更新安装的时间，只安装或更新必要的库"><a href="#减少更新安装的时间，只安装或更新必要的库" class="headerlink" title="减少更新安装的时间，只安装或更新必要的库"></a>减少更新安装的时间，只安装或更新必要的库</h3><pre class="line-numbers language-ruby"><code class="language-ruby">pod install <span class="token operator">--</span>verbose <span class="token operator">--</span>no<span class="token operator">-</span>repo<span class="token operator">-</span>update
pod update <span class="token operator">--</span>verbose <span class="token operator">--</span>no<span class="token operator">-</span>repo<span class="token operator">-</span>update
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>之后将会生成一个workspace文件，以后我们打开项目的时候，就打开workspace文件即可，项目和其所需要的类库都以sub project的方式加到了这个workspace下面</p>
]]></content>
      <categories>
        <category>iOS</category>
      </categories>
  </entry>
  <entry>
    <title>使用RVM安装ruby</title>
    <url>/2013/04/10/use-rvm-install-ruby/</url>
    <content><![CDATA[<p>今天突然发现ruby版本不小心又回到了1.8.7，可能是我修改了rvm的配置文件导致的，于是开始折腾安装rvm和ruby</p>
<p>首先还是先安装Homebrew吧<br>很简单，一行代码搞定</p>
<pre class="line-numbers language-ruby"><code class="language-ruby">ruby <span class="token operator">-</span>e <span class="token string">"$(curl -fsSL https://raw.github.com/mxcl/homebrew/go)"</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>安装RVM</p>
<pre class="line-numbers language-ruby"><code class="language-ruby">curl <span class="token operator">-</span><span class="token constant">L</span> https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>get<span class="token punctuation">.</span>rvm<span class="token punctuation">.</span>io <span class="token operator">|</span> bash <span class="token operator">-</span>s stable <span class="token operator">--</span>ruby
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>走着走着发现出错了</p>
<pre class="line-numbers language-ruby"><code class="language-ruby"><span class="token constant">Missing</span> required packages<span class="token punctuation">:</span> autoconf<span class="token punctuation">,</span> automake<span class="token punctuation">,</span> libtool<span class="token punctuation">,</span> pkg<span class="token operator">-</span>config<span class="token punctuation">,</span> libyaml<span class="token punctuation">,</span> readline<span class="token punctuation">,</span> libxml2<span class="token punctuation">,</span> libxslt<span class="token punctuation">,</span> libksba<span class="token punctuation">,</span> openssl<span class="token punctuation">,</span> sqlite<span class="token punctuation">.</span>
<span class="token constant">RVM</span> autolibs is now configured with mode <span class="token string">'2'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">'check and stop if missing'</span><span class="token punctuation">,</span>
please run `rvm autolibs enable` to let <span class="token constant">RVM</span> <span class="token keyword">do</span> it's job <span class="token keyword">or</span> run <span class="token keyword">and</span> read `rvm autolibs <span class="token punctuation">[</span>help<span class="token punctuation">]</span>`
<span class="token keyword">or</span> visit https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>rvm<span class="token punctuation">.</span>io<span class="token operator">/</span>rvm<span class="token operator">/</span>autolibs <span class="token keyword">for</span> more information<span class="token punctuation">.</span>
<span class="token constant">There</span> were package installation errors<span class="token punctuation">,</span> make sure to read the log<span class="token punctuation">.</span>
<span class="token constant">Check</span> <span class="token constant">Homebrew</span> requirements https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>github<span class="token punctuation">.</span>com<span class="token operator">/</span>mxcl<span class="token operator">/</span>homebrew<span class="token operator">/</span>wiki<span class="token operator">/</span><span class="token constant">Installation</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>透过错误信息，发现缺少一写依赖的包，和rvm的autolibs没打开，这时候我们就通过Homebrew先安装上（具体你要看清楚你缺少的是什么）</p>
<pre class="line-numbers language-ruby"><code class="language-ruby">rvm autolibs enable
rvm reload
brew install autoconf automake libtool pkg<span class="token operator">-</span>config libyaml readline libxml2 libxslt libksba openssl sqlite
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>漫长的等带后，依赖包终于装完了<br>再次安装RVM</p>
<pre class="line-numbers language-ruby"><code class="language-ruby">curl <span class="token operator">-</span><span class="token constant">L</span> https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>get<span class="token punctuation">.</span>rvm<span class="token punctuation">.</span>io <span class="token operator">|</span> bash <span class="token operator">-</span>s stable <span class="token operator">--</span>ruby
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>就会安装成功，你可以rvm -v查看下版本</p>
<p>安装并设置1.9.3为你的默认版本</p>
<pre class="line-numbers language-ruby"><code class="language-ruby">rvm install <span class="token number">1.9</span><span class="token punctuation">.</span><span class="token number">3</span>
rvm use <span class="token number">1.9</span><span class="token punctuation">.</span><span class="token number">3</span>
rvm rubygems latest
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>Finish</p>
]]></content>
      <categories>
        <category>技术随笔</category>
      </categories>
  </entry>
  <entry>
    <title>blog with github(1)-前期准备</title>
    <url>/2013/05/10/blog-with-github/</url>
    <content><![CDATA[<p>##开始之前</p>
<ol>
<li><a href="http://git-scm.com/">安装Git</a></li>
<li>使用<a href="http://octopress.org/docs/setup/rbenv">rbenv</a>或者<a href="http://octopress.org/docs/setup/rvm">RVM</a>安装ruby 1.9.3</li>
</ol>
<p>安装完后确保你的ruby版本是1.9.3</p>
<pre class="line-numbers language-ruby"><code class="language-ruby">ruby <span class="token operator">-</span>v
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>##设置Octopress</p>
<pre class="line-numbers language-ruby"><code class="language-ruby">git clone git<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>github<span class="token punctuation">.</span>com<span class="token operator">/</span>imathis<span class="token operator">/</span>octopress<span class="token punctuation">.</span>git octopress
cd octopress  
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>接下来安装一些依赖</p>
<pre class="line-numbers language-ruby"><code class="language-ruby">gem install bundler
rbenv rehash   
bundle install
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>安装Octopress默认主题</p>
<pre class="line-numbers language-ruby"><code class="language-ruby">rake install
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>–未完待续，哥去睡觉</p>
]]></content>
      <categories>
        <category>技术随笔</category>
      </categories>
  </entry>
  <entry>
    <title>different of class and category</title>
    <url>/2013/05/10/different-of-class-and-category/</url>
    <content><![CDATA[<p>当需要重写父类中的方法时，这时候定义子类</p>
<pre class="line-numbers language-ruby"><code class="language-ruby"><span class="token variable">@interface</span> <span class="token class-name">JADanSideController</span> <span class="token punctuation">:</span> <span class="token constant">JASidePanelController</span>


<span class="token variable">@end</span>


<span class="token variable">@implementation</span> <span class="token constant">JADanSideController</span>

<span class="token operator">-</span> <span class="token punctuation">(</span><span class="token constant">UIBarButtonItem</span> <span class="token operator">*</span><span class="token punctuation">)</span>leftButtonForCenterPanel<span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>
    
    <span class="token constant">UIButton</span> <span class="token operator">*</span>leftBarButton <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token constant">UIButton</span> buttonWithType<span class="token symbol">:UIButtonTypeCustom</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">[</span>leftBarButton setFrame<span class="token symbol">:CGRectMake</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">44</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">[</span>leftBarButton setBackgroundImage<span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token constant">UIImage</span> imageNamed<span class="token punctuation">:</span>@<span class="token string">"List_NaviSide.png"</span><span class="token punctuation">]</span> forState<span class="token symbol">:UIControlStateNormal</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">[</span>leftBarButton addTarget<span class="token symbol">:self</span> action<span class="token punctuation">:</span><span class="token variable">@selector</span><span class="token punctuation">(</span>toggleLeftPanel<span class="token punctuation">:</span><span class="token punctuation">)</span> forControlEvents<span class="token symbol">:UIControlEventTouchUpInside</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    __autoreleasing <span class="token constant">UIBarButtonItem</span> <span class="token operator">*</span>leftBarButtonItem <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token constant">UIBarButtonItem</span> alloc<span class="token punctuation">]</span> initWithCustomView<span class="token symbol">:leftBarButton</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> leftBarButtonItem<span class="token punctuation">;</span>
<span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;</span>

<span class="token variable">@end</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>当需要为父类添加方法时，这时候定义类别</p>
<pre class="line-numbers language-ruby"><code class="language-ruby"><span class="token variable">@interface</span> <span class="token class-name">JADanSideController</span> <span class="token punctuation">:</span> <span class="token constant">JASidePanelController</span>

<span class="token operator">-</span> <span class="token punctuation">(</span>void<span class="token punctuation">)</span>setBackGroundColor<span class="token punctuation">;</span>

<span class="token variable">@end</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
]]></content>
      <categories>
        <category>技术随笔</category>
      </categories>
  </entry>
  <entry>
    <title>blog with github(2)-部署到github</title>
    <url>/2013/06/03/blog-with-github-2/</url>
    <content><![CDATA[<p>###使用github pages</p>
<p>如果想使用 <a href="http://username.github.io/">http://username.github.io</a> 的域名作为你的blog地址的话，首先要创建一个仓库，名字为你的用户id.github.io（比如我的是welsonla.github.io）</p>
<p>用户使用的是Github Pages的master版本下面的public作为你的网站主目录，你可以通过浏览<a href="http://username.github.io/">http://username.github.io</a> 来查看。如果你想在source这个版本上面维护代码，并且把内容提交到master分支，Octopress有一个命令来帮助你完成这些</p>
<pre class="line-numbers language-ruby"><code class="language-ruby">rake setup_github_pages
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>然后，他将 </p>
<ol>
<li>询问你的github pages的url</li>
<li>将远程的重‘origin’重命名为‘octopress’</li>
<li>在远程的origin讲你的github pages仓库添加进去</li>
<li>切换当前branch从master切换到source</li>
<li>根据你的仓库名，重新配置你的blog地址</li>
<li>在_deploy目录下面设置master分支，用于部署</li>
</ol>
<p>接下来执行</p>
<pre class="line-numbers language-ruby"><code class="language-ruby">rake generate
rake deploy
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>这将生成你的blog，并将生成的文件copy到_deploy目录下面,并添加到git，将他们commit和push到master分支上面，稍后，你会收到一份来自github的email告诉你，你的提交已经收到，并且很快将发不到你的web上面</p>
<p>并且，不要忘记提交你的代码到source分支</p>
<pre class="line-numbers language-ruby"><code class="language-ruby">git add <span class="token punctuation">.</span>
git commit <span class="token operator">-</span>m <span class="token string">'your message'</span>
git push origin source
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>####自定义域名绑定</p>
<p>首先你要source目录下面创建一个CNAME，</p>
<pre class="line-numbers language-ruby"><code class="language-ruby">echo <span class="token string">'your-domain.com'</span> <span class="token operator">></span><span class="token operator">></span> source<span class="token operator">/</span><span class="token constant">CNAME</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>之后去你的域名服务商或者你的dns服务商那里创建一条CNAME记录，记录指向的IP为<br>(不要使用顶级域名指向到pages,要使用二级域名)</p>
<pre class="line-numbers language-ruby"><code class="language-ruby"><span class="token number">207.97</span><span class="token punctuation">.</span><span class="token number">227.245</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
]]></content>
      <categories>
        <category>技术随笔</category>
      </categories>
  </entry>
  <entry>
    <title>blog with github(3)-Octopress配置</title>
    <url>/2013/06/03/blog-with-github-3/</url>
    <content><![CDATA[<p>Octopress的配置相当的简单，并且一般配置完成后，你不需要再对Rakefile和_config文件进行修改，下面这些是Octopress的配置文件</p>
<pre class="line-numbers language-ruby"><code class="language-ruby">_config<span class="token punctuation">.</span>yml       <span class="token comment" spellcheck="true"># Main config (Jekyll's settings)</span>
<span class="token constant">Rakefile</span>          <span class="token comment" spellcheck="true"># Configs for deployment</span>
config<span class="token punctuation">.</span>rb         <span class="token comment" spellcheck="true"># Compass config</span>
config<span class="token punctuation">.</span>ru         <span class="token comment" spellcheck="true"># Rack config</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>Rakefile大多是与部署相关的配置,如果不需要同步的话，你就不需要进行修改</p>
<p>####Blog配置</p>
<p>_config.yml有三部分配置,你必须修改url，并且title，subtitle和author也要修改，还有一些第三方的服务需要启用</p>
<p>#####主配置</p>
<pre class="line-numbers language-ruby"><code class="language-ruby">url<span class="token punctuation">:</span>                <span class="token comment" spellcheck="true"># For rewriting urls for RSS, etc</span>
title<span class="token punctuation">:</span>              <span class="token comment" spellcheck="true"># Used in the header and title tags</span>
subtitle<span class="token punctuation">:</span>           <span class="token comment" spellcheck="true"># A description used in the header</span>
author<span class="token punctuation">:</span>             <span class="token comment" spellcheck="true"># Your name, for RSS, Copyright, Metadata</span>
simple_search<span class="token punctuation">:</span>      <span class="token comment" spellcheck="true"># Search engine for simple site search</span>
description<span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># A default meta description for your site</span>
date_format<span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># Format dates using Ruby's date strftime syntax</span>
subscribe_rss<span class="token punctuation">:</span>      <span class="token comment" spellcheck="true"># Url for your blog's feed, defauts to /atom.xml</span>
subscribe_email<span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># Url to subscribe by email (service required)</span>
category_feeds<span class="token punctuation">:</span>     <span class="token comment" spellcheck="true"># Enable per category RSS feeds (defaults to false in 2.1)</span>
email<span class="token punctuation">:</span>              <span class="token comment" spellcheck="true"># Email address for the RSS feed if you want it.</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>#####Jekyll&amp;Plugins</p>
<pre class="line-numbers language-ruby"><code class="language-ruby">root<span class="token punctuation">:</span>               <span class="token comment" spellcheck="true"># Mapping for relative urls (default: /)</span>
permalink<span class="token punctuation">:</span>          <span class="token comment" spellcheck="true"># Permalink structure for blog posts</span>
source<span class="token punctuation">:</span>             <span class="token comment" spellcheck="true"># Directory for site source files</span>
destination<span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># Directory for generated site files</span>
plugins<span class="token punctuation">:</span>            <span class="token comment" spellcheck="true"># Directory for Jekyll plugins</span>
code_dir<span class="token punctuation">:</span>           <span class="token comment" spellcheck="true"># Directory for code snippets (for include_code plugin)</span>
category_dir<span class="token punctuation">:</span>       <span class="token comment" spellcheck="true"># Directory for generated blog category pages</span>

pygments<span class="token punctuation">:</span>           <span class="token comment" spellcheck="true"># Toggle python pygments syntax highlighting</span>
paginate<span class="token punctuation">:</span>           <span class="token comment" spellcheck="true"># Posts per page on the blog index</span>
pagination_dir<span class="token punctuation">:</span>     <span class="token comment" spellcheck="true"># Directory base for pagination URLs eg. /blog/page/2/</span>
recent_posts<span class="token punctuation">:</span>       <span class="token comment" spellcheck="true"># Number of recent posts to appear in the sidebar</span>

default_asides<span class="token punctuation">:</span>     <span class="token comment" spellcheck="true"># Configure what shows up in the sidebar and in what order</span>
blog_index_asides<span class="token punctuation">:</span>  <span class="token comment" spellcheck="true"># Optional sidebar config for blog index page</span>
post_asides<span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># Optional sidebar config for post layout</span>
page_asides<span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># Optional sidebar config for page layout</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>#####第三方配置</p>
<pre class="line-numbers language-ruby"><code class="language-ruby"><span class="token constant">Github</span> <span class="token operator">-</span> <span class="token constant">List</span> your github repositories <span class="token keyword">in</span> the sidebar
<span class="token constant">Twitter</span> <span class="token operator">-</span> <span class="token constant">Setup</span> a sidebar twitter feed<span class="token punctuation">,</span> follow button<span class="token punctuation">,</span> <span class="token keyword">and</span> tweet <span class="token function">button</span> <span class="token punctuation">(</span><span class="token keyword">for</span> sharing posts <span class="token keyword">and</span> pages<span class="token punctuation">)</span><span class="token punctuation">.</span>
<span class="token constant">Google</span> <span class="token constant">Plus</span> <span class="token constant">One</span> <span class="token operator">-</span> <span class="token constant">Setup</span> sharing <span class="token keyword">for</span> posts <span class="token keyword">and</span> pages on <span class="token constant">Google</span>’s plus one network<span class="token punctuation">.</span>
<span class="token constant">Pinboard</span> <span class="token operator">-</span> <span class="token constant">Share</span> your recent <span class="token constant">Pinboard</span> bookmarks <span class="token keyword">in</span> the sidebar<span class="token punctuation">.</span>
<span class="token constant">Delicious</span> <span class="token operator">-</span> <span class="token constant">Share</span> your recent <span class="token constant">Delicious</span> bookmarks <span class="token keyword">in</span> the sidebar<span class="token punctuation">.</span>
<span class="token constant">Disqus</span> <span class="token constant">Comments</span> <span class="token operator">-</span> <span class="token constant">Add</span> your disqus short name to enable disqus comments on your site<span class="token punctuation">.</span>
<span class="token constant">Google</span> <span class="token constant">Analytics</span> <span class="token operator">-</span> <span class="token constant">Add</span> your tracking id to enable <span class="token constant">Google</span> <span class="token constant">Analytics</span> tracking <span class="token keyword">for</span> your site<span class="token punctuation">.</span>
<span class="token constant">Facebook</span> <span class="token operator">-</span> <span class="token constant">Add</span> a <span class="token constant">Facebook</span> like button
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
]]></content>
      <categories>
        <category>技术随笔</category>
      </categories>
  </entry>
  <entry>
    <title>blog with github(4)-开始写吧，骚年</title>
    <url>/2013/06/03/blog-with-github-4/</url>
    <content><![CDATA[<p>Octopress提供很多的Rake任务去创建post和pages，他还会根据你的posts来生成Category，你可以在atom.xml或者blog&#x2F;categories&#x2F;&lt;category&gt;&#x2F;atom.xml中找到这些内容</p>
<p>####Post</p>
<p>这些Post页面必须存放在Source&#x2F;_posts目录下面，并且命名方式和jekyll的命名方式一样，会转换成YYYY-MM-DD-Post-title.markdown，这个文件的名字就是你的blog的url slug，日期帮助你排序这些文章</p>
<pre class="line-numbers language-ruby"><code class="language-ruby">rake new_post<span class="token punctuation">[</span><span class="token string">"Title"</span><span class="token punctuation">]</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>在使用了ZSH的话，你要这样创建</p>
<pre class="line-numbers language-ruby"><code class="language-ruby">rake new_post或者rake new_post<span class="token punctuation">[</span>\<span class="token string">"Title\"</span><span class="token punctuation">]</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>例如</p>
<pre class="line-numbers language-ruby"><code class="language-ruby">rake new_post<span class="token punctuation">[</span><span class="token string">"Zombie Ninjas Attack: A survivor's retrospective"</span><span class="token punctuation">]</span>
 <span class="token constant">Creates</span> source<span class="token operator">/</span>_posts<span class="token operator">/</span><span class="token number">2011</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">03</span><span class="token operator">-</span>zombie<span class="token operator">-</span>ninjas<span class="token operator">-</span>attack<span class="token operator">-</span>a<span class="token operator">-</span>survivors<span class="token operator">-</span>retrospective<span class="token punctuation">.</span>markdown
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>or</p>
<pre class="line-numbers language-ruby"><code class="language-ruby"><span class="token operator">~</span><span class="token operator">/</span><span class="token constant">Code</span><span class="token operator">/</span>rails<span class="token operator">/</span><span class="token function">octopress</span><span class="token punctuation">(</span>branch<span class="token symbol">:source</span><span class="token punctuation">)</span> » rake new_post                        
<span class="token constant">Enter</span> a title <span class="token keyword">for</span> your post<span class="token punctuation">:</span> blog<span class="token operator">-</span>with<span class="token operator">-</span>github<span class="token number">-4</span>
mkdir <span class="token operator">-</span>p source<span class="token operator">/</span>_posts
<span class="token constant">Creating</span> <span class="token keyword">new</span> <span class="token class-name">post</span><span class="token punctuation">:</span> source<span class="token operator">/</span>_posts<span class="token operator">/</span><span class="token number">2013</span><span class="token operator">-</span><span class="token number">06</span><span class="token operator">-</span><span class="token number">03</span><span class="token operator">-</span>blog<span class="token operator">-</span>with<span class="token operator">-</span>github<span class="token number">-4</span><span class="token punctuation">.</span>markdown
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>生成的内容大致如下</p>
<pre class="line-numbers language-ruby"><code class="language-ruby"><span class="token operator">--</span><span class="token operator">-</span>
layout<span class="token punctuation">:</span> post
title<span class="token punctuation">:</span> <span class="token string">"Zombie Ninjas Attack: A survivor's retrospective"</span>
date<span class="token punctuation">:</span> <span class="token number">2011</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">03</span> <span class="token number">5</span><span class="token punctuation">:</span><span class="token number">59</span>
comments<span class="token punctuation">:</span> <span class="token keyword">true</span>
external<span class="token operator">-</span>url<span class="token punctuation">:</span>
categories<span class="token punctuation">:</span>
<span class="token operator">--</span><span class="token operator">-</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>你可以关闭comments，或者为他添加categories的tag，并且你还可以添加<code>author: Your Name</code>与<code>published: false</code>来控制是否发布</p>
<p>####Page</p>
<p>生成Page的命令</p>
<pre class="line-numbers language-ruby"><code class="language-ruby">rake new_page<span class="token punctuation">[</span><span class="token keyword">super</span><span class="token operator">-</span>awesome<span class="token punctuation">]</span>
<span class="token comment" spellcheck="true"># creates /source/super-awesome/index.markdown</span>

rake new_page<span class="token punctuation">[</span><span class="token keyword">super</span><span class="token operator">-</span>awesome<span class="token operator">/</span>page<span class="token punctuation">.</span>html<span class="token punctuation">]</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>如果使用了zsh的话，方法要参照post的创建方式</p>
<p>生成的pages的默认内如大致如下</p>
<pre class="line-numbers language-ruby"><code class="language-ruby"><span class="token operator">--</span><span class="token operator">-</span>
layout<span class="token punctuation">:</span> page
title<span class="token punctuation">:</span> <span class="token string">"Super Awesome"</span>
date<span class="token punctuation">:</span> <span class="token number">2011</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">03</span> <span class="token number">5</span><span class="token punctuation">:</span><span class="token number">59</span>
comments<span class="token punctuation">:</span> <span class="token keyword">true</span>
sharing<span class="token punctuation">:</span> <span class="token keyword">true</span>
footer<span class="token punctuation">:</span> <span class="token keyword">true</span>
<span class="token operator">--</span><span class="token operator">-</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>####Content</p>
<p>如果列表中不想显示全文内容的话，可以添加<code>&lt;!-- more --&gt;</code>标签，这将在文章下面生成一个“Continue →” 链接，链接到全文的地址</p>
<p>###Generate &amp; Preview</p>
<pre class="line-numbers language-ruby"><code class="language-ruby">rake generate   <span class="token comment" spellcheck="true"># Generates posts and pages into the public directory</span>
rake watch      <span class="token comment" spellcheck="true"># Watches source/ and sass/ for changes and regenerates</span>
rake preview    <span class="token comment" spellcheck="true"># Watches, and mounts a webserver at http://localhost:4000</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>本地使用<a href="http://localhost:4000就可以访问了">http://localhost:4000就可以访问了</a></p>
]]></content>
      <categories>
        <category>技术随笔</category>
      </categories>
  </entry>
  <entry>
    <title>git笔记</title>
    <url>/2013/06/25/git-note/</url>
    <content><![CDATA[<h4 id="一些全局配置"><a href="#一些全局配置" class="headerlink" title="一些全局配置"></a>一些全局配置</h4><pre class="line-numbers language-ruby"><code class="language-ruby">git config <span class="token operator">--</span>global push<span class="token punctuation">.</span>default matching

git config <span class="token operator">--</span>global color<span class="token punctuation">.</span>status auto
git config <span class="token operator">--</span>global color<span class="token punctuation">.</span>diff auto
git config <span class="token operator">--</span>global color<span class="token punctuation">.</span>branch auto
git config <span class="token operator">--</span>global color<span class="token punctuation">.</span>interactive auto
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="添加所有新文件"><a href="#添加所有新文件" class="headerlink" title="添加所有新文件"></a>添加所有新文件</h4><pre class="line-numbers language-ruby"><code class="language-ruby">git add <span class="token punctuation">.</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h4 id="从版本中去除一个文件"><a href="#从版本中去除一个文件" class="headerlink" title="从版本中去除一个文件"></a>从版本中去除一个文件</h4><pre class="line-numbers language-ruby"><code class="language-ruby">git rm test<span class="token punctuation">.</span>html<span class="token punctuation">.</span>rb
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h4 id="假设有很多新文件和删除了好多文件"><a href="#假设有很多新文件和删除了好多文件" class="headerlink" title="假设有很多新文件和删除了好多文件"></a>假设有很多新文件和删除了好多文件</h4><pre class="line-numbers language-ruby"><code class="language-ruby">git add <span class="token operator">-</span><span class="token constant">A</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h4 id="获取所有远程版本"><a href="#获取所有远程版本" class="headerlink" title="获取所有远程版本"></a>获取所有远程版本</h4><pre class="line-numbers language-ruby"><code class="language-ruby">git fetch
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h4 id="创建并切换到新分支"><a href="#创建并切换到新分支" class="headerlink" title="创建并切换到新分支"></a>创建并切换到新分支</h4><pre class="line-numbers language-ruby"><code class="language-ruby">git checkout <span class="token operator">-</span>b newbranch
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h4 id="切换到分支"><a href="#切换到分支" class="headerlink" title="切换到分支"></a>切换到分支</h4><pre class="line-numbers language-ruby"><code class="language-ruby">git checkout master
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h4 id="迁移原有git项目到新得项目地址"><a href="#迁移原有git项目到新得项目地址" class="headerlink" title="迁移原有git项目到新得项目地址"></a>迁移原有git项目到新得项目地址</h4><pre class="line-numbers language-ruby"><code class="language-ruby">git remote set<span class="token operator">-</span>url origin git<span class="token variable">@git</span><span class="token punctuation">.</span>github<span class="token punctuation">.</span>com<span class="token symbol">:welsonla</span><span class="token operator">/</span>studio<span class="token punctuation">.</span>git
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h4 id="查看当前git分支"><a href="#查看当前git分支" class="headerlink" title="查看当前git分支"></a>查看当前git分支</h4><pre><code>git branch -r
</code></pre>
<h4 id="查看git-log"><a href="#查看git-log" class="headerlink" title="查看git log"></a>查看git log</h4><pre class="line-numbers language-ruby"><code class="language-ruby">git log
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h4 id="查看当前tag"><a href="#查看当前tag" class="headerlink" title="查看当前tag"></a>查看当前tag</h4><pre class="line-numbers language-ruby"><code class="language-ruby">git tag
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h4 id="创建一个新的tag"><a href="#创建一个新的tag" class="headerlink" title="创建一个新的tag"></a>创建一个新的tag</h4><pre class="line-numbers language-ruby"><code class="language-ruby">git tag v1<span class="token number">.1</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h4 id="降当前tag推送到服务器"><a href="#降当前tag推送到服务器" class="headerlink" title="降当前tag推送到服务器"></a>降当前tag推送到服务器</h4><pre class="line-numbers language-ruby"><code class="language-ruby">git push origin <span class="token operator">--</span>tags

推送单个
git push origin v1<span class="token number">.1</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="将现有svn项目转换成git项目，并保留所有commit-log"><a href="#将现有svn项目转换成git项目，并保留所有commit-log" class="headerlink" title="将现有svn项目转换成git项目，并保留所有commit log"></a>将现有svn项目转换成git项目，并保留所有commit log</h4><pre class="line-numbers language-ruby"><code class="language-ruby">git svn clone <span class="token punctuation">[</span><span class="token constant">SVN</span><span class="token operator">-</span><span class="token constant">Path</span><span class="token punctuation">]</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h4 id="回滚"><a href="#回滚" class="headerlink" title="回滚"></a>回滚</h4><pre class="line-numbers language-ruby"><code class="language-ruby"><span class="token comment" spellcheck="true">#http://stackoverflow.com/questions/1338728/delete-commits-from-a-branch-in-git</span>
git reset <span class="token operator">--</span>hard commitid
git push <span class="token operator">--</span>force
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h4 id="ignore"><a href="#ignore" class="headerlink" title="ignore"></a>ignore</h4><h5 id="gitignore-新文件使用正则匹配"><a href="#gitignore-新文件使用正则匹配" class="headerlink" title=".gitignore 新文件使用正则匹配"></a>.gitignore 新文件使用正则匹配</h5><pre><code>*.file_extension
.idea/*
</code></pre>
<h5 id="remove-exist-files-现有文件需要软删除"><a href="#remove-exist-files-现有文件需要软删除" class="headerlink" title="remove exist files(现有文件需要软删除)"></a>remove exist files(现有文件需要软删除)</h5><pre class="line-numbers language-ruby"><code class="language-ruby">git rm <span class="token operator">-</span>r <span class="token operator">--</span>cached <span class="token punctuation">.</span> <span class="token operator">/</span><span class="token operator">/</span>soft delete
git add <span class="token punctuation">.</span>
git commit <span class="token operator">-</span>m <span class="token string">'remove ignore files'</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
]]></content>
      <categories>
        <category>git</category>
      </categories>
  </entry>
  <entry>
    <title>vim-note</title>
    <url>/2013/07/06/vim-note/</url>
    <content><![CDATA[<p>####移动到行首</p>
<pre class="line-numbers language-ruby"><code class="language-ruby"><span class="token number">0</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>####移动到行尾</p>
<pre class="line-numbers language-ruby"><code class="language-ruby">$
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>####剪切多行</p>
<pre class="line-numbers language-ruby"><code class="language-ruby">v
向下移动
d
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>####粘贴</p>
<pre class="line-numbers language-ruby"><code class="language-ruby"><span class="token constant">P</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>####在nerdTree光标处新建一个文件</p>
<pre class="line-numbers language-ruby"><code class="language-ruby">m
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>####删除多行(数字+dd)</p>
<pre class="line-numbers language-ruby"><code class="language-ruby">5dd <span class="token comment" spellcheck="true">#删除5行</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>####多行注释</p>
<pre class="line-numbers language-ruby"><code class="language-ruby"><span class="token number">1</span><span class="token punctuation">.</span><span class="token constant">ESC</span><span class="token operator">+</span>v
<span class="token number">2</span><span class="token punctuation">.</span>方向键向下或者向上选中多行
<span class="token number">3</span><span class="token punctuation">.</span><span class="token constant">Control</span><span class="token operator">+</span>v
<span class="token number">4</span><span class="token punctuation">.</span><span class="token constant">Shift</span><span class="token operator">+</span>i
<span class="token number">5</span><span class="token punctuation">.</span><span class="token comment" spellcheck="true">#</span>
<span class="token number">6</span><span class="token punctuation">.</span><span class="token constant">Esc</span><span class="token punctuation">,</span><span class="token constant">Esc</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
]]></content>
      <categories>
        <category>工具控</category>
      </categories>
  </entry>
  <entry>
    <title>encrypt sqlite with sqlcipher</title>
    <url>/2013/08/13/encrypt-sqlite-with-sqlcipher/</url>
    <content><![CDATA[<p>##Get the sqlcipher SourceCode</p>
<pre class="line-numbers language-ruby"><code class="language-ruby"><span class="token comment" spellcheck="true">#使用2.1的版本比较稳定些</span>
https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>github<span class="token punctuation">.</span>com<span class="token operator">/</span>welsonla<span class="token operator">/</span>sqlcipher<span class="token operator">/</span>archive<span class="token operator">/</span>v2<span class="token number">.1</span><span class="token punctuation">.</span><span class="token number">1</span><span class="token punctuation">.</span>tar<span class="token punctuation">.</span>gz
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<span id="more"></span>

<p>##Complite the source code<br>动态链接的编译方法（Compiling with dynamic linking）[推荐]:</p>
<pre class="line-numbers language-ruby"><code class="language-ruby"><span class="token punctuation">.</span><span class="token operator">/</span>configure <span class="token operator">--</span>enable<span class="token operator">-</span>tempstore<span class="token operator">=</span>yes <span class="token constant">CFLAGS</span><span class="token operator">=</span><span class="token string">"-DSQLITE_HAS_CODEC"</span> <span class="token constant">LDFLAGS</span><span class="token operator">=</span><span class="token string">"-lcrypto"</span>
 make
 ln <span class="token operator">-</span>s <span class="token operator">/</span><span class="token constant">Users</span><span class="token operator">/</span>wanyc<span class="token operator">/</span>sqlcipher<span class="token operator">/</span>sqlite3 <span class="token operator">/</span>usr<span class="token operator">/</span>bin<span class="token operator">/</span>sqlcipher 
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p><del>静态库的编译方法: (replace &#x2F;path&#x2F;to with the path to libcrypto.a)</del></p>
<pre class="line-numbers language-ruby"><code class="language-ruby">  <span class="token comment" spellcheck="true">#./configure --enable-tempstore=yes CFLAGS="-DSQLITE_HAS_CODEC" LDFLAGS="/path/to/libcrypto.a"</span>
  <span class="token comment" spellcheck="true">#make</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>##How to encrypt a sqlite(In Shell)</p>
<p>#加密数据库几种方式</p>
<p>####1.shell方式加密一个sqlite</p>
<pre class="line-numbers language-ruby"><code class="language-ruby">sqlcipher test<span class="token punctuation">.</span>db
<span class="token operator">></span> <span class="token constant">PRAGMA</span> key<span class="token operator">=</span><span class="token string">'test'</span><span class="token punctuation">;</span> <span class="token operator">/</span><span class="token operator">/</span>必须在打开数据库第一步来执行
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>####2.（In shell）</p>
<pre class="line-numbers language-ruby"><code class="language-ruby">sqlciper test<span class="token punctuation">.</span>db
<span class="token constant">PRAGMA</span> <span class="token constant">KEY</span><span class="token operator">=</span><span class="token string">'helloworld'</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">#第一步必须执行</span>
<span class="token constant">ATTACH</span> <span class="token constant">DATABASE</span> <span class="token string">'encrypted.db'</span> as encrypted <span class="token constant">KEY</span> <span class="token string">'SomePassword'</span><span class="token punctuation">;</span> <span class="token operator">/</span><span class="token operator">/</span>encrypted<span class="token punctuation">.</span>db是要导出的新的数据库
<span class="token constant">SELECT</span> <span class="token function">sqlcipher_export</span><span class="token punctuation">(</span><span class="token string">'encrypted'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token constant">DETACH</span> <span class="token constant">DATABASE</span> encrypted<span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>#####3..Object-c代码实现对一个非加密库导入到加密库的方法(已经验证)(Xcode)</p>
<pre class="line-numbers language-ruby"><code class="language-ruby"><span class="token constant">NSString</span> <span class="token operator">*</span>documentPath <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token function">NSSearchPathForDirectoriesInDomains</span><span class="token punctuation">(</span><span class="token constant">NSDocumentDirectory</span><span class="token punctuation">,</span><span class="token constant">NSUserDomainMask</span><span class="token punctuation">,</span> <span class="token constant">YES</span><span class="token punctuation">)</span> objectAtIndex<span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token constant">NSString</span> <span class="token operator">*</span>attachPath <span class="token operator">=</span> <span class="token punctuation">[</span>documentPath stringByAppendingPathComponent<span class="token punctuation">:</span>@<span class="token string">"new.db"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">sqlite3_open</span><span class="token punctuation">(</span><span class="token punctuation">[</span>path_u <span class="token constant">UTF8String</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>convert_DB<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token constant">SQLITE_OK</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>
        <span class="token constant">NSString</span> <span class="token operator">*</span>sql <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token constant">NSString</span> stringWithFormat<span class="token punctuation">:</span>@"<span class="token constant">ATTACH</span> <span class="token constant">DATABASE</span> '<span class="token string">%@' AS encrypted KEY '1234';",attachPath];
    
        //执行Attach操作
      sqlite3_exec(convert_DB, [sql UTF8String] , NULL, NULL, NULL);
  
      // 导出数据库
      sqlite3_exec(convert_DB, "SELECT sqlcipher_export('encrypted');", NULL, NULL, NULL);
  
      // 执行分离
      sqlite3_exec(convert_DB, "DETACH DATABASE encrypted;", NULL, NULL, NULL);
  
      NSLog (@</span>"<span class="token constant">End</span> database copying at <span class="token string">%@",[NSDate date]);
      sqlite3_close(convert_DB);
&amp;#125;
else &amp;#123;
    sqlite3_close(convert_DB);
    NSAssert1(NO, @</span><span class="token string">"Failed to open database with message '%s'."</span><span class="token punctuation">,</span> <span class="token function">sqlite3_errmsg</span><span class="token punctuation">(</span>convert_DB<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>#为加密数据库解密<br>####1.先导出现有库的数据(In shell)</p>
<pre class="line-numbers language-ruby"><code class="language-ruby">sqlcipher plaintext<span class="token punctuation">.</span>db
<span class="token punctuation">.</span>output dsa<span class="token punctuation">.</span>sql
<span class="token punctuation">.</span>dump
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>####将新的数据库导出，并加密，之后导入非加密的库里面的数据</p>
<pre class="line-numbers language-ruby"><code class="language-ruby">sqlcipher another<span class="token punctuation">.</span>db
<span class="token constant">PRAGMA</span> key<span class="token operator">=</span><span class="token string">'aaa'</span><span class="token punctuation">;</span>
<span class="token punctuation">.</span>read dsa<span class="token punctuation">.</span>sql
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>####2. 为加密后的sqlite执行解密(其实步骤与加密一样，只要把key设置为空就实现了不加密)</p>
<pre class="line-numbers language-ruby"><code class="language-ruby"><span class="token constant">ATTACH</span> <span class="token constant">DATABASE</span> <span class="token string">'encrypted.db'</span> as encrypted <span class="token constant">KEY</span> <span class="token string">''</span><span class="token punctuation">;</span> <span class="token operator">/</span><span class="token operator">/</span>encrypted<span class="token punctuation">.</span>db是要导出的新的数据库
<span class="token constant">SELECT</span> <span class="token function">sqlcipher_export</span><span class="token punctuation">(</span><span class="token string">'encrypted'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token constant">DETACH</span> <span class="token constant">DATABASE</span> encrypted<span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>####3.（In shell）</p>
<pre class="line-numbers language-ruby"><code class="language-ruby">sqlciper test<span class="token punctuation">.</span>db
<span class="token constant">PRAGMA</span> <span class="token constant">KEY</span><span class="token operator">=</span><span class="token string">'helloworld'</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">#第一步必须执行</span>
<span class="token constant">ATTACH</span> <span class="token constant">DATABASE</span> <span class="token string">'encrypted.db'</span> as encrypted <span class="token constant">KEY</span> <span class="token string">''</span><span class="token punctuation">;</span>
<span class="token constant">SELECT</span> <span class="token function">sqlcipher_export</span><span class="token punctuation">(</span><span class="token string">'encrypted'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token constant">DETACH</span> <span class="token constant">DATABASE</span> encrypted<span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>##参考</p>
<ul>
<li>sqlcipher配置 <a href="http://sqlcipher.net/ios-tutorial/">http://sqlcipher.net/ios-tutorial/</a>  </li>
<li>sqlcipher API <a href="http://sqlcipher.net/sqlcipher-api/">http://sqlcipher.net/sqlcipher-api/</a></li>
<li>sqlcipher 使用 <a href="http://jordy.easymorse.com/?p=970">http://jordy.easymorse.com/?p=970</a></li>
<li>Mac SQLCipher导出工具 <a href="https://github.com/welsonla/SQLCipherExport">https://github.com/welsonla/SQLCipherExport</a></li>
</ul>
]]></content>
      <categories>
        <category>iOS</category>
      </categories>
  </entry>
  <entry>
    <title>我的2013</title>
    <url>/2014/01/02/my-2013/</url>
    <content><![CDATA[<p>####作品</p>
<ol>
<li>对晴天进行了两次更新;</li>
<li>和小伙伴们一起做了一个密码管理的软件<a href="https://itunes/">passbox</a></li>
<li>写了一个对SQLCipher加密数据库转换的Mac程序</li>
</ol>
<p>####读书</p>
<ol>
<li>《打造Facebook》</li>
<li>《MacTack人生元编程》</li>
<li>《写给程序员的Web设计书》</li>
<li>《写给大家看的Web设计书》</li>
<li>《淘宝技术这十年》</li>
<li>《苹果开发之Cocoa编程》</li>
<li>《代码整洁之道》</li>
</ol>
<p>####健康<br>12年有一阵子住院，13年特别注意锻炼身体，9月份每天和几个朋友去紫竹院跑步运动。强度不是很大，天气渐冷，入冬，雾霾跟严寒，使运动停止。</p>
<p>13年身体并没有什么大碍，感谢</p>
<p>####技术<br>感觉自己这一年的技术，进步不大，惭愧。在用户体验跟交互方面，倒是有了一些自己的心得。对Mac的编程有了越来越浓厚的兴趣。</p>
<p>####济南<br>从十月份，陆续跟女朋友在济南看了几套房子。主要参考的房子是90平米以上可以落户的房子，现在我女人已经开始考虑学区的问题了，经十路沿线现在也越来越多的高楼在崛起，房价也在逐渐的攀高，房价是每个年轻人心里的痛。</p>
<p>####2014</p>
<ol>
<li>多读书</li>
<li>更多的iOS上的作品</li>
<li>更多的Mac应用</li>
<li>深入Object-c，并继续强化Ruby on Rails</li>
<li>锻炼身体</li>
<li>从AppStore赚多一点钱</li>
<li>与几个朋友的小工作室，希望我们能成为TapBot</li>
<li>换新工作 </li>
<li>买房结婚(房子已买)</li>
</ol>
]]></content>
      <categories>
        <category>life</category>
      </categories>
  </entry>
  <entry>
    <title>generate new host RSA key</title>
    <url>/2013/08/06/generate-new-host-rsa-key/</url>
    <content><![CDATA[<p>最近oschina的git服务器进行了迁移，导致了原有的git项目push不上去，总是提示</p>
<pre class="line-numbers language-ruby"><code class="language-ruby">@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@       <span class="token constant">WARNING</span><span class="token punctuation">:</span> <span class="token constant">POSSIBLE</span> <span class="token constant">DNS</span> <span class="token constant">SPOOFING</span> <span class="token constant">DETECTED!</span>          @
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
<span class="token constant">The</span> <span class="token constant">RSA</span> host key <span class="token keyword">for</span> git<span class="token punctuation">.</span>oschina<span class="token punctuation">.</span>net has changed<span class="token punctuation">,</span>
<span class="token keyword">and</span> the key <span class="token keyword">for</span> the corresponding <span class="token constant">IP</span> address <span class="token number">112.124</span><span class="token punctuation">.</span><span class="token number">6.106</span>
is unknown<span class="token punctuation">.</span> <span class="token constant">This</span> could either mean that
<span class="token constant">DNS</span> <span class="token constant">SPOOFING</span> is happening <span class="token keyword">or</span> the <span class="token constant">IP</span> address <span class="token keyword">for</span> the host
<span class="token keyword">and</span> its host key have changed at the same time<span class="token punctuation">.</span>
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@    <span class="token constant">WARNING</span><span class="token punctuation">:</span> <span class="token constant">REMOTE</span> <span class="token constant">HOST</span> <span class="token constant">IDENTIFICATION</span> <span class="token constant">HAS</span> <span class="token constant">CHANGED!</span>     @
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
<span class="token constant">IT</span> <span class="token constant">IS</span> <span class="token constant">POSSIBLE</span> <span class="token constant">THAT</span> <span class="token constant">SOMEONE</span> <span class="token constant">IS</span> <span class="token constant">DOING</span> <span class="token constant">SOMETHING</span> <span class="token constant">NASTY!</span>
<span class="token constant">Someone</span> could be eavesdropping on you right <span class="token function">now</span> <span class="token punctuation">(</span>man<span class="token operator">-</span><span class="token keyword">in</span><span class="token operator">-</span>the<span class="token operator">-</span>middle attack<span class="token punctuation">)</span><span class="token operator">!</span>
<span class="token constant">It</span> is also possible that a host key has just been changed<span class="token punctuation">.</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><del>第一个问题非常简单，就是修改&#x2F;etc&#x2F;hosts，添加一个IP与域名的对应关系即可</del></p>
<p>第二个是要求你更新know_host中的RSA key，执行如下命令即可</p>
<pre class="line-numbers language-ruby"><code class="language-ruby">ssh<span class="token operator">-</span>keygen <span class="token operator">-</span><span class="token constant">R</span> git<span class="token punctuation">.</span>oschina<span class="token punctuation">.</span>net
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<pre class="line-numbers language-ruby"><code class="language-ruby">cat <span class="token operator">/</span><span class="token punctuation">.</span>ssh<span class="token operator">/</span>known_hosts
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>查看known_host中的数据可以看到key已经更新了</p>
]]></content>
      <categories>
        <category>git</category>
      </categories>
  </entry>
  <entry>
    <title>你的Mac慢了么</title>
    <url>/2014/04/12/why-my-mac-so-slow/</url>
    <content><![CDATA[<p>本子是MC700,已经陪伴我coding了三年,中间升级了内存,硬盘加了SSD,但是自从电池坏掉以后,我拆掉了电池,接电使用,发现越来越卡,经历了三个月左右的煎熬,我的mac终于又重新焕发了青春,说说遇到的问题</p>
<span id="more"></span>

<ol>
<li><p>必须安装电池,电池坏掉的话,赶紧买新的装上,否则你的macbook会降频运行</p>
<blockquote>
<p>这就是为什么我是SSD硬盘,依然感觉慢的要死的原因,之前电池坏了,本想着拆下来,裸奔运行,后来就发现本子卡的不行.检测你的macbook是否在降频运行,可以使用这个小工具<a href="http://software.intel.com/en-us/articles/intel-power-gadget-20">Intel(R) Power Gadget</a></p>
</blockquote>
</li>
<li><p>使用时间长,本子会发热,你会发现kenerl_task这个进程占用的CPU特别大,试着用一些软件为mac降温</p>
<blockquote>
<p>推荐<a href="http://www.crystalidea.com/macs-fan-control">Macs Fan Control </a>,能固定风扇的转速,防止温度飙的很高</p>
</blockquote>
</li>
<li><p>如果是自己加装的SSD,默认trim是不打开的,需要自己使用打开</p>
<blockquote>
<p>推荐一个小工具<a href="http://www.cindori.org/software/trimenabler/">trim enables</a><br>  如果你是geek,也可以使用命令行打开trim,打开后需要重启你的电脑,看看这个gist上<a href="https://gist.github.com/return1/4058659">trim_enabler.sh</a></p>
</blockquote>
</li>
</ol>
]]></content>
      <categories>
        <category>随笔</category>
      </categories>
  </entry>
  <entry>
    <title>Learn core animation the hard way</title>
    <url>/2014/05/11/learn-core-animation-the-hard-way/</url>
    <content><![CDATA[<p>###Document</p>
<ol>
<li><a href="https://developer.apple.com/library/ios/documentation/Cocoa/Conceptual/CoreAnimation_guide/Key-ValueCodingExtensions/Key-ValueCodingExtensions.html#//apple_ref/doc/uid/TP40004514-CH12-SW8">CABasicAnimation Keypath</a></li>
<li><a href="https://developer.apple.com/library/mac/documentation/Cocoa/Conceptual/Animation_Types_Timing/Articles/PropertyAnimations.html">Animation Types and Timing Programming Guide</a></li>
<li><a href="https://developer.apple.com/library/mac/documentation/graphicsimaging/reference/CGAffineTransform/Reference/reference.html">CGAffineTransform</a></li>
<li><a href="https://developer.apple.com/library/mac/documentation/graphicsimaging/Conceptual/drawingwithquartz2d/Introduction/Introduction.html#//apple_ref/doc/uid/TP30001066">Quartz 2D Programming Guide</a></li>
<li><a href="http://baike.baidu.com/view/954621.htm">放射变换</a></li>
<li><a href="http://www.cnblogs.com/xiaodao/archive/2012/02/10/2345481.html">组合动画</a></li>
<li><a href="http://www.cnblogs.com/v2m_/archive/2013/05/09/3070187.html">http://www.cnblogs.com/v2m_&#x2F;archive&#x2F;2013&#x2F;05&#x2F;09&#x2F;3070187.html</a></li>
<li><a href="http://www.cnblogs.com/sell/archive/2013/02/01/2889013.html">几个常用动画代码</a></li>
</ol>
]]></content>
      <categories>
        <category>iOS</category>
      </categories>
  </entry>
  <entry>
    <title>Instruments无法启动</title>
    <url>/2014/07/14/instrument-start-fail/</url>
    <content><![CDATA[<p>最近在iOS7的系统上使用Instrument想检查内存的leaks，启动时候总是提示失败，花了些时间，解决了这个问题，做下笔记。</p>
<span id="more"></span>

<p>##issue</p>
<pre class="line-numbers language-ruby"><code class="language-ruby"><span class="token constant">Error</span> <span class="token constant">Starting</span> <span class="token constant">Recording</span>
<span class="token constant">At</span> least one target failed to launch<span class="token punctuation">;</span> aborting run


<span class="token constant">Target</span> failed to run<span class="token punctuation">.</span> <span class="token constant">Permisson</span> to debug <span class="token punctuation">[</span>app name<span class="token punctuation">]</span> was denied<span class="token punctuation">.</span> <span class="token constant">The</span> app must be signed with a development <span class="token function">identity</span> <span class="token punctuation">(</span>i<span class="token punctuation">.</span>e<span class="token punctuation">.</span> iOS <span class="token constant">Developer</span><span class="token punctuation">)</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><img src="http://ww4.sinaimg.cn/large/6e8de9dbgw1eice18vkrej20rs0jmgnq.jpg" alt="http://ww4.sinaimg.cn/large/6e8de9dbgw1eice18vkrej20rs0jmgnq.jpg"></p>
<p>##fix</p>
<pre class="line-numbers language-ruby"><code class="language-ruby"><span class="token constant">Product</span><span class="token operator">--</span><span class="token operator">></span><span class="token constant">Scheme</span><span class="token operator">--</span><span class="token operator">></span><span class="token constant">Edit</span> <span class="token constant">Scheme</span><span class="token punctuation">,</span>将<span class="token constant">Profile</span>那栏中的<span class="token constant">Build</span> <span class="token constant">Configuration</span>将<span class="token constant">Release</span>改为<span class="token constant">Debug</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p><img src="http://ww1.sinaimg.cn/large/6e8de9dbgw1eice66ef74j20jg0d7759.jpg" alt="http://ww1.sinaimg.cn/large/6e8de9dbgw1eice66ef74j20jg0d7759.jpg"></p>
<p>##issue<br>1.如果发现leaks视图无法监控到任何的内存泄露，说明你开启了Zombie，将Scheme菜单中的<code>Enable Zombie Objects</code>勾去就可以了<br>2.检查你是否启用了环境变量，变量中是否开启了zombie设置</p>
<p><img src="http://ww4.sinaimg.cn/large/6e8de9dbgw1eiceaztirjj20ee0arq3q.jpg" alt="http://ww4.sinaimg.cn/large/6e8de9dbgw1eiceaztirjj20ee0arq3q.jpg"></p>
]]></content>
      <categories>
        <category>iOS</category>
      </categories>
  </entry>
  <entry>
    <title>Xcode5 install command line tools</title>
    <url>/2014/07/14/xcode5-install-command-line-tools/</url>
    <content><![CDATA[<p>之前遇到过，一直没做笔记，导致每次都要现查</p>
<pre class="line-numbers language-ruby"><code class="language-ruby">xcode<span class="token operator">-</span>select <span class="token operator">--</span>install
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
]]></content>
      <categories>
        <category>iOS</category>
      </categories>
  </entry>
  <entry>
    <title>cocoa简洁写法笔记</title>
    <url>/2014/09/05/cocoa-tidy-write/</url>
    <content><![CDATA[<p>对cocoa的一些语法糖做的笔记</p>
<span id="more"></span>

<h3 id="NSNumber"><a href="#NSNumber" class="headerlink" title="NSNumber"></a>NSNumber</h3><pre class="line-numbers language-ruby"><code class="language-ruby"><span class="token constant">NSNumber</span> <span class="token operator">*</span>totalNumber <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token constant">NSNumber</span> numberWithInt<span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
to
<span class="token constant">NSNumber</span> <span class="token operator">*</span>totalNumber <span class="token operator">=</span> @<span class="token number">1</span><span class="token punctuation">;</span>

<span class="token comment" spellcheck="true">## 更多拓展</span>
<span class="token constant">NSNumber</span> <span class="token operator">*</span>floatNumber <span class="token operator">=</span> @<span class="token number">2</span><span class="token punctuation">.</span>5f<span class="token punctuation">;</span>
<span class="token constant">NSNumber</span> <span class="token operator">*</span>boolNumber <span class="token operator">=</span> <span class="token variable">@YES</span><span class="token punctuation">;</span>
<span class="token constant">NSNumber</span> <span class="token operator">*</span>totalNumber <span class="token operator">=</span> @<span class="token punctuation">(</span><span class="token number">5</span> <span class="token operator">*</span> <span class="token number">6</span><span class="token punctuation">.</span>5f<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="NSArray"><a href="#NSArray" class="headerlink" title="NSArray"></a>NSArray</h3><pre class="line-numbers language-ruby"><code class="language-ruby"><span class="token constant">NSArray</span> <span class="token operator">*</span>members <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token constant">NSArray</span> arrayWithObjects<span class="token punctuation">:</span>@<span class="token string">"father"</span><span class="token punctuation">,</span>@<span class="token string">"mother"</span><span class="token punctuation">,</span>@<span class="token string">"Jim"</span><span class="token punctuation">,</span><span class="token keyword">nil</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
to
<span class="token constant">NSArray</span> <span class="token operator">*</span>members <span class="token operator">=</span> @<span class="token punctuation">[</span>@<span class="token string">"father"</span><span class="token punctuation">,</span>@<span class="token string">"mother"</span><span class="token punctuation">,</span>@<span class="token string">"Jim"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token comment" spellcheck="true"># 取值</span>
<span class="token constant">NSString</span> <span class="token operator">*</span>username <span class="token operator">=</span> <span class="token punctuation">[</span>members objectAtIndex<span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
to
<span class="token constant">NSString</span> <span class="token operator">*</span>username <span class="token operator">=</span> members<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="NSDictionary"><a href="#NSDictionary" class="headerlink" title="NSDictionary"></a>NSDictionary</h3><pre class="line-numbers language-ruby"><code class="language-ruby"><span class="token constant">NSDictionary</span> <span class="token operator">*</span>personData <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token constant">NSDictionary</span> dictionaryWithObjectsAndKeys<span class="token punctuation">:</span>@<span class="token string">"Jim"</span><span class="token punctuation">,</span>@<span class="token string">"name"</span><span class="token punctuation">,</span>@<span class="token string">"man"</span><span class="token punctuation">,</span>@<span class="token string">"gender"</span><span class="token punctuation">,</span><span class="token keyword">nil</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
to
<span class="token constant">NSDictionary</span> <span class="token operator">*</span>personData <span class="token operator">=</span> @<span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;@"name":@"Jim",</span>
                             @<span class="token string">"gender"</span><span class="token punctuation">:</span>@<span class="token string">"man"</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;;</span>

<span class="token comment" spellcheck="true"># 取值</span>
<span class="token constant">NSString</span> <span class="token operator">*</span>username <span class="token operator">=</span> <span class="token punctuation">[</span>personData objectForKey<span class="token punctuation">:</span>@<span class="token string">"name"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
to
<span class="token constant">NSString</span> <span class="token operator">*</span>username <span class="token operator">=</span> person<span class="token punctuation">[</span>@<span class="token string">"name"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token comment" spellcheck="true"># 设值和替换</span>
<span class="token punctuation">[</span>personData replaceObjectAtIndex<span class="token punctuation">:</span><span class="token number">1</span> withOjbect<span class="token punctuation">:</span>@<span class="token string">"woman"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">[</span>personData setObject<span class="token punctuation">:</span>@<span class="token string">"address"</span> forKey<span class="token punctuation">:</span>@<span class="token string">"Beijing"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
to
person<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> @<span class="token string">"woman"</span><span class="token punctuation">;</span>
person<span class="token punctuation">[</span>@<span class="token string">"address"</span><span class="token punctuation">]</span> <span class="token operator">=</span> @<span class="token string">"Beijing"</span><span class="token punctuation">;</span>		
                            
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
]]></content>
  </entry>
  <entry>
    <title>Mac Mini开箱</title>
    <url>/2014/11/22/mac-mini-show/</url>
    <content><![CDATA[<p>###背景<br>从3月份换了新工作，就一直在使用自己的电脑，每天背着上下班，后来自己又买了显示器和新的机械键盘。想想这时候如果上Mac mini的话，外设都已经齐全了。<br>一直在等9月份的Mini新版，无奈对新版确实有些失望，一直摇摆不定，恰巧双十一的前一天，发现京东的MD387已经降价到了3588，果断决定入手了。</p>
<span id="more"></span>

<p>###开箱<br>11.11日下午收到了京东的货，用的京东白条，可以到12.10日进行还款，这个给京东点赞</p>
<p>![Mini](<a href="http://ww2.sinaimg.cn/large/6e8de9dbgw1emk7661ob8j21kw23u7wh.jpg">http://ww2.sinaimg.cn/large/6e8de9dbgw1emk7661ob8j21kw23u7wh.jpg</a> &#x3D;500x)</p>
<p>####正面照<br>![mini front](<a href="http://ww2.sinaimg.cn/large/6e8de9dbjw1emk8q9x5caj21kw23u7sd.jpg">http://ww2.sinaimg.cn/large/6e8de9dbjw1emk8q9x5caj21kw23u7sd.jpg</a> &#x3D;500x)</p>
<p>####背后有丰富的插口，再也不用担心USB口不够用了<br>![Mini back](<a href="http://ww2.sinaimg.cn/large/6e8de9dbgw1emk78er4izj21kw23u7sd.jpg">http://ww2.sinaimg.cn/large/6e8de9dbgw1emk78er4izj21kw23u7sd.jpg</a> &#x3D;500x)</p>
<p>####配件是有一个HDMI转DVI的口<br>![Mini support](<a href="http://ww1.sinaimg.cn/large/6e8de9dbgw1emk7a8ffzjj21kw23unj2.jpg">http://ww1.sinaimg.cn/large/6e8de9dbgw1emk7a8ffzjj21kw23unj2.jpg</a>  &#x3D;500x)</p>
<p>###升级<br>如果要换内存的话，是不用拧一颗螺丝的，旋转后壳，就能取下底部的壳,内部结构太美了<br>![Mini inside](<a href="http://ww4.sinaimg.cn/large/6e8de9dbgw1emk7crpjh4j21kw16oqmn.jpg">http://ww4.sinaimg.cn/large/6e8de9dbgw1emk7crpjh4j21kw16oqmn.jpg</a> &#x3D;400x)</p>
<p>###使用<br>#####显示特别模糊</p>
<p>当我接上显示器的那一刻，我感觉眼睛都要瞎了，一定是我打开方式不对，屏幕为什么这么模糊，后来上网搜了一下，很多人都有这个问题。<br>有人说线的问题，我换了几条线，显示效果都是一样糟糕<br>后来终于找到了问题，并且感谢大神给的解决方案。<a href="http://adolfzer.blogspot.com/2013/05/mac-osx.html">Mac OSX 顯示模糊問題，完全解決辦法</a></p>
<pre class="line-numbers language-ruby"><code class="language-ruby">mac的電腦如果搭配自家螢幕可能不會有這問題，

不過如果不是用<span class="token constant">Apple</span>的螢幕，然後又是跟我一樣是用<span class="token constant">HDMI</span>輸出的話，

那畫面就一定很難好了，
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>我把这个脚本放到了<a href="https://gist.github.com/welsonla/e43ba2ba039c7ecd475d">gist</a>上面，你复制保存到本地，命名为<code>patch-edid.rb</code><br>将这个patch放到你的文档下，然后运行,会生成一套显示器配置</p>
<pre class="line-numbers language-ruby"><code class="language-ruby">ruby patch<span class="token operator">-</span>edid<span class="token punctuation">.</span>rb
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>将这套配置，放到系统<code>/System/Library/Displays/Overrides</code>,重启后就会生效了。</p>
<p>#####打开trim，支持10.10<br>鉴于网上脚本众多，而trim enabler又让很多电脑出现了问题，现在终于发现一款10.10下完美的打开Trim的工具(free)</p>
<p><a href="http://chameleon.alessandroboschini.com/">Chameleon</a></p>
<p><img src="http://ww2.sinaimg.cn/large/6e8de9dbjw1emk7zcot3oj20880d9t95.jpg" alt="Chameleon"></p>
<p>###总结<br>使用中，将MC700上的8G内存换到了Mini上面，现在的配置是</p>
<pre><code>1. Mac Mini : DDR3 1333 8G
2. MC700 : 4G DDR3 1600, Sandisk SSD 128
</code></pre>
<p>由于近期开销比较大，这样对两台机器进行了一个互补，发现都还可以进行正常的开发，但Mini还是要比我的MC700要快很多，不知道这台MC700还能陪伴我多久。</p>
<p>感谢老婆，让我这次败家，有了一个一直以来梦寐以求的工作套装</p>
]]></content>
      <categories>
        <category>life</category>
      </categories>
  </entry>
  <entry>
    <title>我的2014</title>
    <url>/2015/02/01/my-2014/</url>
    <content><![CDATA[<h2 id="生活"><a href="#生活" class="headerlink" title="生活"></a>生活</h2><p>今年完成了几件大事:<br>三月，订婚<br>五月，买房，成为了房奴<br>八月，拍婚纱照<br>九月，结婚</p>
<p>今年生活上发生了很大的变化，与小关关组建了新的家庭，也让我肩负起了一个男人的责任，为了我们新的生活而奋斗。希望我能为家人和老婆创造更好的生活条件。</p>
<p>感谢小关同志的陪伴与理解，七年长跑，我们终于走到了一起</p>
<h2 id="工作"><a href="#工作" class="headerlink" title="工作"></a>工作</h2><p>今年工作发生了变动，离开了工作三年的老东家，加入了新公司，在各方面都对自己的提升非常大，技术上有了比较明显的提升，由于产品是直接面对用户的，在各方面的细节的要求也比较高，尤其是用户体验方面。</p>
<p>跨部门沟通上，由于团队非常大，涉及的业务部门也比较多，这一年有了不少机会与别的部门进行工作上的沟通协作，与人沟通上，也让我不再对人际交往有恐惧感。</p>
<p>工作方式上，拆分复杂业务，从最小的点逐步分析整个复杂的功能系统，在功能的实现上有了更明确的思路，对时间节点也有了更好的控制。抽离与重用，减少重复代码，精简了项目代码，提高了可扩展性。</p>
<p>通过龙哥的处理问题的方式跟思路，也让我积累到了很多宝贵的编程经验：</p>
<ul>
<li>清晰的调试思路与正确的分析，在一些棘手的问题上，不再是猜和逃避，而要找到出错的地方进行修复；</li>
<li>对公共资源的全局封装，自定义的Color使用Category方法封装，比用宏定义更优雅；</li>
<li>对业务的不同状态进行枚举化，使用起来更可读</li>
<li>对Notification的name常量化，更易查找</li>
<li>接口都继承自同一基类，公共的处理由基类完成，在较大变动的情况下，只需要在基类做出理，就能兼容新需求</li>
<li>特定符号写成常量，如接口返回值，在接口变动时只需要修改下常量即可</li>
</ul>
<h2 id="推荐的书"><a href="#推荐的书" class="headerlink" title="推荐的书"></a>推荐的书</h2><ul>
<li>《我编程，我快乐》</li>
<li>《大教堂与集市》</li>
<li>《重来》</li>
</ul>
<p>bye, 2014</p>
]]></content>
      <categories>
        <category>life</category>
      </categories>
  </entry>
  <entry>
    <title>Rails code snippets</title>
    <url>/2015/04/12/rails-code-snippets/</url>
    <content><![CDATA[<p>(摘录来自: persie. “Ruby on Rails 教程”)</p>
<h3 id="short-key"><a href="#short-key" class="headerlink" title="short key"></a>short key</h3><pre class="line-numbers language-ruby"><code class="language-ruby">g   generate
d   destory
s   server
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h3 id="脚手架以及一些常用的变量类型"><a href="#脚手架以及一些常用的变量类型" class="headerlink" title="脚手架以及一些常用的变量类型"></a>脚手架以及一些常用的变量类型</h3><pre class="line-numbers language-ruby"><code class="language-ruby">rails g scaffold user name<span class="token symbol">:string</span> age<span class="token symbol">:int</span> email<span class="token symbol">:string</span> description<span class="token symbol">:text</span> cash<span class="token symbol">:float</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="删除脚手架生成的代码"><a href="#删除脚手架生成的代码" class="headerlink" title="删除脚手架生成的代码"></a>删除脚手架生成的代码</h3><pre class="line-numbers language-ruby"><code class="language-ruby">rails d scaffold <span class="token constant">Users</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="生成Controller与action"><a href="#生成Controller与action" class="headerlink" title="生成Controller与action"></a>生成Controller与action</h3><pre class="line-numbers language-ruby"><code class="language-ruby">rails g controller <span class="token constant">TodoList</span> list delete index
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="删除Controller"><a href="#删除Controller" class="headerlink" title="删除Controller"></a>删除Controller</h3><pre class="line-numbers language-ruby"><code class="language-ruby">rails d controller <span class="token constant">TodoList</span> list delete index
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="生成Model"><a href="#生成Model" class="headerlink" title="生成Model"></a>生成Model</h3><pre class="line-numbers language-ruby"><code class="language-ruby">rails g model <span class="token constant">User</span> name<span class="token symbol">:string</span> email<span class="token symbol">:string</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="删除Model"><a href="#删除Model" class="headerlink" title="删除Model"></a>删除Model</h3><pre class="line-numbers language-ruby"><code class="language-ruby">rails d model <span class="token constant">User</span> name<span class="token symbol">:string</span> email<span class="token symbol">:string</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="添加字段到表"><a href="#添加字段到表" class="headerlink" title="添加字段到表"></a>添加字段到表</h3><pre class="line-numbers language-ruby"><code class="language-ruby">“rails generate migration add_password_digest_to_users password_digest<span class="token symbol">:string</span>”
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="根据Model生成数据库表"><a href="#根据Model生成数据库表" class="headerlink" title="根据Model生成数据库表"></a>根据Model生成数据库表</h3><pre class="line-numbers language-ruby"><code class="language-ruby">rake db<span class="token symbol">:migrate</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
]]></content>
      <categories>
        <category>ruby</category>
      </categories>
  </entry>
  <entry>
    <title>关于Xcode单元测试(XCTest)的一些总结</title>
    <url>/2015/05/04/something-about-xctest/</url>
    <content><![CDATA[<p>单元测试可以让我们快速检测项目接口与一些功能的可用性，这次编写了大量的单元测试，让我对之前的一些疑惑有了一个透彻的理解</p>
<ul>
<li>单元测试中，可以直接import我们项目中的类</li>
<li>想要执行的方法，必须使用test开头，testLogin会被执行，userLogin这样的方法名不会被执行</li>
<li>单元测试没有头文件，一些变量声明，写在interface里面</li>
<li>对于一些变量的初始化，放到setup里面进行</li>
</ul>
<span id="more"></span>

<h2 id="一个简单的单元测试类"><a href="#一个简单的单元测试类" class="headerlink" title="一个简单的单元测试类"></a>一个简单的单元测试类</h2><h5 id="创建单元测试类"><a href="#创建单元测试类" class="headerlink" title="创建单元测试类"></a>创建单元测试类</h5><p><img src="http://ww1.sinaimg.cn/large/6e8de9dbgw1ers0n47wtrj20ka0bygnf.jpg"></p>
<h4 id="一个简单的类"><a href="#一个简单的类" class="headerlink" title="一个简单的类"></a>一个简单的类</h4><pre class="line-numbers language-ruby"><code class="language-ruby"><span class="token comment" spellcheck="true">#import &lt;UIKit/UIKit.h></span>
<span class="token comment" spellcheck="true">#import &lt;XCTest/XCTest.h></span>
<span class="token comment" spellcheck="true">#import "LoginService.h" //引入自定义的类</span>

<span class="token variable">@interface</span> <span class="token class-name">HelloTest</span> <span class="token punctuation">:</span> <span class="token constant">XCTestCase</span>
<span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>
    <span class="token operator">/</span><span class="token operator">/</span>变量声明		
    <span class="token constant">NSInteger</span> count<span class="token punctuation">;</span>
    <span class="token constant">LoginService</span> <span class="token operator">*</span>loginService<span class="token punctuation">;</span>
<span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;</span>

<span class="token variable">@end</span>

<span class="token variable">@implementation</span> <span class="token constant">HelloTest</span>

<span class="token operator">-</span> <span class="token punctuation">(</span>void<span class="token punctuation">)</span>setUp <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>
    <span class="token punctuation">[</span><span class="token keyword">super</span> setUp<span class="token punctuation">]</span><span class="token punctuation">;</span>

    <span class="token operator">/</span><span class="token operator">/</span>初始化
    count <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>

    loginService <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token constant">LoginService</span> alloc<span class="token punctuation">]</span> init<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;</span>

<span class="token operator">-</span> <span class="token punctuation">(</span>void<span class="token punctuation">)</span>tearDown <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>

    <span class="token punctuation">[</span><span class="token keyword">super</span> tearDown<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;</span>

<span class="token operator">-</span> <span class="token punctuation">(</span>void<span class="token punctuation">)</span>testCount
<span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>
    <span class="token function">XCTAssertEqual</span><span class="token punctuation">(</span>count<span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span>@<span class="token string">"count不等于6,count的值为:%ld"</span><span class="token punctuation">,</span><span class="token punctuation">(</span>long<span class="token punctuation">)</span>count<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;</span>

<span class="token operator">-</span> <span class="token punctuation">(</span>void<span class="token punctuation">)</span>testExample <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>

    <span class="token function">XCTAssert</span><span class="token punctuation">(</span><span class="token constant">YES</span><span class="token punctuation">,</span> @<span class="token string">"Pass"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;</span>

<span class="token operator">-</span> <span class="token punctuation">(</span>void<span class="token punctuation">)</span>testPerformanceExample <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>

    <span class="token punctuation">[</span><span class="token keyword">self</span> measureBlock<span class="token punctuation">:</span><span class="token operator">^</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>

    <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;];</span>
<span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;</span>

<span class="token variable">@end</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><strong>cmd+U</strong> 进行执行后会提示我们如下错误,测试通过的方法，会有绿色对号，失败的方法会显示我们写的错误提示<br><img src="http://ww1.sinaimg.cn/large/6e8de9dbgw1ers0vuinl5j20p405jq49.jpg"></p>
<h2 id="XCTest的测试方法大都类似"><a href="#XCTest的测试方法大都类似" class="headerlink" title="XCTest的测试方法大都类似"></a>XCTest的测试方法大都类似</h2><h4 id="XCTAssertGreaterThan"><a href="#XCTAssertGreaterThan" class="headerlink" title="XCTAssertGreaterThan"></a>XCTAssertGreaterThan</h4><pre class="line-numbers language-ruby"><code class="language-ruby"><span class="token comment" spellcheck="true">#判断count是否大于8</span>
<span class="token function">XCTAssertGreaterThan</span><span class="token punctuation">(</span>count<span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span>@<span class="token string">"count is not greater than 8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h4 id="XCTAssertNotEqual"><a href="#XCTAssertNotEqual" class="headerlink" title="XCTAssertNotEqual"></a>XCTAssertNotEqual</h4><pre class="line-numbers language-ruby"><code class="language-ruby"><span class="token comment" spellcheck="true">#判断是否不相等</span>
<span class="token function">XCTAssertNotEqual</span><span class="token punctuation">(</span>count<span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span>@<span class="token string">"they are equal"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h4 id="XCTAssertTrue"><a href="#XCTAssertTrue" class="headerlink" title="XCTAssertTrue"></a>XCTAssertTrue</h4><pre class="line-numbers language-ruby"><code class="language-ruby"><span class="token comment" spellcheck="true">#判断某个表达式是否成立</span>
<span class="token function">XCTAssertTrue</span><span class="token punctuation">(</span>count<span class="token operator">></span><span class="token number">3</span><span class="token punctuation">,</span>@<span class="token string">"count greater than 3"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>运行结果<br><img src="http://ww4.sinaimg.cn/large/6e8de9dbgw1ers16kf52bj210v04jn03.jpg"></p>
<h2 id="对于异步方法的测试-Asynchronous-Testing"><a href="#对于异步方法的测试-Asynchronous-Testing" class="headerlink" title="对于异步方法的测试(Asynchronous Testing)"></a>对于异步方法的测试(Asynchronous Testing)</h2><p>对于block等异步方式执行的方法，在测试的时候，我们要使用，一般的做法都是延迟，<strong>等待block执行完毕再进行检查</strong></p>
<h5 id="主要步骤"><a href="#主要步骤" class="headerlink" title="主要步骤"></a>主要步骤</h5><ul>
<li>声明一个XCTestExpectation</li>
<li>在block中使用fulfill抛出错误</li>
<li>waitForExpectationsWithTimeout进行一个延迟时间设定</li>
</ul>
<pre class="line-numbers language-ruby"><code class="language-ruby"><span class="token comment" spellcheck="true">#import &lt;XCTest/XCTestCase+AsynchronousTesting.h></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>比如上面的loginService</p>
<pre class="line-numbers language-ruby"><code class="language-ruby"><span class="token operator">-</span> <span class="token punctuation">(</span>void<span class="token punctuation">)</span>testLogin
<span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>
    <span class="token comment" spellcheck="true">##声明一个Exception</span>
    <span class="token constant">XCTestExpectation</span> <span class="token operator">*</span>loginException <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token keyword">self</span> expectationWithDescription<span class="token punctuation">:</span>@<span class="token string">"loginError"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

    <span class="token punctuation">[</span>loginService sendLoginWithMobile<span class="token symbol">:TEST_MOBILE</span> andCode<span class="token symbol">:TEST_CODE</span> onComplete<span class="token punctuation">:</span><span class="token operator">^</span><span class="token punctuation">(</span><span class="token constant">NSDictionary</span> <span class="token operator">*</span>jsonDict<span class="token punctuation">,</span> <span class="token constant">NSString</span> <span class="token operator">*</span>jsonString<span class="token punctuation">)</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>
        <span class="token constant">MStatus</span> <span class="token operator">*</span>status <span class="token operator">=</span> <span class="token punctuation">[</span>loginService convertToMStatus<span class="token symbol">:jsonDict</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token function">XCTAssertEqual</span><span class="token punctuation">(</span>status<span class="token punctuation">.</span>returncode<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> @<span class="token string">"login error"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token operator">/</span><span class="token operator">/</span>抛出错误
        <span class="token punctuation">[</span>loginException fulfill<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125; onFailure:^(NSString *msg) &amp;#123;</span>
        <span class="token function">XCTFail</span><span class="token punctuation">(</span>@"login error<span class="token punctuation">:</span><span class="token string">%@",msg);

        //抛出错误
        [loginException fulfill];
    &amp;#125;];

    //延迟两秒执行
    [self waitForExpectationsWithTimeout:2 handler:^(NSError *error) &amp;#123;
        XCTFail(@</span><span class="token string">"time out:%@"</span><span class="token punctuation">,</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;];</span>
<span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
]]></content>
      <categories>
        <category>iOS</category>
      </categories>
  </entry>
  <entry>
    <title>Application Transport Security</title>
    <url>/2015/07/13/application-transport-security-in-ios9/</url>
    <content><![CDATA[<p>In Xcode7 You should add follow keys in <code>Info.plist</code> to allow the http request<br>A detail discuss could fond here<br><a href="https://forums.developer.apple.com/thread/3544">https://forums.developer.apple.com/thread/3544</a></p>
<pre><code>&lt;key&gt;NSAppTransportSecurity&lt;/key&gt;  
&lt;dict&gt;  
     &lt;key&gt;NSAllowsArbitraryLoads&lt;/key&gt;&lt;true/&gt;  
&lt;/dict&gt;  
</code></pre>
]]></content>
  </entry>
  <entry>
    <title>为什么使用Mantle</title>
    <url>/2015/10/08/why-mantle/</url>
    <content><![CDATA[<p>项目地址: <a href="https://github.com/Mantle/Mantle">https://github.com/Mantle/Mantle</a></p>
<p>今年上半年在两个项目中都将Model层替换为Mantle，大大减少了开发中实体转换的时间;选择mantle的初衷是因为看到了大神的blog,里面的应用场景也是在开发中我们经常遇到的情况:<br><a href="http://www.iwangke.me/2014/10/13/Why-Changba-iOS-choose-Mantle/">iWangKe.me - 为什么唱吧iOS 6.0选择了Mantle</a></p>
<h2 id="对比一下"><a href="#对比一下" class="headerlink" title="对比一下"></a>对比一下</h2><pre><code># http://bubbler.labs.douban.com/j/user/wheats

&#123;
  &quot;homepage&quot;: &quot;http://www.douban.com/people/wheats&quot;,
  &quot;icon&quot;: &quot;http://img3.douban.com/icon/u46721592-5.jpg&quot;,
  &quot;userid&quot;: &quot;46721592&quot;,
  &quot;r&quot;: 0,
  &quot;stats&quot;: &#123;
    &quot;board&quot;: 0,
    &quot;bub&quot;: 0,
    &quot;collect&quot;: 0
  &#125;,
  &quot;title&quot;: &quot;welsonla&quot;,
  &quot;uid&quot;: &quot;wheats&quot;
&#125;
</code></pre>
<span id="more"></span>

<p><img src="http://ww1.sinaimg.cn/large/6e8de9dbjw1ewtvrr4eyjj20gp0eqjvh.jpg"></p>
<p><img src="http://ww1.sinaimg.cn/large/6e8de9dbjw1ewtvsjo0s6j20go0f7whk.jpg"></p>
<h2 id="You-should-know"><a href="#You-should-know" class="headerlink" title="You should know:"></a>You should know:</h2><ul>
<li>使用Mantle需要继承MTLModel</li>
<li>如果需要将实体中的某个字段映射成一个实体或者实体的数组，需要继承MTLJSONSerializing</li>
<li>Mantle需要一个字典来讲字典中的字段与实体的字段进行匹配</li>
</ul>
<h2 id="将JSON转换为制定的Model"><a href="#将JSON转换为制定的Model" class="headerlink" title="将JSON转换为制定的Model"></a>将JSON转换为制定的Model</h2><pre><code>MDoubanUser *allModel = [MTLJSONAdapter modelOfClass:[MDoubanUser class] fromJSONDictionary:rstlDict] error:nil]
</code></pre>
<h2 id="将JSON中的数组转换为Model的数组"><a href="#将JSON中的数组转换为Model的数组" class="headerlink" title="将JSON中的数组转换为Model的数组"></a>将JSON中的数组转换为Model的数组</h2><pre><code>NSArray *users = [MTLJSONAdapter modelsOfClass:[MDoubanUser class] fromJSONArray:userArray error:nil];
</code></pre>
<h2 id="将某个字段对应到某个实体"><a href="#将某个字段对应到某个实体" class="headerlink" title="将某个字段对应到某个实体"></a>将某个字段对应到某个实体</h2><pre><code>+(NSValueTransformer *)JSONTransformerForKey:(NSString *)key&#123;

  if ([key isEqualToString:@&quot;stats&quot;]) &#123;
      #假设上诉到json中的stats创建了一个单独的实体类为MStats,
      return [MTLJSONAdapter dictionaryTransformerWithModelClass:[MStats class]];
  &#125;else if([key isEqualToString:@&quot;books&quot;])&#123;
      #假设中json中有一个books数组，并有对应的实体MBook
      return return [MTLJSONAdapter arrayTransformerWithModelClass:[MBook class]];;
  &#125;
  return nil;
&#125;
</code></pre>
<h2 id="自定义转换"><a href="#自定义转换" class="headerlink" title="自定义转换"></a>自定义转换</h2><p>自定义转换只要定义一个字段名+JSONTransformer结尾的方法，就会执行我们自定义的转换,比如时间格式化，对某些字符进行一些操作处理</p>
<pre><code># 将uid前面加上&quot;Author&quot;
+ (NSValueTransformer *)uidJSONTransformer&#123;
    return [MTLValueTransformer transformerUsingForwardBlock:^id(NSString *uid, BOOL *success, NSError *__autoreleasing *error) &#123;
        return [@&quot;Author: &quot; stringByAppendingString:uid];
    &#125;];
&#125;
</code></pre>
<h2 id="多个字段对应"><a href="#多个字段对应" class="headerlink" title="多个字段对应"></a>多个字段对应</h2><p>在项目中，经常遇到，接口A返回的用户id字段说uid,接口B返回的用户字段是ID，这种情况我们只需要中Model中将两个字段存到一个数组绑定到同一个属性上就可以了</p>
<pre><code>+ (NSDictionary *)JSONKeyPathsByPropertyKey
&#123;
    return @&#123;
        @&quot;uid&quot;:@[@&quot;uid&quot;,@&quot;ID&quot;],
        @&quot;userid&quot;:@&quot;userid&quot;,
        @&quot;stats&quot;:@&quot;stats&quot;,
        @&quot;title&quot;:@&quot;title&quot;,
        @&quot;r&quot;:@&quot;r&quot;,
        @&quot;homepage&quot;:@&quot;homepage&quot;,
        @&quot;icon&quot;:@&quot;icon&quot;
    &#125;;
&#125;
</code></pre>
<h2 id="将实体中的值封装成一个dictionary，方便接口传输"><a href="#将实体中的值封装成一个dictionary，方便接口传输" class="headerlink" title="将实体中的值封装成一个dictionary，方便接口传输"></a>将实体中的值封装成一个dictionary，方便接口传输</h2><pre><code>#使用全部的字段
NSDictionary *params = [user dictionaryValue];

#使用部分的字段
NSDictionary *params = [address dictionaryWithValuesForKeys:@[@&quot;uid&quot;,@&quot;stats&quot;,@&quot;homepage&quot;]];
</code></pre>
<h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>在项目的开发过程中，我抽时间做了一个小工具，可以方便的将JSON转换为Mantle支持的Model类，希望对你们有帮助</p>
<p>Source: <a href="https://github.com/TimeBots/ModelBot">https://github.com/TimeBots/ModelBot</a><br>Download: <a href="https://github.com/TimeBots/ModelBot/releases/download/0.3.0/ModelBot.0.3.0.zip">ModelBot Download</a></p>
]]></content>
      <categories>
        <category>iOS</category>
      </categories>
  </entry>
  <entry>
    <title>从Objective-c迁移到Swift的一些坑</title>
    <url>/2016/01/27/Objective-c-to-Swift/</url>
    <content><![CDATA[<h3 id="NSString-to-String"><a href="#NSString-to-String" class="headerlink" title="NSString to String"></a>NSString to String</h3><pre class="line-numbers language-swift"><code class="language-swift">#<span class="token builtin">ObjC</span>
<span class="token builtin">NSString</span> <span class="token operator">*</span>notice

#<span class="token builtin">Swift</span>
<span class="token keyword">var</span> notice<span class="token punctuation">:</span><span class="token builtin">String</span><span class="token operator">?</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="NSArray-NSMutableArray-to-Array"><a href="#NSArray-NSMutableArray-to-Array" class="headerlink" title="NSArray,NSMutableArray to Array"></a>NSArray,NSMutableArray to Array</h3><pre class="line-numbers language-swift"><code class="language-swift">#<span class="token number">1</span><span class="token punctuation">.</span> 声明
#<span class="token builtin">ObjC</span>
<span class="token builtin">NSMutableArray</span> <span class="token operator">*</span>listArray <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token builtin">NSMutableArray</span> array<span class="token punctuation">]</span><span class="token punctuation">;</span>

#<span class="token builtin">Swift</span>
<span class="token keyword">var</span> listArray<span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token builtin">String</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">Array</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//必须带参数类型</span>
<span class="token keyword">var</span> listArray<span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token builtin">AnyObject</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">Array</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

#<span class="token number">2</span><span class="token punctuation">.</span> 增加元素
#<span class="token builtin">ObjC</span>
<span class="token punctuation">[</span>listArray addObject<span class="token punctuation">:</span>@<span class="token string">"foo"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

#<span class="token builtin">Swift</span>
listArray<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"foo"</span><span class="token punctuation">)</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="NSRange-gt-Range"><a href="#NSRange-gt-Range" class="headerlink" title="NSRange-&gt;Range"></a>NSRange-&gt;Range</h3><pre class="line-numbers language-swift"><code class="language-swift">#<span class="token builtin">ObjC</span>
<span class="token builtin">NSRange</span> range <span class="token operator">=</span> <span class="token function">NSMakeRange</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span>

#<span class="token builtin">Swift</span>
<span class="token function">Range</span><span class="token punctuation">(</span>start<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> end<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">)</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="NSDictionary-NSmutableDictionary-to-Dictionary"><a href="#NSDictionary-NSmutableDictionary-to-Dictionary" class="headerlink" title="NSDictionary,NSmutableDictionary  to Dictionary"></a>NSDictionary,NSmutableDictionary  to Dictionary</h1><pre class="line-numbers language-swift"><code class="language-swift">#<span class="token builtin">ObjC</span>
<span class="token builtin">NSMutableDictionary</span> <span class="token operator">*</span>score <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token builtin">NSMutableDictionary</span> dictionary<span class="token punctuation">]</span><span class="token punctuation">;</span>

#<span class="token builtin">Swift</span>
<span class="token keyword">var</span> score0<span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token builtin">String</span><span class="token punctuation">:</span><span class="token builtin">String</span><span class="token punctuation">]</span><span class="token operator">?</span>
<span class="token keyword">var</span> score1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token builtin">String</span><span class="token punctuation">:</span><span class="token builtin">String</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">var</span> score2 <span class="token operator">=</span> <span class="token builtin">Dictionary</span><span class="token operator">&lt;</span><span class="token builtin">String</span><span class="token punctuation">,</span><span class="token builtin">String</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">var</span> score3 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">]</span>

#<span class="token builtin">ObjC</span>
<span class="token builtin">NSDictionary</span> <span class="token operator">*</span>person <span class="token operator">=</span> @<span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>@<span class="token string">"name"</span><span class="token punctuation">:</span>@<span class="token string">"Single Dog"</span><span class="token punctuation">,</span>@<span class="token string">"Skill"</span><span class="token punctuation">:</span>@<span class="token string">"Swift"</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">;</span>
person<span class="token punctuation">[</span>@“age”<span class="token punctuation">]</span> <span class="token operator">=</span> @“<span class="token number">28</span>”<span class="token punctuation">;</span>

#<span class="token builtin">Swift</span>
<span class="token keyword">var</span> person <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"name"</span><span class="token punctuation">:</span><span class="token string">"Single Dog"</span><span class="token punctuation">,</span><span class="token string">"Skill"</span><span class="token punctuation">:</span><span class="token string">"Swift"</span><span class="token punctuation">]</span>
person<span class="token punctuation">[</span><span class="token string">"age"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"28"</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="Random"><a href="#Random" class="headerlink" title="Random"></a>Random</h3><pre class="line-numbers language-swift"><code class="language-swift">#<span class="token builtin">ObjC</span>
arc4random<span class="token operator">%</span><span class="token number">255</span>

#<span class="token builtin">Swift</span>
<span class="token function">arc4random_uniform</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span>
<span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">255</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="Selector"><a href="#Selector" class="headerlink" title="Selector"></a>Selector</h3><p>感觉Selector的方式不如ObjC那样有方法提示，容易写错，效率反而不如之前</p>
<pre class="line-numbers language-swift"><code class="language-swift">#<span class="token builtin">ObjC</span>
<span class="token constant">SEL</span> callback <span class="token operator">=</span> @<span class="token function">selector</span><span class="token punctuation">(</span>uploadCallback<span class="token punctuation">:</span><span class="token punctuation">)</span>

#<span class="token builtin">Swift</span>
<span class="token function">Selector</span><span class="token punctuation">(</span><span class="token string">"uploadCallback:"</span><span class="token punctuation">)</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="id-to-AnyObject"><a href="#id-to-AnyObject" class="headerlink" title="id to AnyObject"></a>id to AnyObject</h3><pre class="line-numbers language-swift"><code class="language-swift">#<span class="token builtin">ObjC</span>
id sender

#<span class="token builtin">Swift</span>
<span class="token keyword">var</span> sender<span class="token punctuation">:</span><span class="token builtin">Anyobject</span><span class="token operator">?</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="三元运算缩写"><a href="#三元运算缩写" class="headerlink" title="三元运算缩写"></a>三元运算缩写</h3><pre class="line-numbers language-swift"><code class="language-swift">#<span class="token builtin">ObjC</span>
a <span class="token operator">?</span> <span class="token punctuation">:</span> b

#<span class="token builtin">Swift</span>
a <span class="token operator">?</span><span class="token operator">?</span> b
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="枚举"><a href="#枚举" class="headerlink" title="枚举"></a>枚举</h3><pre class="line-numbers language-swift"><code class="language-swift">#<span class="token builtin">ObjC</span>
typedef <span class="token function">NS_ENUM</span><span class="token punctuation">(</span><span class="token builtin">NSInteger</span><span class="token punctuation">,</span><span class="token builtin">LocationState</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>
    <span class="token builtin">LocationStateStart</span><span class="token punctuation">,</span>
    <span class="token builtin">LocationStateFinish</span><span class="token punctuation">,</span>
    <span class="token builtin">LocationStateFail</span>
<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">;</span>

#<span class="token builtin">Swift</span>
<span class="token keyword">enum</span> <span class="token builtin">LocationState</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> <span class="token builtin">LocationStart</span><span class="token punctuation">,</span> <span class="token builtin">LocationFinish</span><span class="token punctuation">,</span> <span class="token builtin">LocationFail</span>
<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="Todo-List"><a href="#Todo-List" class="headerlink" title="Todo List"></a>Todo List</h1><ol>
<li>Block to Closure</li>
<li>DateFormatter</li>
<li>nil value check<br>……</li>
</ol>
<p>遇到继续添加,未完待续……</p>
]]></content>
  </entry>
  <entry>
    <title>2016年2月29日</title>
    <url>/2016/02/29/the-day-of-2-29/</url>
    <content><![CDATA[<p>仅为今天，特意发博一篇</p>
]]></content>
  </entry>
  <entry>
    <title>Mac Tips</title>
    <url>/2016/03/23/Mac-Tips/</url>
    <content><![CDATA[<p>一些常用的命令备忘</p>
<h4 id="显示隐藏文件"><a href="#显示隐藏文件" class="headerlink" title="显示隐藏文件"></a>显示隐藏文件</h4><pre class="line-numbers language-js"><code class="language-js">defaults write com<span class="token punctuation">.</span>apple<span class="token punctuation">.</span>finder AppleShowAllFiles <span class="token operator">-</span>bool <span class="token boolean">true</span><span class="token punctuation">;</span>killall Finder
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h4 id="不显示隐藏文件"><a href="#不显示隐藏文件" class="headerlink" title="不显示隐藏文件"></a>不显示隐藏文件</h4><pre class="line-numbers language-js"><code class="language-js">defaults write com<span class="token punctuation">.</span>apple<span class="token punctuation">.</span>finder AppleShowAllFiles <span class="token operator">-</span>bool <span class="token boolean">false</span><span class="token punctuation">;</span>killall Finder
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h4 id="10-11后开启第三方硬盘的Trim"><a href="#10-11后开启第三方硬盘的Trim" class="headerlink" title="10.11后开启第三方硬盘的Trim"></a>10.11后开启第三方硬盘的Trim</h4><pre class="line-numbers language-js"><code class="language-js">sudo trimforce enable
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h4 id="释放不活跃的内存"><a href="#释放不活跃的内存" class="headerlink" title="释放不活跃的内存"></a>释放不活跃的内存</h4><pre class="line-numbers language-js"><code class="language-js">sudo purge
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h4 id="允许任何来源的软件进行安装"><a href="#允许任何来源的软件进行安装" class="headerlink" title="允许任何来源的软件进行安装"></a>允许任何来源的软件进行安装</h4><pre class="line-numbers language-js"><code class="language-js">sudo spctl <span class="token operator">--</span>master<span class="token operator">-</span>disable
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
]]></content>
      <categories>
        <category>iOS</category>
      </categories>
  </entry>
  <entry>
    <title>iOS Tips</title>
    <url>/2016/03/23/iOS-Tips/</url>
    <content><![CDATA[<p>Code Snippets</p>
<h5 id="去除空白TableViewCell的分割线"><a href="#去除空白TableViewCell的分割线" class="headerlink" title="去除空白TableViewCell的分割线"></a>去除空白TableViewCell的分割线</h5><pre class="line-numbers language-js"><code class="language-js">listTable<span class="token punctuation">.</span>tableFooterView <span class="token operator">=</span> <span class="token punctuation">[</span>UIView <span class="token keyword">new</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h5 id="让header与cell一起滚动，不在顶部悬停"><a href="#让header与cell一起滚动，不在顶部悬停" class="headerlink" title="让header与cell一起滚动，不在顶部悬停"></a>让header与cell一起滚动，不在顶部悬停</h5><pre class="line-numbers language-js"><code class="language-js">设置为UITableViewStyleGrouped
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<span id="more"></span>

<h5 id="在拼音打字的时候，不让textField响应Change"><a href="#在拼音打字的时候，不让textField响应Change" class="headerlink" title="在拼音打字的时候，不让textField响应Change"></a>在拼音打字的时候，不让textField响应Change</h5><pre class="line-numbers language-js"><code class="language-js"><span class="token comment" spellcheck="true">//MARK: textfield notification</span>
<span class="token operator">-</span> <span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>textFieldDidChange<span class="token punctuation">:</span><span class="token punctuation">(</span>NSNotification <span class="token operator">*</span><span class="token punctuation">)</span>notification<span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>
   UITextRange <span class="token operator">*</span>selectedRange <span class="token operator">=</span> <span class="token punctuation">[</span>self<span class="token punctuation">.</span>searchField markedTextRange<span class="token punctuation">]</span><span class="token punctuation">;</span>
   NSString <span class="token operator">*</span> newText <span class="token operator">=</span> <span class="token punctuation">[</span>self<span class="token punctuation">.</span>textField textInRange<span class="token punctuation">:</span>selectedRange<span class="token punctuation">]</span><span class="token punctuation">;</span>

   <span class="token comment" spellcheck="true">//获取高亮部分,拼音状态不进行搜索</span>
   <span class="token keyword">if</span><span class="token punctuation">(</span>newText<span class="token punctuation">.</span>length<span class="token operator">></span><span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>
       <span class="token keyword">return</span><span class="token punctuation">;</span>
   <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>
……
<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h5 id="将数组中的Model的某个字段合并成String"><a href="#将数组中的Model的某个字段合并成String" class="headerlink" title="将数组中的Model的某个字段合并成String"></a>将数组中的Model的某个字段合并成String</h5><pre class="line-numbers language-js"><code class="language-js">#假设listArray中是User实体，有一个Name字段
<span class="token punctuation">[</span><span class="token punctuation">[</span>listArray valueForKey<span class="token punctuation">:</span>@“Name”<span class="token punctuation">]</span> componentsJoinedByString<span class="token punctuation">:</span>@<span class="token string">"\n"</span><span class="token punctuation">]</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h5 id="设置NavigationBarItem的Title，可以让其与Tabbar的Title区分开"><a href="#设置NavigationBarItem的Title，可以让其与Tabbar的Title区分开" class="headerlink" title="设置NavigationBarItem的Title，可以让其与Tabbar的Title区分开"></a>设置NavigationBarItem的Title，可以让其与Tabbar的Title区分开</h5><pre class="line-numbers language-js"><code class="language-js">self<span class="token punctuation">.</span>navigationItem<span class="token punctuation">.</span>title <span class="token operator">=</span> @“Home”<span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h5 id="通过设置Cell的Custom-Insets来替代自定义View的分割线"><a href="#通过设置Cell的Custom-Insets来替代自定义View的分割线" class="headerlink" title="通过设置Cell的Custom Insets来替代自定义View的分割线"></a>通过设置Cell的Custom Insets来替代自定义View的分割线</h5><p><img src="/uploads/cell-insets.png"></p>
<h3 id="Xcode"><a href="#Xcode" class="headerlink" title="Xcode"></a>Xcode</h3><ol>
<li>按住Shift可以一次选择多个AutoLayout约束</li>
<li>按住Ctrl,再点按Alt可以Toggle设置是否添加Margin</li>
<li>Ctrl+Command+↑切换h与m文件（Objective-C使用）</li>
<li>给类改名，并修改相关引用地方的类名<br><img src="/uploads/xcode-rename.png"></li>
</ol>
<p><img src="/uploads/xcode-rename-relation.png"></p>
<h4 id="屏蔽Xcode8自带log"><a href="#屏蔽Xcode8自带log" class="headerlink" title="屏蔽Xcode8自带log"></a>屏蔽Xcode8自带log</h4><pre class="line-numbers language-ruby"><code class="language-ruby"><span class="token punctuation">[</span>http<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>stackoverflow<span class="token punctuation">.</span>com<span class="token operator">/</span>questions<span class="token operator">/</span><span class="token number">37800790</span><span class="token operator">/</span>hide<span class="token operator">-</span>strange<span class="token operator">-</span>unwanted<span class="token operator">-</span>xcode<span class="token number">-8</span><span class="token operator">-</span>logs<span class="token punctuation">]</span><span class="token punctuation">(</span>http<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>stackoverflow<span class="token punctuation">.</span>com<span class="token operator">/</span>questions<span class="token operator">/</span><span class="token number">37800790</span><span class="token operator">/</span>hide<span class="token operator">-</span>strange<span class="token operator">-</span>unwanted<span class="token operator">-</span>xcode<span class="token number">-8</span><span class="token operator">-</span>logs<span class="token punctuation">)</span>
<span class="token number">1</span><span class="token operator">-</span> <span class="token constant">From</span> <span class="token constant">Xcode</span> menu open<span class="token punctuation">:</span> <span class="token constant">Product</span> <span class="token operator">></span> <span class="token constant">Scheme</span> <span class="token operator">></span> <span class="token constant">Edit</span> <span class="token constant">Scheme</span>

<span class="token number">2</span><span class="token operator">-</span> <span class="token constant">On</span> your <span class="token constant">Environment</span> <span class="token constant">Variables</span> set <span class="token constant">OS_ACTIVITY_MODE</span> <span class="token operator">=</span> disable
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="Xcode8-注释快捷键"><a href="#Xcode8-注释快捷键" class="headerlink" title="Xcode8 注释快捷键"></a>Xcode8 注释快捷键</h3><pre class="line-numbers language-ruby"><code class="language-ruby"><span class="token constant">Option</span><span class="token operator">+</span><span class="token constant">Command</span><span class="token operator">+</span><span class="token operator">/</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
]]></content>
      <categories>
        <category>iOS</category>
      </categories>
  </entry>
  <entry>
    <title>配置多个SSH Keygen</title>
    <url>/2016/12/08/multiple-ssh-key-config/</url>
    <content><![CDATA[<pre class="line-numbers language-ruby"><code class="language-ruby">ssh<span class="token operator">-</span>keygen <span class="token operator">-</span>t rsa <span class="token operator">-</span><span class="token constant">C</span> <span class="token string">"YourMail@github.com"</span> <span class="token operator">-</span>f <span class="token operator">~</span><span class="token operator">/</span><span class="token punctuation">.</span>ssh<span class="token operator">/</span>github_rsa
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h2 id="添加到私钥列表"><a href="#添加到私钥列表" class="headerlink" title="添加到私钥列表"></a>添加到私钥列表</h2><pre class="line-numbers language-ruby"><code class="language-ruby">ssh<span class="token operator">-</span>add <span class="token operator">~</span><span class="token operator">/</span><span class="token punctuation">.</span>ssh<span class="token operator">/</span>id_rsa
ssh<span class="token operator">-</span>add <span class="token operator">~</span><span class="token operator">/</span><span class="token punctuation">.</span>ssh<span class="token operator">/</span>github_rsa
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h2 id="查看私钥列表"><a href="#查看私钥列表" class="headerlink" title="查看私钥列表"></a>查看私钥列表</h2><pre class="line-numbers language-ruby"><code class="language-ruby"><span class="token comment" spellcheck="true"># 可以通过 ssh-add -l 来确私钥列表</span>
ssh<span class="token operator">-</span>add <span class="token operator">-</span>l

<span class="token comment" spellcheck="true"># 可以通过 ssh-add -D 来清空私钥列表</span>
ssh<span class="token operator">-</span>add <span class="token operator">-</span><span class="token constant">D</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="添加配置"><a href="#添加配置" class="headerlink" title="添加配置"></a>添加配置</h2><pre class="line-numbers language-ruby"><code class="language-ruby">cd <span class="token operator">~</span><span class="token operator">/</span><span class="token punctuation">.</span>ssh
touch config
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h2 id="添加配置内容"><a href="#添加配置内容" class="headerlink" title="添加配置内容"></a>添加配置内容</h2><pre class="line-numbers language-ruby"><code class="language-ruby"><span class="token constant">Host</span> github<span class="token punctuation">.</span>com
    <span class="token constant">HostName</span> github<span class="token punctuation">.</span>com
    <span class="token constant">PreferredAuthentications</span> publickey <span class="token comment" spellcheck="true">#认证类型为私钥</span>
    <span class="token constant">IdentityFile</span> <span class="token operator">~</span><span class="token operator">/</span><span class="token punctuation">.</span>ssh<span class="token operator">/</span>github_rsa
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="添加github-rsa-pub内容到github的SSH-KEY列表"><a href="#添加github-rsa-pub内容到github的SSH-KEY列表" class="headerlink" title="添加github_rsa.pub内容到github的SSH KEY列表"></a>添加github_rsa.pub内容到github的SSH KEY列表</h2><pre class="line-numbers language-ruby"><code class="language-ruby">cat <span class="token operator">~</span><span class="token operator">/</span><span class="token punctuation">.</span>ssh<span class="token operator">/</span>github_rsa<span class="token punctuation">.</span>pub
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><pre class="line-numbers language-ruby"><code class="language-ruby">⇒  ssh <span class="token operator">-</span><span class="token constant">T</span> git<span class="token variable">@github</span><span class="token punctuation">.</span>com

<span class="token comment" spellcheck="true"># 会提示， 说明已经配置成功</span>
<span class="token constant">Hi</span> welsonla<span class="token operator">!</span> <span class="token constant">You</span>'ve successfully authenticated<span class="token punctuation">,</span> but <span class="token constant">GitHub</span> does <span class="token keyword">not</span> provide shell access<span class="token punctuation">.</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><p><a href="https://my.oschina.net/stefanzhlg/blog/529403">https://my.oschina.net/stefanzhlg/blog/529403</a><br><a href="http://riny.net/2014/git-ssh-key/">http://riny.net/2014/git-ssh-key/</a></p>
]]></content>
  </entry>
  <entry>
    <title>heroku command</title>
    <url>/2017/07/13/heroku-command/</url>
    <content><![CDATA[<p>记录一些经常使用到的一些heroku管理命令</p>
<h1 id="login"><a href="#login" class="headerlink" title="login"></a>login</h1><pre><code>heroku login
</code></pre>
<h1 id="show-apps-info"><a href="#show-apps-info" class="headerlink" title="show apps info"></a>show apps info</h1><p>展示你app的一些信息</p>
<pre><code>heroku apps:info
</code></pre>
<h1 id="deploy"><a href="#deploy" class="headerlink" title="deploy"></a>deploy</h1><p>推送代码并部署</p>
<pre><code>git push heroku  master
</code></pre>
<h1 id="ssh"><a href="#ssh" class="headerlink" title="ssh"></a>ssh</h1><p>远程到你app目录项目，可以操作远程的一些文件，相当于ssh登录</p>
<pre><code>heroku run bash
</code></pre>
<h1 id="log"><a href="#log" class="headerlink" title="log"></a>log</h1><p>查看实时输出的log</p>
<pre><code>heroku logs -t
</code></pre>
]]></content>
      <categories>
        <category>工具控</category>
      </categories>
  </entry>
  <entry>
    <title>使用Fastlane</title>
    <url>/2017/07/13/using-fastlane/</url>
    <content><![CDATA[<h2 id="相关介绍"><a href="#相关介绍" class="headerlink" title="相关介绍"></a>相关介绍</h2><p>Fastlane最初由KrauseFx(<a href="https://github.com/KrauseFx">Github</a>, <a href="https://twitter.com/krausefx">Twitter</a>) 发起，现在已经有百位代码和插件贡献者，丰富的Action与Plugin可以满足众多个性化的需求，目前官方主要的工具如下(来自fastlane项目Github页面), 但不仅限于此。</p>
<p><img src="/uploads/WX20170525-112539.png"></p>
<h2 id="相关文档"><a href="#相关文档" class="headerlink" title="相关文档"></a>相关文档</h2><p><a href="https://github.com/fastlane/fastlane">Github主页</a><br><a href="https://rubygems.org/gems/fastlane">Gem主页</a><br><a href="https://docs.fastlane.tools/">官方文档</a></p>
<h2 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h2><p>Fastlane是用ruby写的一套程序，最简单的方式是使用gem的方式来安装</p>
<pre><code>gem install fastlane
</code></pre>
<h2 id="初始化你的项目"><a href="#初始化你的项目" class="headerlink" title="初始化你的项目"></a>初始化你的项目</h2><p>创建Gemfile主要是为了让其他人安装的Gem保持统一，Cocoapods之后也可以用Gemfile来做统一的管理</p>
<pre><code>bundle init
echo &#39;gem &quot;fastlane&quot;&#39; &gt;&gt; Gemfile
bundle install
</code></pre>
<h2 id="init"><a href="#init" class="headerlink" title="init"></a>init</h2><p>init期间会让你输入AppleID，如果该应用存在，Fastlane会通过iTunesConnect拉取应用的metadata和所有的App截图，如果不存在，会提示你是否在iTunesConnect中创建一个新的App</p>
<pre><code>fastlane init
</code></pre>
<p>安装完之后，会在项目中产生一个fastlane目录，使用<code>tree</code>命令查看结构如下</p>
<pre><code>├── Appfile
├── Deliverfile
├── Fastfile
├── README.md
├── metadata
│   ├── some metadata file ...
├── report.xml
└── screenshots
    └── README.txt
</code></pre>
<p><strong>Appfile</strong> 记录了你appid，apple id，team id等信息<br><strong>Deliverfile</strong> 记录了bundle与appleid信息<br><strong>Fastfile</strong> 是我们打包使用到的主要文件，这里面可以自定义你的流程<br><strong>metadata</strong> 是通过iTunesConnect获取到的app的信息文件，包括介绍<br><strong>screenshots</strong> 保存了所有的截图信息</p>
<h2 id="一个简单的Fastfile流程"><a href="#一个简单的Fastfile流程" class="headerlink" title="一个简单的Fastfile流程"></a>一个简单的Fastfile流程</h2><pre><code>lane :beta do
  git_pull
  increment_build_number 				#build number更新
    cocoapods 							#安装cocoapods 
     gym(
       scheme: &quot;MyScheme&quot;,          #主Target
       output_directory:&quot;./build&quot;,  #导出目录
       export_method: &quot;development&quot; #导出方式
    )
      sh &quot;./customScript.sh&quot; 			#执行你的脚本文件或Shell命令
end
</code></pre>
<p>更多关于gym的配置参数，可以参见 <a href="https://docs.fastlane.tools/actions/#gym">Actions - fastlane docs</a></p>
<p><strong>每个Action下面都有Example和Parameters，默认是收起状态</strong> </p>
<p><img src="/uploads/WX20170605-134929.png"></p>
<p> 通过执行<code>fastlane beta</code> 就可以进行打包，并且<code>dYSM</code>和<code>ipa</code>文件会导出到我们指定的项目下的<code>build</code>目录下面</p>
<pre><code>fastlane beta
</code></pre>
<h3 id="fastlane文件结构"><a href="#fastlane文件结构" class="headerlink" title="fastlane文件结构"></a>fastlane文件结构</h3><pre><code>fastlane_version &quot;2.44.1&quot;

default_platform :ios

platform :ios do

  #1. 开始前的一些操作，如代码更新(git_pull)
  before_all do
  end


  #2. 打包一个测试版本
  desc &quot;build a beta version&quot;
  lane :beta do

    gym(
      export_method: &quot;ad-hoc&quot;,
      output_directory: &quot;./build&quot;,
    ) 
  end

  #3. 打包一个线上版本，并上传
  lane :release do
    gym(
         export_method: &quot;app-store&quot;
    )
    deliver(force: true)
  end

  #4.打包结束操作
  after_all do |lane|
      #打开导出目录
    sh &quot;open ./build&quot;
  end

  #5. 捕获错误
  error do |lane, exception|
  end
end
</code></pre>
<h2 id="一些常用命令"><a href="#一些常用命令" class="headerlink" title="一些常用命令"></a>一些常用命令</h2><pre><code># 列出现有的所有action
fastlane actions

# 列出所有lane任务
fastlane list

# 创建一个新的Action
fastlane new_action

# 打印环境变量，Fastfile中可以`ENV[&#39;PWD&#39;]`使用这些变量
fastlane env

# 显示本机Provision文件
security find-identity -v -p codesigning
</code></pre>
<h2 id="常见问题可以参见或官方issues"><a href="#常见问题可以参见或官方issues" class="headerlink" title="常见问题可以参见或官方issues"></a>常见问题可以参见或官方issues</h2><p><a href="https://docs.fastlane.tools/codesigning/troubleshooting/">https://docs.fastlane.tools/codesigning/troubleshooting/</a><br><a href="https://github.com/fastlane/fastlane/issues">Issues · fastlane&#x2F;fastlane · GitHub</a></p>
<h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><p><a href="https://github.com/fastlane/fastlane">Fastlane</a><br><a href="https://rubygems.org/gems/fastlane">Fastlane对应的Gem主页</a><br><a href="https://docs.fastlane.tools/">Fastlane官方文档</a><br><a href="http://www.jianshu.com/p/1aebb0854c78">Fastlane实战（一）：移动开发自动化之道</a><br><a href="http://www.jianshu.com/p/0520192c9bd7">Fastlane实战（二）：Action和Plugin机制</a><br><a href="http://www.jianshu.com/p/faae6f95cbd8">Fastlane实战（五）：高级用法</a><br><a href="https://docs.fastlane.tools/actions/#building">fastlane actions</a><br><a href="https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Advanced.md">Advanced fastlane</a>  </p>
]]></content>
      <categories>
        <category>自动化</category>
      </categories>
  </entry>
  <entry>
    <title>Xcode BuildNumber 自动更新</title>
    <url>/2017/08/10/Xcode-buildid-autoincrement/</url>
    <content><![CDATA[<p>最近为了区分发包的id，从晚上找了一段代码<br>原理就是，先用PlistBuddy获取当前的buildid，之后+1，然后再更新plist文件</p>
<pre class="line-numbers language-ruby"><code class="language-ruby">buildNumber<span class="token operator">=</span>$<span class="token punctuation">(</span><span class="token operator">/</span>usr<span class="token operator">/</span>libexec<span class="token operator">/</span><span class="token constant">PlistBuddy</span> <span class="token operator">-</span>c <span class="token string">"Print CFBundleVersion"</span> <span class="token string">"$&amp;#123;PROJECT_DIR&amp;#125;/$&amp;#123;INFOPLIST_FILE&amp;#125;"</span><span class="token punctuation">)</span>
buildNumber<span class="token operator">=</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token variable">$buildNumber</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token operator">/</span>usr<span class="token operator">/</span>libexec<span class="token operator">/</span><span class="token constant">PlistBuddy</span> <span class="token operator">-</span>c <span class="token string">"Set :CFBundleVersion $buildNumber"</span> <span class="token string">"$&amp;#123;PROJECT_DIR&amp;#125;/$&amp;#123;INFOPLIST_FILE&amp;#125;"</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>From: <a href="https://gist.github.com/sekati/3172554">https://gist.github.com/sekati/3172554</a></p>
]]></content>
      <categories>
        <category>iOS</category>
      </categories>
  </entry>
  <entry>
    <title>iTerm2 with powerline theme</title>
    <url>/2019/06/13/iterm-with-powerline-theme/</url>
    <content><![CDATA[<h3 id="确保已经安装了oh-my-zsh"><a href="#确保已经安装了oh-my-zsh" class="headerlink" title="确保已经安装了oh-my-zsh"></a>确保已经安装了oh-my-zsh</h3><p><a href="https://github.com/robbyrussell/oh-my-zsh">https://github.com/robbyrussell/oh-my-zsh</a></p>
<h3 id="安装-oh-my-zsh-powerline-theme"><a href="#安装-oh-my-zsh-powerline-theme" class="headerlink" title="安装 oh-my-zsh-powerline-theme"></a>安装 oh-my-zsh-powerline-theme</h3><p><a href="https://github.com/jeremyFreeAgent/oh-my-zsh-powerline-theme">https://github.com/jeremyFreeAgent/oh-my-zsh-powerline-theme</a></p>
<pre><code>cd ~/.oh-my-zsh/themes
git clone git@github.com:jeremyFreeAgent/oh-my-zsh-powerline-theme.git

#更新submodule,进行powerline-fonts安装
cd oh-my-zsh-powerline-theme
git submodule init
git submodule update

#安装
./install_in_omz.sh
</code></pre>
<h3 id="更改iterm字体"><a href="#更改iterm字体" class="headerlink" title="更改iterm字体"></a>更改iterm字体</h3><p>iTerm2 – Preferences – Profiles – Text<br>找到Font，点击Change Font，将字体改为<code>Fira mono for powerline</code>, 字号14pt</p>
<h3 id="修改zsh配置"><a href="#修改zsh配置" class="headerlink" title="修改zsh配置"></a>修改zsh配置</h3><p>打开<code>~/.zshrc</code>文件，修改<code>ZSH_THEME&quot;</code>为<code>powerline</code></p>
<p>添加如下配置</p>
<pre><code>POWERLINE_RIGHT_B=&quot;&quot;  
POWERLINE_RIGHT_A=&quot;date&quot;  
POWERLINE_RIGHT_A_COLOR_FRONT=&quot;black&quot;  
POWERLINE_RIGHT_A_COLOR_BACK=&quot;red&quot;  
POWERLINE_HIDE_HOST_NAME=&quot;true&quot;
POWERLINE_PATH=&quot;short&quot;
POWERLINE_SHORT_HOST_NAME=&quot;true&quot;
POWERLINE_DETECT_SSH=&quot;true&quot;
POWERLINE_GIT_CLEAN=&quot;✔&quot;
POWERLINE_GIT_DIRTY=&quot;✘&quot;
POWERLINE_GIT_ADDED=&quot;%F&#123;green&#125;✚%F&#123;black&#125;&quot;
POWERLINE_GIT_MODIFIED=&quot;%F&#123;blue&#125;✹%F&#123;black&#125;&quot;
POWERLINE_GIT_DELETED=&quot;%F&#123;red&#125;✖%F&#123;black&#125;&quot;
POWERLINE_GIT_UNTRACKED=&quot;%F&#123;yellow&#125;✭%F&#123;black&#125;&quot;
POWERLINE_GIT_RENAMED=&quot;➜&quot;
POWERLINE_GIT_UNMERGED=&quot;═&quot;
</code></pre>
<h3 id="最终效果"><a href="#最终效果" class="headerlink" title="最终效果"></a>最终效果</h3><p><img src="/uploads/powerline.png" alt="/uploads/powerline.png"></p>
]]></content>
      <categories>
        <category>工具控</category>
      </categories>
  </entry>
  <entry>
    <title>将 ReactNative 的默认终端改为 iTerm2</title>
    <url>/2018/05/30/let-react-native-shell-open-in-iterm/</url>
    <content><![CDATA[<p>自己平时使用iTerm2作为主力的终端，ReactNative的默认打开终端是系统自带的Terminal，这样就会经常存在同时开启两个终端软件的情况，搜索了一下，解决方式很简单</p>
<pre><code>open node_modules/react-native/scripts
</code></pre>
<p> 选中<code>launchPackager.command</code>,右键切换它的默认打开工具</p>
<p> <img src="/uploads/react-native-open-shell.png"></p>
<h5 id="致谢"><a href="#致谢" class="headerlink" title="致谢"></a>致谢</h5><p> <a href="https://stackoverflow.com/questions/37814803/how-to-get-react-native-run-ios-to-open-in-iterm-instead-of-terminal-on-a-macos">https://stackoverflow.com/questions/37814803/how-to-get-react-native-run-ios-to-open-in-iterm-instead-of-terminal-on-a-macos</a></p>
]]></content>
  </entry>
  <entry>
    <title>解决 Mac OS 删除文件后磁盘空间不更新的问题</title>
    <url>/2020/01/01/Mac-Diskspace-release/</url>
    <content><![CDATA[<p>这个问题存在了很久，一直也没有找到解决的办法，今天上网查询后发现，这个问题只存在于使用了Time Machine的用户，原因是因为Time Machine的快照自动生成造成的，于是试着按照解决方法查询了下本地快照</p>
<pre><code>sudo tmutil listlocalsnapshots /
</code></pre>
<p>得到如下结果,确实Mac在自动的生成系统的快照</p>
<pre><code>com.apple.TimeMachine.2019-12-31-214148.local
com.apple.TimeMachine.2019-12-31-223649.local
com.apple.TimeMachine.2020-01-01-103649.local
com.apple.TimeMachine.2020-01-01-113743.local
com.apple.TimeMachine.2020-01-01-124353.local
com.apple.TimeMachine.2020-01-01-143927.local
com.apple.TimeMachine.2020-01-01-153651.local
</code></pre>
<p>试着删除其中的一个快照</p>
<pre><code>tmutil deletelocalsnapshots 2019-12-31-214148
</code></pre>
<p>发现系统的空间立刻就释放了，猜测就是以为Time Machine的快照自动生成导致的，不知道是Mac系统的bug还是因为备份的策略,  试着写了一个Ruby的脚本来自动的删除这些快照，希望对遇到此问题的人有帮助:</p>
<pre><code>#/bin/bash

#diskspace info
puts &quot;Current Diskspace info:&quot; 
puts &quot;---------&quot;
puts %x[df -lh /]

#list localsnapshots
puts &quot;\n\n---------&quot;
list = %x[tmutil listlocalsnapshots /]
puts list

#delete snapshots
puts &quot;\n\n---------&quot;
puts &quot;Start delete snapshots:&quot;
matches = list.scan(/\d&#123;4&#125;-\d&#123;2&#125;-\d&#123;2&#125;-\d&#123;6&#125;/)
matches.each_with_index&#123;|snapshoot,index|
    puts &quot;delete the listlocalsnapshots #&#123;snapshoot&#125;&quot;
    sh = &quot;tmutil deletelocalsnapshots #&#123;snapshoot&#125;&quot;
    system(sh)
&#125;

#diskspace info after delete snapshot
puts puts &quot;\n\n---------&quot;
puts &quot;Diskspace info after delete snapshots:&quot;
puts %x[df -lh /]
</code></pre>
<p>将上面脚本保存为snapshots_clear.rb,或从我保存的gist上<a href="https://gist.github.com/welsonla/0e4c4a818abfae0400a4087b54e81c43">下载</a><br>执行. </p>
<pre class="line-numbers language-shell"><code class="language-shell">ruby snapshots_clear.rb
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h5 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h5><p><a href="http://nb.zol.com.cn/671/6715453.html">Mac瘦身技巧 删除文件后可用空间还变少了？</a><br><a href="https://forums.macrumors.com/threads/solution-reclaim-storage-back-from-system.2073174/">Solution: Reclaim storage back from “System”</a></p>
]]></content>
      <categories>
        <category>Mac</category>
      </categories>
  </entry>
  <entry>
    <title>Mac OS 安装 配置Laravel开发环境</title>
    <url>/2020/01/01/composer-and-laravel-setup/</url>
    <content><![CDATA[<h3 id="使用Homebrew安装PHP-7-3"><a href="#使用Homebrew安装PHP-7-3" class="headerlink" title="使用Homebrew安装PHP 7.3"></a>使用Homebrew安装PHP 7.3</h3><p>实用brew的好处就是PHP版本可以不被系统升级而改变，从而保证升级系统不会影响PHP环境</p>
<pre><code>brew install php@7.3
brew link php@7.3
</code></pre>
<h3 id="安装Composer"><a href="#安装Composer" class="headerlink" title="安装Composer"></a>安装Composer</h3><pre><code>wget https://getcomposer.org/installer
php -r &quot;copy(&#39;https://getcomposer.org/installer&#39;, &#39;composer-setup.php&#39;);&quot;
php -r &quot;if (hash_file(&#39;sha384&#39;, &#39;composer-setup.php&#39;) === &#39;baf1608c33254d00611ac1705c1d9958c817a1a33bce370c0595974b342601bd80b92a3f46067da89e3b06bff421f182&#39;) &#123; echo &#39;Installer verified&#39;; &#125; else &#123; echo &#39;Installer corrupt&#39;; unlink(&#39;composer-setup.php&#39;); &#125; echo PHP_EOL;&quot;
php composer-setup.php
php -r &quot;unlink(&#39;composer-setup.php&#39;);&quot;
</code></pre>
<h3 id="添加到全局"><a href="#添加到全局" class="headerlink" title="添加到全局"></a>添加到全局</h3><pre><code>mv composer.phar /usr/local/bin/composer
</code></pre>
<h3 id="设置国内镜像"><a href="#设置国内镜像" class="headerlink" title="设置国内镜像"></a>设置国内镜像</h3><pre><code>composer config -g repo.packagist composer https://mirrors.aliyun.com/composer/  
</code></pre>
<h3 id="安装Composer多线程下载支持"><a href="#安装Composer多线程下载支持" class="headerlink" title="安装Composer多线程下载支持"></a>安装Composer多线程下载支持</h3><pre><code> composer global require hirak/prestissimo
</code></pre>
<h3 id="安装laravel"><a href="#安装laravel" class="headerlink" title="安装laravel"></a>安装laravel</h3><pre><code>composer global require laravel/installer
</code></pre>
]]></content>
      <categories>
        <category>PHP</category>
      </categories>
  </entry>
  <entry>
    <title>使用阿里云加速Maven包更新</title>
    <url>/2020/11/28/speed-up-maven/</url>
    <content><![CDATA[<p>阿里云maven镜像官方地址: <a href="https://maven.aliyun.com/mvn/guide">https://maven.aliyun.com/mvn/guide</a></p>
<p>mac用户首先建立 <code>~/.m2/settings.conf</code> 文件，然后将阿里云的Maven配置写入到文件, 然后重新加载maven配置即可, 完整配置如下</p>
<pre><code>&lt;settings xmlns=&quot;http://maven.apache.org/SETTINGS/1.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;
  xsi:schemaLocation=&quot;http://maven.apache.org/SETTINGS/1.0.0
                      https://maven.apache.org/xsd/settings-1.0.0.xsd&quot;&gt;
    &lt;mirrors&gt;
        &lt;mirror&gt;
            &lt;id&gt;aliyunmaven&lt;/id&gt;
            &lt;mirrorOf&gt;*&lt;/mirrorOf&gt;
            &lt;name&gt;阿里云公共仓库&lt;/name&gt;
            &lt;url&gt;https://maven.aliyun.com/repository/public&lt;/url&gt;
        &lt;/mirror&gt;
    &lt;/mirrors&gt;
&lt;/settings&gt;
</code></pre>
<h4 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h4><p><a href="https://developer.aliyun.com/article/78124">https://developer.aliyun.com/article/78124</a></p>
]]></content>
  </entry>
  <entry>
    <title>Hello, Nuphy Halo 65</title>
    <url>/2022/11/28/Hello-Nuphy-Halo-65/</url>
    <content><![CDATA[<p><img src="/uploads/Halo65.jpg" alt="Halo65"></p>
<h3 id="购买理由"><a href="#购买理由" class="headerlink" title="购买理由"></a>购买理由</h3><p>很早就关注了Halo 65 这款键盘，一是因为颜值确实比较喜欢，其次是<code>三模</code>，支持蓝牙、2.4G与有线三种连接模式，只是一直没有在国内上市，双十一的时候发现淘宝居然上架了Halo 65，轴体比海外版本要少，据说轴也不太一样，因为之前比较习惯使用红轴键盘，所以轴体选择的<code>簌簌晚风轴</code>， 线性轴体，没有段落感，也没有青轴那么吵闹。</p>
<h3 id="拆箱与配件"><a href="#拆箱与配件" class="headerlink" title="拆箱与配件"></a>拆箱与配件</h3><p>等了两天就收到了顺丰寄来的快递，快递包裹很厚，拆开意外的发现店铺还额外赠送了一套黑色的键帽，算是一份意外的惊喜</p>
<p>外包装袋上还有二次元的形象印刷，打开盒子，发现还有几张键盘定制的二次元贴纸，然后是键盘防尘罩，键盘主体，侧面有一个Type-C数据线接口，一个开关键、还有一个2.4G的接受器插在侧面<br>还有一个配件包装盒子,包含：</p>
<ul>
<li>黑、红、绿、白集中体验轴体， </li>
<li>几个替换的其他颜色的键帽</li>
<li>一个拔轴拔键器</li>
<li>一条Type-C接口的键盘数据线</li>
</ul>
<p><img src="/uploads/caps.jpg" alt="配件与赠送的键帽"></p>
<p>键盘第一感觉就是重，键盘上盖板是金属材质，腰下下部为塑料材质，整体感觉比之前我那把HHKB要重不少。</p>
<p>因为Halo 65官网的说明书比较难找，附带的说明书也记录的不太清楚，导致第一天一直没有找到如何开启蓝牙配对，一直使用的是2.4G来连接，体验下来感觉轴体比之前使用的红轴手感略重，但是按键的触感很不错，声音听着也很舒服，Nuphy为Halo 65都配置了隐声空格键，使空格键的敲击没有了弹簧音，减少了敲击空格键的噪音，算是一个不错的设计。</p>
<p><img src="/uploads/keyboard-halo65.JPG" alt="键盘一览"></p>
<h3 id="常用键盘快捷键"><a href="#常用键盘快捷键" class="headerlink" title="常用键盘快捷键"></a>常用键盘快捷键</h3><p>记录一下Halo 65键盘的一些常用的快捷键，做个备忘:</p>
<p><code>Fn+Q、W、E</code> 对应蓝牙设备1、2、3,</p>
<p><code>Fn+R</code> 连接2.4G设备</p>
<p><code>Fn+X+C</code> 关闭自动休眠模式</p>
<p><code>Fn+X+V</code> 开启自动休眠模式</p>
<p><code>Fn+L</code> 查看电池点亮， 绿 &gt; 80%,  蓝 &gt; 20%, 红 &lt; 20%</p>
<p><code>~</code> Fn+Shift+Esc</p>
<p><code>Fn+H&lt;&gt;</code> 调整腰线的灯光亮度</p>
<p><code>Fn+H+→</code> 切换灯光颜色</p>
<p><code>Fn+H+←</code> 切换腰线灯光模式</p>
<p><code>Fn+←</code>切换键帽灯光模式</p>
<h3 id="完全关闭键盘灯光效果"><a href="#完全关闭键盘灯光效果" class="headerlink" title="完全关闭键盘灯光效果"></a>完全关闭键盘灯光效果</h3><p><code>Fn+&lt;-</code> 与 <code>Fn+H+&lt;-</code> 调节可以完全关闭键盘等与侧面腰线灯光，这样能节约不少的电量，通过这几天的使用发现即使关闭键帽灯光不关闭侧面的腰线灯光，键盘的电量还是坚持不了一周，还是续航比较重要。</p>
<h3 id="最后附上官方客服发来的说明书"><a href="#最后附上官方客服发来的说明书" class="headerlink" title="最后附上官方客服发来的说明书"></a>最后附上官方客服发来的说明书</h3><p><img src="/uploads/Halo65-intro.png" alt="Halo 65 说明书"></p>
]]></content>
      <categories>
        <category>工具控</category>
      </categories>
      <tags>
        <tag>机械键盘</tag>
        <tag>Nuphy</tag>
        <tag>Halo 65</tag>
      </tags>
  </entry>
  <entry>
    <title>deploy nuxt ssr with pm2 and nginx</title>
    <url>/2022/11/29/deploy-nuxt-ssr-with-pm2-and-nginx/</url>
    <content><![CDATA[<h3 id="Why">Why</h3>
<p>服务端渲染能更容易做SEO，方便每个页面单独的设置关键词以便被搜索引擎抓取，让其他人更容易在网络上搜索到。</p>
<h3 id="测试-SEO-关键词">测试 SEO 关键词</h3>
<p>很多但页面应用可能不能正确的让搜索引擎抓取你的页面头部keywords，一个简单的测试方法就是使用一些第三方网站来测试抓取效果</p>
<p><a href="https://seo.chinaz.com/">https://seo.chinaz.com/</a><br>
<a href="https://www.aizhan.com/">https://www.aizhan.com/</a><br>
<a href="https://pagespeed.web.dev/">https://pagespeed.web.dev/</a></p>
<h3 id="切换Nuxt到ssr模式">切换Nuxt到ssr模式</h3>
<p>如果你的nuxt应用之前使用的是静态站点的模式，请在nuxt.config.json里更新或删除如下配置</p>
<pre><code>ssr: true,
target: 'server'
</code></pre>
<h3 id="设置应用对应的端口">设置应用对应的端口</h3>
<p>在<code>package.json</code>文件中增加</p>
<pre><code>&quot;config&quot;: &#123;
    &quot;nuxt&quot;: &#123;
        &quot;host&quot;: &quot;0.0.0.0&quot;,
        &quot;port&quot;: &quot;3334&quot;
    &#125;
&#125;
</code></pre>
<h3 id="安装pm2">安装pm2</h3>
<pre><code>npm install pm2@latest -g
</code></pre>
<h3 id="生成pm2配置文件">生成pm2配置文件</h3>
<p>运行一下命令，这将会在你的项目目录下生成一个名为<code>ecosystem.config.js</code>配置文件</p>
<pre><code>pm2 ecosystem
</code></pre>
<h3 id="修改pm2配置文件-增加apps节点">修改pm2配置文件, 增加apps节点</h3>
<pre><code>apps : [
    &#123;
        name: 'blog', # 修改为您的项目名称
        exec_mode: 'cluster',
        instances: '2', # 按需设置进程数量
        script: './node_modules/nuxt/bin/nuxt.js',
        args: 'start'
    &#125;
]
</code></pre>
<h3 id="启动pm2">启动pm2</h3>
<pre><code>npm run pm2
</code></pre>
<h3 id="查看运行实例">查看运行实例</h3>
<pre><code>pm2 list
</code></pre>
<h3 id="常用pm2命令">常用pm2命令</h3>
<pre><code># 重启应用
pm2 restart all
pm2 restart [name]

# 删除应用
pm2 delete [name]

# 停止
pm2 stop all
pm2 stop [name]
</code></pre>
<h3 id="启动pm2控制台，查看实时访问">启动pm2控制台，查看实时访问</h3>
<pre><code>pm2 monit
</code></pre>
<p><img src="/uploads/pm2_monit.png" alt="pm2 monit"></p>
<h3 id="在-packge-json-文件的-scripts-中增加pm2启动命令">在 <code>packge.json</code> 文件的 <code>scripts</code> 中增加pm2启动命令</h3>
<pre><code>&quot;scripts&quot;: &#123;
    &quot;dev&quot;: &quot;nuxt --hostname '0.0.0.0'&quot;,
    &quot;build&quot;: &quot;nuxt build&quot;,
    &quot;start&quot;: &quot;nuxt start&quot;,
    &quot;generate&quot;: &quot;nuxt generate&quot;,
    &quot;pm2&quot;: &quot;nuxt build &amp;&amp; pm2 start npm --name labapps -- run start&quot;
  &#125;,
</code></pre>
<h3 id="部署到web服务器">部署到web服务器</h3>
<p>将除了<code>node_modules</code>目录之外的所有文件复制到你的web目录下面，启动web实例</p>
<pre><code>npm run pm2
</code></pre>
<h3 id="修改nginx配置，增加反向代理">修改nginx配置，增加反向代理</h3>
<p>注意，反向代理的端口必须与你的<code>package.json</code>中设置的应用的端口相匹配，这样才能在同一台主机，运行多个pm2实例，并且互不影响</p>
<pre><code>upstream labapps &#123;
    server 127.0.0.1:3334;
    keepalive 64;
&#125;

server &#123;
    server_name timebot.net;  # 设置为你的域名

    add_header X-Frame-Options &quot;SAMEORIGIN&quot;;
    add_header X-XSS-Protection &quot;1; mode=block&quot;;
    add_header X-Content-Type-Options &quot;nosniff&quot;;
    add_header Set-Cookie &quot;Path=/; HttpOnly; Secure&quot;;

    #charset koi8-r;
    access_log /var/log/nginx/blog.access.log;
    error_log /var/log/nginx/blog.error.log debug;

    location / &#123;
        access_log off;
        root /webroot/blog; # 修改为你的项目路径
        index index.html index.htm;
        try_files $uri $uri/ /index.html;
        if ($request_filename ~* .*\.(js|css|woff|png|jpg|jpeg)$) &#123;
            expires 1d;
        &#125;

        if ($request_filename ~* .*\.(?:htm|html)$) &#123;
            add_header Cache-Control no-cache,no-store,must-revalidate;
        &#125;

        location / &#123;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection &quot;upgrade&quot;;
            proxy_set_header Host $host;
            proxy_set_header X-Nginx-Proxy true;
            proxy_cache_bypass $http_upgrade;
            proxy_pass http://labapps; #反向代理
        &#125;
    &#125;

    error_page 500 502 503 504 /50x.html;

    location = /50x.html &#123;
        root /usr/share/nginx/html;
    &#125;
&#125;
</code></pre>
<h3 id="查看访问">查看访问</h3>
<pre><code>pm2 monit
</code></pre>
<h3 id="查看实时日志">查看实时日志</h3>
<pre><code>pm2 logs
</code></pre>
<p>另外，pm2还提供了<code>pm2 monitor</code>更强大的web端控制台，可以在web实时查看你的服务运行情况，只需要简单地配置即可.<br>
<a href="https://pm2.keymetrics.io/docs/usage/monitoring/">https://pm2.keymetrics.io/docs/usage/monitoring/</a></p>
<h3 id="参考资料">参考资料</h3>
<p><a href="https://nuxtjs.org/deployments/pm2/">Deploy Nuxt using PM2</a><br>
<a href="https://zhuanlan.zhihu.com/p/398023953">常用的seo查询工具(有哪些seo软件网站平台)</a></p>
]]></content>
      <categories>
        <category>Node</category>
      </categories>
      <tags>
        <tag>Nuxt</tag>
        <tag>pm2</tag>
        <tag>Nginx</tag>
        <tag>ssr</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2015/10/10/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="http://hexo.io/">Hexo</a>! This is your very first post. Check <a href="http://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="http://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>More info: <a href="http://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo server
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>More info: <a href="http://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo generate
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>More info: <a href="http://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo deploy
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>More info: <a href="http://hexo.io/docs/deployment.html">Deployment</a></p>
]]></content>
      <categories>
        <category>something</category>
      </categories>
  </entry>
  <entry>
    <title>Blog迁移到了Hexo</title>
    <url>/2015/10/10/start-using-hexo/</url>
    <content><![CDATA[<h2 id="Octopress的痛点"><a href="#Octopress的痛点" class="headerlink" title="Octopress的痛点"></a>Octopress的痛点</h2><p>受不了<code>_deploy</code>文件夹的折磨，以及AutoGenerate Disable这错误导致生成问题，rake deploy靠运气成功,今天将blog迁移到了hexo</p>
<h2 id="Hexo优点"><a href="#Hexo优点" class="headerlink" title="Hexo优点"></a>Hexo优点</h2><ol>
<li>更简洁的语法</li>
</ol>
<pre class="line-numbers language-ruby"><code class="language-ruby"> hexo <span class="token keyword">new</span> <span class="token string">"title"</span>
 hexo <span class="token keyword">new</span> <span class="token class-name">page</span>
 hexo g <span class="token comment" spellcheck="true">#生成</span>
 hexo d <span class="token comment" spellcheck="true">#部署</span>
 hexo s <span class="token comment" spellcheck="true">#运行</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ol start="2">
<li><p>更快的生成速度</p>
</li>
<li><p>直观的部署结果</p>
</li>
</ol>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><ol>
<li><p>安装Node  </p>
<p> 参考node官方 <a href="https://nodejs.org/">https://nodejs.org</a></p>
</li>
<li><p>安装hexo以及用到的东西</p>
</li>
</ol>
<pre class="line-numbers language-ruby"><code class="language-ruby">npm install <span class="token operator">-</span>g hexo<span class="token operator">-</span>cli
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<ol start="3">
<li>创建Blog</li>
</ol>
<pre class="line-numbers language-ruby"><code class="language-ruby">hexo init blog
cd blog
npm install

<span class="token comment" spellcheck="true">#安装Server</span>
npm install hexo<span class="token operator">-</span>server <span class="token operator">--</span>save
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h2><p>创建文章  </p>
<pre class="line-numbers language-ruby"><code class="language-ruby">hexo <span class="token keyword">new</span> <span class="token string">"first blog"</span>

<span class="token comment" spellcheck="true">#创建独立页面</span>
hexo <span class="token keyword">new</span> <span class="token class-name">page</span> <span class="token string">"about"</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="为页面设置多个Tag"><a href="#为页面设置多个Tag" class="headerlink" title="为页面设置多个Tag"></a>为页面设置多个Tag</h2><p>使用如下格式可以为文章设置多个tag</p>
<pre><code>tags:
  - hello
  - world
</code></pre>
<p>预备部署  </p>
<pre class="line-numbers language-ruby"><code class="language-ruby"><span class="token comment" spellcheck="true">#添加github部署支持</span>
npm install hexo<span class="token operator">-</span>deployer<span class="token operator">-</span>git <span class="token operator">--</span>save


<span class="token comment" spellcheck="true">## 修改_config.yml  </span>
deploy<span class="token punctuation">:</span>
  type<span class="token punctuation">:</span> git <span class="token comment" spellcheck="true">#不要再使用github作为type</span>
  repo<span class="token punctuation">:</span> git<span class="token variable">@github</span><span class="token punctuation">.</span>com<span class="token punctuation">:</span><span class="token operator">&lt;</span>yourname<span class="token operator">></span><span class="token operator">/</span><span class="token operator">&lt;</span>yourname<span class="token operator">></span><span class="token punctuation">.</span>github<span class="token punctuation">.</span>io<span class="token punctuation">.</span>git
  branch<span class="token punctuation">:</span> master
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="部署静态到github"><a href="#部署静态到github" class="headerlink" title="部署静态到github"></a>部署静态到github</h2><pre><code>hexo clean &amp;&amp; hexo deploy
</code></pre>
<h2 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h2><h3 id="安装主题，推荐Next-有详细的安装文档"><a href="#安装主题，推荐Next-有详细的安装文档" class="headerlink" title="安装主题，推荐Next, 有详细的安装文档"></a>安装主题，推荐Next, 有详细的安装文档</h3><h5 id="安装参考"><a href="#安装参考" class="headerlink" title="安装参考"></a>安装参考</h5><p><a href="http://theme-next.iissnan.com/five-minutes-setup.html">http://theme-next.iissnan.com/five-minutes-setup.html</a></p>
<h5 id="详细的配置"><a href="#详细的配置" class="headerlink" title="详细的配置"></a>详细的配置</h5><p><a href="https://github.com/iissnan/hexo-theme-next/wiki/%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE%E5%8F%82%E8%80%83">https://github.com/iissnan/hexo-theme-next/wiki/主题配置参考</a></p>
<h3 id="添加RSS"><a href="#添加RSS" class="headerlink" title="添加RSS"></a>添加RSS</h3><p><a href="https://github.com/hexojs/hexo-generator-feed"></a></p>
<pre class="line-numbers language-js"><code class="language-js">npm install hexo<span class="token operator">-</span>generator<span class="token operator">-</span>feed <span class="token operator">--</span>save
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="上传图片"><a href="#上传图片" class="headerlink" title="上传图片"></a>上传图片</h3><pre class="line-numbers language-js"><code class="language-js">放到<span class="token punctuation">.</span><span class="token operator">/</span>source<span class="token operator">/</span>uploads文件夹下，代码中使用
<span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token operator">/</span>uploads<span class="token operator">/</span>xxx<span class="token punctuation">.</span>png<span class="token punctuation">)</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h3 id="修改生成文件的格式"><a href="#修改生成文件的格式" class="headerlink" title="修改生成文件的格式"></a>修改生成文件的格式</h3><p>修改为Year-Month-Day-title样式，方便查找<br>打开<code>_config.yml</code></p>
<pre class="line-numbers language-js"><code class="language-js">new_post_name<span class="token punctuation">:</span> <span class="token punctuation">:</span>year<span class="token operator">-</span><span class="token punctuation">:</span>month<span class="token operator">-</span><span class="token punctuation">:</span>day<span class="token operator">-</span><span class="token punctuation">:</span>title<span class="token punctuation">.</span>md 
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="开启代码高亮"><a href="#开启代码高亮" class="headerlink" title="开启代码高亮"></a>开启代码高亮</h3><p>其实hexo本身已经自带了代码高亮，但是我的从<code>2.x</code>的版本升级到<code>6.0</code>不知道为什么就失效了，所以使用了第三方的高亮插件来代替<br><a href="https://github.com/ele828/hexo-prism-plugin">https://github.com/ele828/hexo-prism-plugin</a></p>
<pre><code>npm i -S hexo-prism-plugin
</code></pre>
<p>修改<code>_config.xml</code>关闭<code>hilight</code>,替换成<code>prism_plugin</code></p>
<pre><code>prism_plugin:
  mode: &#39;preprocess&#39;
  theme: &#39;default&#39;
  line_number: true
highlight:
  enable: false
</code></pre>
]]></content>
      <categories>
        <category>something</category>
      </categories>
  </entry>
  <entry>
    <title>Learning figma day 1 - 基本操作与Figma的一些常用快捷键</title>
    <url>/2022/12/09/learning-figma-day-1/</url>
    <content><![CDATA[<h3 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h3><p>由于本人只有一台Macbook，以下快捷键都是在Mac系统下的，可能跟Windows系统略有不同</p>
<p><code>K</code> 等比缩放<br><code>V</code> 移动<br><code>CMD+左键</code> 快速选中Frame或组中的子元素<br><code>Shift + R</code> 标尺<br><code>CMD+滚轮</code> 放大缩小<br><code>Shift+ 方向键</code> 每次移动4px<br><code>CMD+左键框选</code> 可以防止拖动到底部的Frame整体，只框选范围内的元素<br><code>Shift + CMD + O</code> 外轮廓描边，转换成一个矩形面积</p>
<h4 id="图形"><a href="#图形" class="headerlink" title="图形"></a>图形</h4><p><code>R</code> 矩形<br><code>O</code> 圆形<br><code>L</code> 直线<br><code>T</code> 文字<br><code>A</code> 画框，快速选择页面原型尺寸，比如手机尺寸、桌面网页、Watch等</p>
<p>数值增加<br>所有的数值都可以在鼠标放到属性框附近的时候，按住Opt 按键左右拖拽鼠标进行增减</p>
<h4 id="图形属性菜单"><a href="#图形属性菜单" class="headerlink" title="图形属性菜单"></a>图形属性菜单</h4><p><img src="/uploads/figma-property.png"></p>
<h3 id="组和Frame"><a href="#组和Frame" class="headerlink" title="组和Frame"></a>组和Frame</h3><p><code>CMD + G</code> 编组<br><code>Opt + CMD + G</code> 合并为Frame<br><code>Shift + CMD + G</code> 取消编组或取消Frame</p>
<h3 id="AutoLayout"><a href="#AutoLayout" class="headerlink" title="AutoLayout"></a>AutoLayout</h3><p><code>Shift + A</code>  设置为AutoLayout布局</p>
]]></content>
      <categories>
        <category>Design</category>
      </categories>
      <tags>
        <tag>design</tag>
        <tag>figma</tag>
        <tag>study</tag>
      </tags>
  </entry>
  <entry>
    <title>Learning-figma-day-2 自定义样式与组件</title>
    <url>/2022/12/10/learning-figma-day-2/</url>
    <content><![CDATA[<p>只是记录一下学习Figma过程中的一些笔记，可能会有更多更方便的使用技巧。</p>
<h3 id="本地样式"><a href="#本地样式" class="headerlink" title="本地样式"></a>本地样式</h3><h4 id="添加本地样式"><a href="#添加本地样式" class="headerlink" title="添加本地样式"></a>添加本地样式</h4><p>在Figma 中不论是字体、颜色、样式等都可以添加为自定义的样式，操作步骤如下</p>
<p>点击属性右上的图标，弹出窗口中点击<code>+</code>按钮即可</p>
<p><img src="/uploads/figma-local-style@2x.png"></p>
<h4 id="使用本地样式"><a href="#使用本地样式" class="headerlink" title="使用本地样式"></a>使用本地样式</h4><p>之后我们再次点击此处就可以看到我们添加到自定义样式, 右侧的调整按钮是我们可以对保存的本地样式进行调整，这样调整后的样式会将使用该样式的元素同步进行更新，比如统一修改App的导航栏颜色、Tabbar的选中颜色等</p>
<p><img src="/uploads/figma-local-style-list.png"></p>
<h4 id="取消样式关联"><a href="#取消样式关联" class="headerlink" title="取消样式关联"></a>取消样式关联</h4><p>如果我们使用了本地样式，但是想自己对该样式进行单独的修改, 如应用了阴影等设置，但是想单独调整下阴影的大小，则点击该样式右侧的断开链接图标即可</p>
<p><img src="/uploads/figma-local-style-unlink.png"></p>
<h4 id="本地样式列表"><a href="#本地样式列表" class="headerlink" title="本地样式列表"></a>本地样式列表</h4><p>本地样式在我们鼠标单击空白处会在右侧的属性栏中进行显示，我们可以直接在此处对本地样式进行修改与删除，假如我们需要对设计统一修改色调就可以直接修改某一个本地样式<br><img src="/uploads/figma-local-styles-list.png"></p>
<h3 id="本地组件"><a href="#本地组件" class="headerlink" title="本地组件"></a>本地组件</h3><p>本地组件是为了更好的复用与批量修改，比如我们的新闻列表，每个条目的标题与简介、缩略图都是统一的，我们就可以做一个条目的组件来统一管理他们的样式，假如我们更新的标题的字号与颜色，所有使用到该组件的地方都会进行同步的修改，这样节省了我们每个都去单独修改的时间，也更方便让相同设计元素进行复用，降低设计更新的时间成本。</p>
<p>一般我们在一个设计稿中将所有的组件都放在同一个Frame中集中管理，不要在页面中创建组件，这样会在后期查找父组件比较费力，我们将一个设计稿中的本地组件都放置在同一个Frame中，这样不仅方便查找，而且比较清晰。</p>
<p>创建组件的快捷键为<code>Opt + CMD + K</code>, 也可以选中你的元素后，点击顶部的创建组件按钮</p>
<p><img src="/uploads/figma-create-component.png"></p>
<p>创建完毕组件之后，我们就可以按住<code>Opt</code>+拖动组件快速使用一个组件，多次复制之后，我们就能快速的完成一个新闻列表样式，我们可以单独对每个子组件的标题与描述进行修改，而不会影响父组件</p>
<p><img src="/uploads/figma-component-list.png"></p>
<p>当我们对父组件的属性进行修改时，子组件也会同步的更新样式, 可能这就是设计中的面向对象概念吧</p>
<p><img src="/uploads/figma-component-update.png"></p>
<h4 id="父组件与子组件概念"><a href="#父组件与子组件概念" class="headerlink" title="父组件与子组件概念"></a>父组件与子组件概念</h4><p>父组件与子组件的特点总结(不全面):</p>
<ul>
<li>更新父组件会同步将样式同步给使用到的子组件</li>
<li>子组件可以单独更新自己的文本、高度，而不会影响父组件</li>
<li>子组件如果想单独更新组件某些样式，可以同样断开链接之后进行单独的修改，方法同本地样式</li>
</ul>
<h4 id="本地库"><a href="#本地库" class="headerlink" title="本地库"></a>本地库</h4><p>本地样式与本地组件都会显示在本地资源库中，位置在Layers右侧的Assets栏目中, 从图中可以看到，我们将所有的组件放置在同一个Frame中的优势也显示出来了，这样就不会去多个页面下去寻找定义的组件，也节省了一部分的时间,本地库中的组件，我们可以直接拖动到设计页面中进行使用。</p>
<p><img src="/uploads/figma-assets.png"></p>
]]></content>
      <categories>
        <category>Design</category>
      </categories>
      <tags>
        <tag>design</tag>
        <tag>figma</tag>
        <tag>study</tag>
      </tags>
  </entry>
  <entry>
    <title>《&gt;TED演讲：我们为什么睡觉》 笔记</title>
    <url>/2023/07/02/Why-we-need-sleep/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>life</category>
      </categories>
      <tags>
        <tag>Sleep</tag>
        <tag>Health</tag>
      </tags>
  </entry>
</search>
